Dataset:Spiral/Full.csv
FS:True
Seed:1234
Size:3

Gen:1
TrainFitness:1.0
TestFitness:0.6666666666666666
MaxGenLen:500
Individual: def p():
  def adf0(index):
    if np.equal(sigmoid(x[index]),-161091.1668).all():
      return False
    else:
      return False
  def adf1(index):
    if np.greater(x[index],-025105.7397).all():
      return False
    else:
      return False
  def adf2(index):
    if np.less(x[index],-696759.5365).all():
      return True
    else:
      return False
  def adf3(index):
    if np.greater(psqrt(x[index]),-132163.8390).all():
      return True
    else:
      return True
  def adf4(index):
    if np.greater(np.tanh(x[index]),+620369.8468).all():
      return True
    else:
      return False
  def adf7(index):
    if np.less(x[index],+278126.8489).all():
      return False
    else:
      return True
  return multiple_operation([adf0(0)*-244.652, adf1(1)*-057.405, adf2(2)*+122.051, adf3(3)*+446.434, adf4(4)*-556.827, adf7(7)*-351.689], [0, 1, 0, 0, 0], 096.701)
result=p(); 1.0
IndLenGenome:283
IndGenome:[52, 36, 35, 67, 12, 17, 63, 27, 101, 9, 15, 37, 80, 32, 81, 43, 50, 23, 27, 83, 86, 41, 70, 77, 70, 38, 27, 78, 41, 90, 19, 95, 99, 56, 41, 66, 30, 58, 43, 77, 61, 91, 17, 52, 93, 87, 87, 87, 89, 58, 54, 29, 8, 91, 24, 24, 48, 76, 60, 75, 24, 67, 35, 51, 93, 59, 61, 84, 82, 28, 79, 15, 86, 96, 85, 17, 81, 57, 94, 38, 84, 31, 30, 74, 23, 11, 20, 89, 27, 2, 82, 28, 12, 46, 26, 75, 79, 9, 17, 32, 54, 50, 51, 3, 37, 67, 18, 98, 71, 29, 90, 32, 96, 52, 96, 38, 46, 58, 30, 38, 75, 83, 95, 41, 80, 32, 97, 96, 54, 97, 55, 30, 92, 61, 40, 47, 12, 98, 75, 86, 73, 95, 76, 76, 81, 75, 62, 87, 89, 95, 62, 62, 17, 53, 20, 45, 69, 78, 53, 37, 5, 13, 46, 66, 6, 59, 35, 32, 27, 75, 7, 44, 44, 36, 30, 61, 49, 33, 92, 73, 53, 45, 72, 83, 69, 32, 41, 83, 18, 27, 86, 15, 42, 78, 67, 84, 90, 85, 95, 32, 8, 76, 99, 37, 42, 7, 15, 68, 36, 6, 48, 75, 89, 9, 28, 57, 58, 43, 95, 76, 72, 96, 9, 59, 66, 40, 48, 71, 32, 63, 48, 5, 67, 99, 55, 14, 47, 10, 0, 79, 5, 88, 9, 4, 11, 81, 89, 20, 32, 88, 71, 60, 54, 61, 44, 63, 72, 13, 8, 72, 85, 21, 10, 75, 62, 55, 88, 67, 69, 38, 82, 99, 60, 22, 21, 61, 83, 71, 60, 26, 19, 81, 15]
last_save: 301

Gen:1
last_save: 301
Exit:TrueFalseFalse

Gen:1
TrainFitness:0.8333333333333334
TestFitness:0.8333333333333334
MaxGenLen:500
Individual: def p():
  def adf0(index):
    if np.equal(np.sin(x[index]),-916673.7687).all():
      return True
    else:
      return False
  def adf1(index):
    if np.greater(np.tanh(x[index]),-361161.7035).all():
      return True
    else:
      return True
  def adf2(index):
    if np.less(x[index],-175205.0368).all():
      return False
    else:
      return False
  def adf3(index):
    if np.less(x[index],+014946.4278).all():
      return True
    else:
      return False
  def adf4(index):
    if np.less(x[index],+242146.8999).all():
      return True
    else:
      return True
  def adf7(index):
    if np.equal(np.tanh(x[index]),+288068.6134).all():
      return False
    else:
      return False
  return multiple_operation([adf0(0)*-581.575, adf1(1)*+083.223, adf2(2)*-582.691, adf3(3)*+666.425, adf4(4)*+405.374, adf7(7)*-940.854], [1, 0, 0, 1, 1], 082.526)
result=p(); 0.8333333333333334
IndLenGenome:283
IndGenome:[83, 23, 50, 99, 51, 50, 87, 95, 78, 53, 89, 63, 84, 81, 50, 27, 95, 39, 95, 26, 65, 89, 72, 67, 51, 98, 35, 61, 32, 89, 88, 66, 95, 20, 14, 98, 68, 31, 42, 94, 13, 75, 32, 48, 28, 55, 68, 38, 50, 73, 32, 96, 90, 60, 60, 73, 14, 52, 74, 89, 74, 55, 48, 27, 23, 33, 98, 12, 86, 28, 61, 81, 18, 25, 69, 81, 64, 51, 45, 74, 29, 39, 59, 12, 58, 81, 16, 54, 34, 7, 17, 49, 69, 1, 41, 80, 61, 10, 9, 18, 66, 52, 96, 48, 57, 61, 53, 23, 55, 88, 23, 75, 74, 58, 51, 77, 74, 66, 27, 82, 76, 85, 88, 10, 42, 74, 13, 78, 16, 50, 29, 55, 49, 81, 90, 96, 71, 47, 55, 97, 61, 83, 97, 50, 80, 95, 16, 20, 28, 82, 27, 95, 56, 28, 97, 84, 48, 46, 56, 75, 27, 34, 81, 77, 80, 85, 81, 25, 13, 59, 25, 11, 83, 24, 96, 1, 14, 22, 49, 94, 74, 74, 86, 70, 82, 58, 11, 79, 97, 74, 2, 7, 97, 38, 99, 51, 57, 16, 89, 41, 14, 69, 19, 5, 59, 82, 11, 27, 7, 72, 82, 98, 51, 17, 55, 27, 42, 28, 41, 59, 27, 64, 52, 2, 46, 88, 31, 55, 4, 18, 93, 55, 56, 64, 28, 71, 7, 66, 42, 72, 12, 95, 50, 86, 2, 7, 63, 7, 40, 94, 21, 69, 85, 29, 35, 76, 35, 60, 97, 26, 92, 81, 6, 32, 9, 57, 22, 95, 100, 0, 62, 3, 50, 96, 81, 53, 23, 27, 36, 89, 45, 43, 52]
last_save: 302

Gen:295
TrainFitness:1.0
TestFitness:0.8333333333333334
MaxGenLen:575
Individual: def p():
  def adf0(index):
    if np.equal(psqrt(x[index]),-535197.7673).all():
      return False
    else:
      return True
  def adf1(index):
    if np.equal(psqrt(x[index]),-634722.9191).all():
      return True
    else:
      return False
  def adf2(index):
    if np.equal(x[index],-310276.8079).all():
      return True
    else:
      return False
  def adf3(index):
    if np.equal(x[index],+282932.4791).all():
      return False
    else:
      return False
  def adf4(index):
    if np.less(x[index],+009476.7415).all():
      if np.less(x[index],+442615.9374).all():
        return False
      else:
        return False
      return True
    else:
      if np.less(psqrt(x[index]),-314937.5212).all():
        return False
      else:
        return True
      return False
  def adf7(index):
    if np.less(x[index],+959526.4424).all():
      return False
    else:
      return False
  return multiple_operation([adf0(0)*-157.531, adf1(1)*-247.915, adf2(2)*-129.243, adf3(3)*+476.741, adf4(4)*-952.444, adf7(7)*+593.747], [0, 1, 1, 0, 1], 523.569)
result=p(); 1.0
IndLenGenome:463
IndGenome:[18, 67, 65, 45, 92, 94, 65, 94, 75, 7, 75, 73, 65, 91, 99, 37, 47, 36, 97, 3, 77, 48, 80, 39, 41, 62, 41, 84, 51, 74, 56, 93, 24, 67, 32, 52, 9, 41, 79, 21, 62, 21, 55, 19, 26, 77, 76, 95, 58, 13, 91, 10, 12, 77, 96, 28, 40, 77, 69, 70, 93, 63, 61, 95, 33, 42, 42, 91, 72, 98, 52, 79, 93, 62, 34, 7, 49, 41, 15, 87, 85, 46, 51, 82, 19, 12, 94, 63, 100, 70, 89, 94, 87, 66, 67, 54, 41, 75, 59, 55, 29, 65, 72, 14, 74, 54, 12, 6, 71, 5, 79, 33, 67, 84, 17, 19, 98, 85, 37, 78, 95, 69, 15, 82, 43, 41, 54, 79, 33, 67, 85, 62, 21, 22, 19, 62, 77, 76, 95, 58, 13, 91, 10, 75, 59, 55, 29, 65, 72, 66, 74, 54, 12, 34, 71, 5, 79, 62, 34, 7, 49, 41, 15, 87, 85, 63, 51, 43, 79, 93, 62, 34, 7, 49, 41, 15, 87, 85, 46, 51, 82, 19, 12, 94, 63, 75, 70, 91, 94, 87, 66, 67, 54, 41, 75, 59, 55, 29, 65, 72, 14, 74, 54, 12, 6, 71, 5, 79, 33, 67, 84, 17, 19, 98, 85, 37, 78, 95, 69, 15, 82, 43, 5, 46, 79, 7, 52, 86, 39, 12, 44, 53, 59, 8, 71, 51, 39, 33, 63, 30, 15, 60, 11, 52, 34, 26, 96, 28, 90, 11, 53, 43, 48, 74, 82, 50, 86, 34, 64, 58, 61, 31, 4, 77, 29, 50, 43, 81, 21, 29, 68, 65, 48, 63, 51, 48, 10, 58, 66, 10, 23, 68, 61, 93, 51, 32, 82, 19, 46, 26, 35, 65, 13, 33, 16, 61, 96, 88, 93, 74, 79, 45, 2, 36, 28, 84, 47, 43, 98, 33, 21, 92, 63, 46, 33, 34, 44, 20, 83, 77, 32, 32, 68, 39, 23, 21, 48, 51, 68, 91, 30, 62, 49, 84, 98, 57, 49, 58, 20, 94, 70, 37, 73, 27, 66, 60, 93, 89, 23, 67, 43, 45, 58, 87, 49, 80, 52, 29, 11, 21, 76, 85, 48, 21, 68, 22, 59, 76, 16, 25, 7, 27, 60, 88, 22, 95, 9, 11, 14, 100, 14, 98, 95, 17, 69, 3, 49, 34, 72, 50, 100, 47, 94, 49, 38, 36, 50, 21, 58, 47, 46, 83, 81, 47, 28, 23, 94, 96, 12, 28, 87, 6, 30, 97, 95, 100, 9, 2, 49, 44, 44, 20, 98, 75, 25, 16, 4, 54, 10, 94, 85, 1, 87, 66, 13, 71, 18, 41, 18, 92, 21, 16, 12, 36, 49, 23, 44, 56, 31, 48, 58, 58, 23, 61, 35, 47, 34, 11, 4, 59, 45, 99, 66]
last_save: 302

Gen:295
last_save: 302
Exit:TrueFalseFalse

Gen:1
TrainFitness:0.6666666666666666
TestFitness:0.8333333333333334
MaxGenLen:500
Individual: def p():
  def adf0(index):
    if np.equal(x[index],+463131.2557).all():
      return True
    else:
      return True
  def adf1(index):
    if np.less(np.tanh(x[index]),+893102.4415).all():
      return False
    else:
      return False
  def adf2(index):
    if np.greater(x[index],-807859.5686).all():
      return True
    else:
      return False
  def adf3(index):
    if np.less(x[index],+028073.8188).all():
      return True
    else:
      return False
  def adf4(index):
    if np.less(rlog(x[index]),+233019.6722).all():
      return False
    else:
      return False
  def adf7(index):
    if np.equal(rlog(x[index]),-700889.4483).all():
      return False
    else:
      return True
  return multiple_operation([adf0(0)*+526.485, adf1(1)*+529.804, adf2(2)*+167.558, adf3(3)*-664.730, adf4(4)*+746.099, adf7(7)*-383.373], [1, 0, 0, 0, 1], 908.112)
result=p(); 0.6666666666666666
IndLenGenome:283
IndGenome:[53, 60, 36, 65, 66, 50, 46, 12, 96, 14, 83, 29, 17, 47, 68, 32, 19, 95, 47, 91, 84, 91, 51, 11, 89, 60, 54, 39, 87, 59, 6, 77, 97, 70, 89, 91, 24, 57, 75, 79, 63, 39, 85, 72, 68, 61, 79, 41, 24, 44, 60, 58, 62, 17, 76, 61, 53, 76, 37, 27, 64, 46, 84, 27, 85, 71, 92, 25, 64, 24, 24, 97, 53, 14, 66, 75, 42, 34, 18, 72, 17, 79, 91, 81, 83, 86, 77, 29, 63, 93, 85, 47, 25, 40, 88, 58, 81, 33, 53, 60, 22, 39, 56, 18, 29, 52, 55, 48, 26, 57, 89, 56, 58, 81, 58, 86, 99, 85, 37, 80, 90, 22, 96, 80, 81, 35, 12, 13, 24, 99, 91, 72, 2, 45, 68, 82, 75, 98, 82, 63, 48, 85, 56, 72, 24, 20, 77, 32, 100, 77, 42, 38, 97, 78, 81, 88, 21, 93, 30, 61, 22, 77, 36, 46, 63, 25, 38, 55, 20, 18, 15, 47, 18, 71, 84, 53, 20, 64, 50, 28, 94, 83, 27, 18, 79, 30, 53, 25, 72, 61, 7, 36, 12, 69, 36, 1, 3, 69, 24, 94, 99, 84, 60, 63, 70, 45, 35, 32, 25, 64, 19, 36, 78, 28, 38, 36, 77, 6, 19, 45, 50, 56, 45, 38, 74, 68, 12, 2, 44, 50, 82, 2, 25, 46, 58, 97, 80, 66, 65, 12, 71, 93, 56, 5, 55, 78, 93, 100, 93, 100, 23, 39, 75, 79, 72, 79, 74, 89, 91, 21, 8, 19, 71, 21, 50, 47, 47, 77, 8, 48, 50, 59, 54, 5, 19, 50, 16, 90, 91, 97, 81, 11, 22]
last_save: 303

Gen:10
TrainFitness:0.8333333333333334
TestFitness:0.6666666666666666
MaxGenLen:500
Individual: def p():
  def adf0(index):
    if np.less(x[index],-533720.9493).all():
      return True
    else:
      return True
  def adf1(index):
    if np.greater(x[index],-553156.1876).all():
      return True
    else:
      return False
  def adf2(index):
    if np.greater(np.sin(x[index]),-118050.9352).all():
      if np.less(np.tanh(x[index]),-030315.5550).all():
        return False
      else:
        return False
      return True
    else:
      if np.greater(rlog(x[index]),-535685.5197).all():
        return False
      else:
        return True
      return True
  def adf3(index):
    if np.less(x[index],+024177.7958).all():
      if np.greater(x[index],+694141.7511).all():
        return False
      else:
        return False
      return True
    else:
      if np.less(np.cos(x[index]),-558118.6208).all():
        return True
      else:
        return True
      return True
  def adf4(index):
    if np.equal(x[index],-658335.6968).all():
      return True
    else:
      return True
  def adf7(index):
    if np.less(np.tanh(x[index]),-198401.7850).all():
      if np.equal(np.tanh(x[index]),-570489.2084).all():
        if np.less(x[index],+658891.0780).all():
          return False
        else:
          return True
        return False
      else:
        if np.equal(x[index],-095819.1295).all():
          return False
        else:
          return False
        return False
      return False
    else:
      if np.equal(x[index],-277037.7503).all():
        return True
      else:
        return True
      return True
  return multiple_operation([adf0(0)*-606.342, adf1(1)*-845.410, adf2(2)*-457.046, adf3(3)*+442.658, adf4(4)*-873.999, adf7(7)*-742.844], [1, 1, 1, 0, 0], 259.643)
result=p(); 0.8333333333333334
IndLenGenome:473
IndGenome:[54, 86, 50, 43, 55, 31, 34, 25, 70, 95, 83, 43, 57, 72, 60, 49, 84, 39, 23, 46, 82, 72, 21, 72, 61, 95, 31, 17, 75, 45, 73, 91, 85, 86, 41, 38, 67, 36, 68, 39, 39, 42, 46, 57, 86, 66, 11, 7, 33, 61, 11, 38, 70, 25, 70, 69, 43, 15, 82, 65, 82, 56, 86, 75, 53, 69, 30, 63, 80, 23, 41, 35, 75, 95, 95, 60, 73, 33, 70, 27, 27, 48, 46, 18, 13, 87, 75, 83, 45, 26, 58, 75, 55, 81, 59, 47, 43, 72, 92, 3, 26, 29, 64, 85, 31, 12, 88, 30, 12, 44, 1, 47, 7, 47, 49, 55, 78, 43, 96, 49, 54, 94, 85, 36, 39, 34, 41, 4, 91, 77, 75, 11, 21, 41, 63, 44, 61, 85, 14, 73, 51, 99, 41, 85, 5, 88, 71, 91, 88, 36, 52, 20, 68, 22, 92, 38, 45, 89, 53, 87, 82, 95, 41, 76, 85, 98, 43, 53, 55, 46, 69, 6, 98, 0, 2, 55, 96, 52, 73, 72, 8, 91, 15, 45, 41, 19, 78, 84, 40, 71, 77, 58, 85, 70, 32, 67, 80, 38, 98, 15, 19, 52, 45, 57, 60, 84, 68, 59, 82, 10, 88, 64, 31, 55, 63, 2, 80, 52, 26, 5, 18, 58, 39, 31, 10, 27, 48, 60, 17, 72, 67, 5, 77, 7, 54, 91, 48, 60, 29, 65, 48, 41, 29, 91, 92, 99, 65, 11, 31, 7, 53, 47, 53, 41, 97, 79, 43, 82, 17, 27, 50, 63, 27, 7, 25, 20, 93, 68, 92, 48, 60, 35, 45, 17, 46, 46, 30, 16, 13, 54, 42, 97, 85, 92, 38, 54, 55, 44, 61, 60, 71, 83, 52, 24, 35, 7, 50, 64, 16, 61, 46, 25, 94, 64, 72, 96, 55, 28, 97, 77, 11, 58, 97, 93, 59, 79, 39, 47, 29, 73, 17, 14, 62, 58, 54, 64, 43, 45, 49, 41, 20, 74, 53, 32, 55, 49, 56, 74, 43, 31, 53, 32, 22, 3, 65, 20, 11, 61, 80, 39, 11, 46, 77, 10, 57, 77, 34, 21, 67, 74, 41, 61, 51, 87, 81, 21, 31, 51, 58, 51, 51, 65, 98, 74, 11, 96, 14, 60, 84, 94, 24, 23, 59, 82, 45, 14, 44, 12, 52, 69, 0, 81, 46, 92, 33, 10, 91, 13, 6, 77, 82, 15, 75, 82, 74, 64, 1, 51, 86, 19, 76, 23, 60, 97, 59, 82, 29, 64, 12, 53, 59, 6, 36, 36, 47, 28, 25, 73, 86, 86, 57, 93, 2, 64, 33, 56, 53, 18, 84, 93, 26, 41, 20, 69, 20, 52, 2, 3, 55, 85, 65, 21, 58, 3, 56, 46, 48, 94, 5, 64, 8, 26, 20, 25, 9, 69, 12, 34, 73, 38, 50, 92, 19]
last_save: 303

Gen:43
TrainFitness:1.0
TestFitness:0.6666666666666666
MaxGenLen:500
Individual: def p():
  def adf0(index):
    if np.equal(x[index],-052883.9935).all():
      return False
    else:
      return False
  def adf1(index):
    if np.greater(x[index],-007199.4171).all():
      return False
    else:
      return True
  def adf2(index):
    if np.equal(x[index],-825537.3493).all():
      return False
    else:
      return False
  def adf3(index):
    if np.greater(x[index],-399655.3141).all():
      if np.equal(psqrt(x[index]),-067043.2595).all():
        return False
      else:
        return False
      return True
    else:
      if np.greater(rlog(x[index]),+954505.2990).all():
        return False
      else:
        return True
      return True
  def adf4(index):
    if np.less(x[index],+009818.4147).all():
      return True
    else:
      return False
  def adf7(index):
    if np.equal(x[index],-177535.7373).all():
      if np.equal(rlog(x[index]),-166776.0959).all():
        return False
      else:
        return False
      return True
    else:
      if np.equal(x[index],-737317.9327).all():
        return False
      else:
        return True
      return False
  return multiple_operation([adf0(0)*+828.055, adf1(1)*+063.427, adf2(2)*+453.101, adf3(3)*+570.461, adf4(4)*-426.587, adf7(7)*-739.997], [1, 1, 0, 1, 0], 435.910)
result=p(); 1.0
IndLenGenome:404
IndGenome:[27, 98, 48, 57, 32, 77, 81, 15, 88, 0, 15, 12, 98, 48, 13, 99, 59, 33, 85, 41, 19, 9, 65, 99, 49, 86, 93, 86, 10, 10, 27, 21, 39, 79, 34, 11, 47, 71, 91, 12, 37, 59, 44, 69, 35, 53, 85, 18, 82, 75, 75, 63, 7, 93, 4, 29, 73, 87, 27, 84, 98, 43, 69, 71, 59, 63, 77, 73, 69, 39, 66, 15, 15, 43, 61, 64, 81, 55, 11, 68, 71, 61, 29, 54, 10, 46, 97, 80, 84, 13, 92, 15, 99, 95, 35, 91, 94, 17, 60, 42, 10, 79, 26, 10, 79, 25, 94, 55, 40, 85, 12, 99, 49, 90, 93, 86, 16, 82, 91, 91, 63, 66, 38, 20, 50, 40, 99, 78, 11, 68, 44, 11, 84, 27, 96, 69, 12, 4, 6, 26, 75, 55, 81, 59, 41, 77, 67, 65, 33, 25, 27, 63, 7, 73, 95, 98, 98, 10, 94, 15, 34, 31, 36, 16, 27, 87, 26, 10, 79, 75, 89, 25, 7, 82, 91, 92, 99, 65, 99, 31, 7, 53, 47, 53, 41, 97, 79, 43, 82, 17, 27, 50, 63, 27, 7, 25, 20, 93, 68, 92, 48, 60, 35, 45, 17, 46, 46, 30, 16, 13, 54, 42, 97, 85, 92, 38, 54, 55, 33, 61, 60, 71, 83, 52, 24, 35, 7, 50, 34, 16, 61, 46, 25, 94, 64, 72, 96, 55, 28, 97, 77, 11, 58, 97, 93, 59, 79, 39, 47, 29, 73, 17, 14, 97, 58, 54, 64, 43, 45, 49, 41, 20, 74, 53, 32, 55, 49, 56, 74, 43, 31, 53, 32, 22, 3, 65, 20, 11, 61, 80, 39, 11, 46, 77, 10, 57, 77, 34, 21, 67, 74, 41, 61, 51, 87, 81, 21, 31, 51, 58, 51, 51, 65, 98, 74, 11, 96, 14, 60, 84, 94, 24, 23, 59, 82, 45, 14, 44, 12, 52, 69, 0, 81, 46, 92, 33, 10, 91, 13, 6, 77, 82, 15, 75, 82, 74, 64, 1, 51, 86, 19, 76, 23, 60, 97, 59, 82, 29, 64, 12, 53, 59, 6, 36, 36, 47, 28, 25, 73, 86, 86, 57, 93, 2, 64, 33, 56, 53, 18, 84, 93, 26, 41, 20, 69, 20, 52, 2, 3, 55, 85, 65, 21, 58, 3, 56, 46, 48, 94, 5, 64, 8, 26, 20, 25, 9, 69, 12, 34, 73, 38, 50, 92, 19]
last_save: 303

Gen:43
last_save: 303
Exit:TrueFalseFalse