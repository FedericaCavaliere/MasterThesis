Dataset:Spiral/Full.csv
FS:True
Seed:1235
Size:3

Gen:1
TrainFitness:1.0
TestFitness:0.6666666666666666
MaxGenLen:500
Individual: def p():
  def adf0(index):
    if np.less(np.sin(x[index]),+560207.6347).all():
      return True
    else:
      return True
  def adf1(index):
    if np.less(sigmoid(x[index]),-605772.6683).all():
      return False
    else:
      return True
  def adf2(index):
    if np.greater(np.tanh(x[index]),+041287.7664).all():
      return True
    else:
      return True
  def adf3(index):
    if np.greater(sigmoid(x[index]),+457970.2851).all():
      return True
    else:
      return True
  def adf4(index):
    if np.less(np.tanh(x[index]),+040566.0670).all():
      return False
    else:
      return True
  def adf7(index):
    if np.equal(x[index],-518523.1932).all():
      return True
    else:
      return True
  return multiple_operation([adf0(0)*+008.132, adf1(1)*+140.172, adf2(2)*-975.103, adf3(3)*+816.866, adf4(4)*+526.211, adf7(7)*+651.507], [0, 0, 0, 0, 0], 753.154)
result=p(); 1.0
IndLenGenome:286
IndGenome:[85, 37, 71, 39, 15, 57, 7, 60, 17, 89, 85, 20, 76, 94, 52, 14, 97, 42, 86, 67, 30, 6, 38, 22, 70, 90, 25, 86, 51, 31, 32, 35, 54, 40, 91, 24, 41, 37, 33, 48, 42, 45, 92, 17, 37, 3, 82, 18, 21, 66, 45, 23, 54, 76, 46, 45, 19, 15, 27, 24, 14, 42, 92, 86, 30, 95, 73, 74, 76, 66, 7, 62, 60, 90, 23, 57, 36, 17, 27, 32, 22, 46, 71, 11, 35, 80, 90, 62, 57, 2, 81, 33, 71, 19, 46, 78, 73, 50, 92, 21, 96, 80, 10, 40, 42, 10, 3, 6, 53, 12, 58, 18, 12, 77, 66, 46, 76, 41, 86, 78, 88, 81, 30, 48, 88, 2, 71, 50, 32, 57, 59, 91, 46, 75, 48, 39, 56, 44, 52, 74, 82, 18, 15, 47, 41, 13, 2, 10, 32, 91, 97, 76, 31, 26, 87, 55, 65, 11, 97, 42, 89, 41, 16, 73, 65, 33, 96, 35, 12, 48, 41, 47, 82, 72, 64, 47, 17, 53, 20, 37, 18, 30, 93, 56, 51, 14, 26, 12, 78, 90, 91, 34, 86, 77, 60, 95, 63, 4, 74, 69, 92, 21, 72, 30, 49, 0, 37, 78, 37, 78, 49, 30, 42, 24, 77, 71, 89, 7, 73, 91, 59, 91, 23, 47, 78, 91, 64, 28, 27, 2, 19, 14, 68, 49, 34, 52, 82, 71, 21, 60, 43, 60, 97, 67, 34, 18, 14, 35, 82, 73, 94, 37, 4, 87, 17, 43, 35, 25, 91, 83, 71, 29, 33, 39, 75, 76, 14, 60, 36, 50, 47, 74, 13, 2, 64, 38, 3, 55, 81, 0, 27, 4, 73, 44, 58, 47]
last_save: 311

Gen:1
last_save: 311
Exit:TrueFalseFalse

Gen:1
TrainFitness:0.6666666666666666
TestFitness:1.0
MaxGenLen:500
Individual: def p():
  def adf0(index):
    if np.equal(x[index],+349472.9460).all():
      return True
    else:
      return True
  def adf1(index):
    if np.equal(np.cos(x[index]),-044762.0614).all():
      return True
    else:
      return False
  def adf2(index):
    if np.greater(rlog(x[index]),+947239.4182).all():
      return True
    else:
      return False
  def adf3(index):
    if np.equal(x[index],-791205.3217).all():
      return True
    else:
      return True
  def adf4(index):
    if np.equal(psqrt(x[index]),+835936.9395).all():
      return True
    else:
      return False
  def adf7(index):
    if np.greater(x[index],-114025.0840).all():
      return False
    else:
      return False
  return multiple_operation([adf0(0)*-614.935, adf1(1)*-606.692, adf2(2)*+176.291, adf3(3)*-900.821, adf4(4)*+422.732, adf7(7)*+542.631], [1, 0, 0, 0, 0], 297.711)
result=p(); 0.6666666666666666
IndLenGenome:283
IndGenome:[6, 78, 31, 56, 21, 61, 71, 92, 75, 85, 67, 95, 38, 35, 28, 37, 51, 3, 69, 57, 49, 78, 23, 3, 39, 49, 28, 24, 52, 17, 56, 18, 81, 19, 45, 37, 38, 93, 70, 74, 34, 48, 76, 47, 86, 64, 19, 83, 10, 81, 82, 3, 74, 80, 88, 57, 64, 54, 30, 21, 17, 60, 64, 55, 25, 23, 4, 98, 84, 71, 42, 87, 84, 12, 55, 12, 94, 45, 91, 8, 88, 73, 61, 50, 57, 67, 52, 56, 3, 47, 29, 82, 26, 70, 95, 80, 17, 78, 19, 62, 43, 74, 95, 11, 20, 22, 10, 92, 3, 13, 56, 74, 14, 42, 17, 64, 29, 56, 60, 62, 80, 41, 22, 47, 73, 75, 38, 32, 10, 51, 91, 86, 56, 29, 23, 84, 50, 17, 66, 91, 51, 32, 24, 88, 64, 56, 8, 17, 82, 21, 77, 45, 63, 75, 69, 13, 36, 79, 89, 69, 53, 5, 32, 44, 79, 46, 71, 38, 75, 52, 73, 44, 59, 43, 73, 37, 94, 22, 94, 48, 10, 44, 59, 61, 12, 56, 49, 37, 24, 4, 92, 99, 45, 90, 77, 36, 51, 8, 65, 40, 79, 9, 91, 10, 97, 68, 92, 37, 89, 27, 8, 40, 32, 37, 23, 46, 29, 30, 14, 96, 12, 44, 45, 57, 25, 74, 40, 80, 78, 76, 62, 67, 56, 56, 74, 46, 66, 24, 53, 60, 81, 35, 41, 16, 25, 71, 59, 17, 93, 85, 59, 31, 96, 26, 86, 79, 52, 20, 34, 56, 72, 7, 20, 34, 19, 37, 84, 24, 17, 1, 95, 0, 31, 90, 25, 25, 66, 19, 32, 81, 86, 44, 99]
last_save: 312

Gen:7
TrainFitness:0.8333333333333334
TestFitness:0.5
MaxGenLen:500
Individual: def p():
  def adf0(index):
    if np.less(x[index],-202431.5955).all():
      return False
    else:
      return False
  def adf1(index):
    if np.equal(x[index],-377034.9041).all():
      return True
    else:
      return True
  def adf2(index):
    if np.less(sigmoid(x[index]),-376942.6984).all():
      return False
    else:
      return True
  def adf3(index):
    if np.equal(x[index],+347431.3883).all():
      return False
    else:
      return False
  def adf4(index):
    if np.greater(x[index],-349362.7172).all():
      return False
    else:
      return True
  def adf7(index):
    if np.less(x[index],+002609.9639).all():
      return False
    else:
      return True
  return multiple_operation([adf0(0)*+350.968, adf1(1)*+008.681, adf2(2)*-272.234, adf3(3)*-562.706, adf4(4)*-767.182, adf7(7)*-913.724], [0, 0, 1, 0, 0], 830.680)
result=p(); 0.8333333333333334
IndLenGenome:300
IndGenome:[61, 31, 28, 59, 82, 61, 44, 37, 30, 22, 60, 12, 64, 43, 31, 55, 19, 45, 15, 31, 71, 30, 59, 83, 21, 25, 43, 22, 43, 47, 57, 30, 33, 34, 49, 50, 74, 1, 56, 60, 87, 91, 43, 82, 27, 47, 53, 39, 83, 27, 56, 99, 84, 12, 46, 19, 48, 34, 55, 78, 71, 19, 5, 55, 79, 38, 68, 23, 14, 57, 24, 63, 21, 83, 38, 88, 53, 63, 39, 14, 93, 66, 89, 23, 31, 75, 3, 24, 59, 53, 16, 92, 47, 81, 27, 12, 83, 32, 14, 71, 79, 95, 51, 28, 77, 20, 60, 72, 36, 40, 39, 89, 46, 13, 19, 27, 88, 81, 39, 53, 44, 72, 13, 65, 40, 59, 6, 28, 71, 80, 78, 20, 60, 18, 96, 78, 1, 33, 27, 22, 52, 57, 62, 72, 93, 64, 46, 75, 89, 95, 86, 42, 77, 10, 16, 63, 47, 27, 17, 36, 87, 1, 78, 82, 32, 27, 92, 99, 41, 43, 57, 92, 44, 64, 64, 90, 31, 56, 46, 68, 98, 53, 20, 16, 68, 10, 27, 76, 63, 92, 22, 99, 50, 94, 92, 31, 80, 77, 81, 56, 61, 97, 35, 69, 14, 53, 32, 74, 60, 58, 57, 99, 86, 87, 1, 77, 6, 38, 42, 85, 60, 84, 30, 78, 52, 55, 71, 5, 27, 12, 100, 59, 74, 76, 79, 72, 36, 32, 8, 37, 32, 29, 16, 71, 51, 8, 84, 71, 37, 87, 32, 84, 77, 54, 24, 42, 75, 44, 87, 97, 52, 0, 16, 60, 84, 86, 82, 7, 55, 47, 81, 84, 77, 43, 61, 95, 86, 54, 70, 47, 56, 22, 96, 29, 89, 82, 10, 71, 3, 22, 38, 68, 9, 52, 58, 83, 29, 80, 26, 36]
last_save: 312

Gen:15
TrainFitness:1.0
TestFitness:0.6666666666666666
MaxGenLen:500
Individual: def p():
  def adf0(index):
    if np.less(x[index],-202431.5955).all():
      return False
    else:
      return False
  def adf1(index):
    if np.equal(x[index],-377034.9041).all():
      return True
    else:
      return True
  def adf2(index):
    if np.less(sigmoid(x[index]),-376942.6984).all():
      return False
    else:
      return True
  def adf3(index):
    if np.equal(x[index],+347431.3883).all():
      return False
    else:
      return False
  def adf4(index):
    if np.greater(x[index],-349262.7172).all():
      return False
    else:
      return True
  def adf7(index):
    if np.less(x[index],+006609.9639).all():
      return False
    else:
      return True
  return multiple_operation([adf0(0)*+350.968, adf1(1)*+008.681, adf2(2)*-272.234, adf3(3)*-562.706, adf4(4)*-767.182, adf7(7)*-913.724], [0, 0, 1, 0, 0], 830.780)
result=p(); 1.0
IndLenGenome:300
IndGenome:[61, 31, 28, 77, 82, 61, 44, 37, 30, 22, 60, 12, 64, 43, 31, 55, 19, 45, 15, 31, 71, 30, 59, 83, 21, 25, 43, 22, 43, 47, 57, 30, 33, 34, 49, 50, 74, 1, 56, 60, 87, 91, 43, 82, 27, 47, 53, 39, 83, 27, 56, 99, 84, 12, 46, 19, 48, 34, 55, 78, 71, 19, 5, 55, 79, 38, 68, 23, 14, 57, 24, 63, 21, 83, 38, 88, 53, 63, 39, 75, 93, 66, 89, 23, 31, 75, 3, 24, 59, 12, 16, 92, 47, 81, 27, 12, 83, 32, 14, 71, 79, 95, 51, 28, 77, 20, 60, 56, 36, 40, 39, 89, 46, 13, 19, 27, 88, 81, 39, 53, 44, 72, 13, 65, 40, 59, 6, 28, 71, 80, 78, 20, 60, 18, 96, 78, 1, 33, 27, 22, 52, 57, 62, 72, 93, 64, 46, 75, 89, 95, 86, 42, 77, 10, 16, 63, 47, 27, 17, 36, 87, 1, 78, 82, 32, 27, 92, 99, 41, 43, 57, 92, 44, 64, 64, 90, 31, 56, 46, 68, 98, 53, 20, 37, 68, 10, 27, 76, 63, 92, 22, 99, 50, 94, 92, 31, 80, 77, 81, 56, 61, 97, 35, 69, 14, 53, 32, 74, 60, 58, 57, 99, 86, 87, 1, 77, 6, 38, 42, 85, 60, 84, 30, 78, 52, 55, 71, 5, 27, 12, 100, 59, 74, 76, 79, 72, 36, 32, 8, 37, 32, 29, 16, 71, 51, 8, 84, 71, 37, 87, 32, 84, 77, 54, 24, 42, 75, 44, 87, 97, 52, 0, 16, 60, 84, 86, 82, 7, 55, 47, 81, 84, 77, 43, 61, 95, 86, 54, 70, 47, 56, 22, 96, 29, 89, 82, 10, 71, 3, 22, 38, 68, 9, 52, 58, 83, 29, 80, 26, 36]
last_save: 312

Gen:15
last_save: 312
Exit:TrueFalseFalse

Gen:1
TrainFitness:0.8333333333333334
TestFitness:0.8333333333333334
MaxGenLen:500
Individual: def p():
  def adf0(index):
    if np.equal(x[index],-727767.9625).all():
      return True
    else:
      return True
  def adf1(index):
    if np.greater(x[index],+484042.1343).all():
      return False
    else:
      return False
  def adf2(index):
    if np.greater(x[index],+039317.5008).all():
      return True
    else:
      return False
  def adf3(index):
    if np.equal(np.cos(x[index]),+431407.9823).all():
      return False
    else:
      return False
  def adf4(index):
    if np.equal(np.sin(x[index]),+739473.8354).all():
      return True
    else:
      return True
  def adf7(index):
    if np.equal(np.tanh(x[index]),-420324.4271).all():
      return False
    else:
      return False
  return multiple_operation([adf0(0)*+535.163, adf1(1)*-406.108, adf2(2)*+488.453, adf3(3)*-058.115, adf4(4)*+296.283, adf7(7)*+433.592], [0, 1, 1, 1, 0], 864.912)
result=p(); 0.8333333333333334
IndLenGenome:283
IndGenome:[27, 99, 91, 73, 87, 28, 36, 28, 51, 39, 30, 96, 44, 96, 87, 35, 12, 53, 32, 93, 91, 57, 86, 93, 5, 13, 99, 36, 14, 59, 39, 5, 51, 38, 81, 87, 45, 25, 85, 43, 62, 95, 82, 23, 70, 21, 33, 91, 25, 94, 80, 28, 96, 8, 23, 11, 23, 76, 61, 22, 76, 23, 17, 30, 53, 59, 18, 85, 39, 16, 45, 84, 74, 29, 27, 51, 27, 58, 96, 50, 57, 33, 45, 78, 52, 22, 52, 24, 94, 55, 66, 43, 65, 46, 63, 68, 89, 40, 61, 33, 73, 12, 52, 13, 78, 49, 97, 54, 88, 89, 30, 51, 88, 25, 91, 46, 79, 84, 30, 33, 64, 37, 63, 21, 34, 93, 62, 93, 54, 36, 54, 75, 22, 34, 8, 99, 67, 65, 99, 58, 80, 17, 25, 30, 80, 33, 84, 10, 14, 68, 55, 89, 44, 80, 35, 23, 89, 38, 32, 56, 59, 97, 56, 40, 46, 14, 94, 60, 17, 92, 59, 12, 45, 78, 99, 55, 83, 72, 24, 71, 73, 44, 42, 53, 44, 82, 10, 88, 40, 26, 12, 13, 59, 99, 29, 17, 84, 67, 93, 28, 57, 61, 0, 15, 18, 59, 35, 15, 74, 20, 99, 10, 99, 92, 84, 37, 30, 0, 19, 25, 90, 71, 2, 34, 66, 14, 32, 1, 44, 75, 5, 43, 28, 88, 91, 56, 45, 28, 92, 34, 7, 52, 13, 79, 63, 52, 17, 88, 78, 50, 84, 5, 79, 63, 99, 57, 54, 98, 96, 83, 65, 0, 43, 50, 68, 100, 29, 42, 8, 13, 73, 3, 75, 2, 92, 8, 59, 32, 54, 98, 42, 50, 60]
last_save: 313

Gen:45
TrainFitness:1.0
TestFitness:0.6666666666666666
MaxGenLen:500
Individual: def p():
  def adf0(index):
    if np.less(np.cos(x[index]),-334545.1999).all():
      return False
    else:
      return True
  def adf1(index):
    if np.greater(sigmoid(x[index]),+510572.8618).all():
      return False
    else:
      return False
  def adf2(index):
    if np.greater(x[index],-538584.4214).all():
      return False
    else:
      return False
  def adf3(index):
    if np.greater(x[index],+652621.3071).all():
      if np.less(rlog(x[index]),-029869.8667).all():
        return False
      else:
        return False
      return False
    else:
      if np.less(rlog(x[index]),-760217.5741).all():
        return False
      else:
        return True
      return False
  def adf4(index):
    if np.greater(x[index],+009293.3903).all():
      return True
    else:
      return False
  def adf7(index):
    if np.equal(x[index],-505166.0368).all():
      return True
    else:
      return False
  return multiple_operation([adf0(0)*-427.024, adf1(1)*-124.732, adf2(2)*-613.373, adf3(3)*+763.980, adf4(4)*+690.053, adf7(7)*+783.753], [0, 1, 1, 1, 0], 414.535)
result=p(); 1.0
IndLenGenome:317
IndGenome:[60, 87, 74, 85, 67, 22, 49, 35, 49, 84, 13, 63, 84, 15, 44, 55, 91, 89, 89, 79, 43, 54, 68, 27, 48, 86, 21, 82, 22, 24, 55, 51, 20, 45, 57, 22, 28, 6, 71, 8, 87, 87, 78, 29, 81, 49, 31, 47, 23, 25, 63, 8, 25, 48, 24, 54, 12, 71, 44, 57, 19, 70, 36, 45, 12, 83, 24, 34, 52, 26, 95, 42, 26, 42, 51, 13, 0, 57, 91, 19, 91, 82, 70, 38, 69, 90, 90, 12, 19, 58, 46, 69, 88, 36, 86, 27, 99, 79, 81, 23, 67, 46, 34, 17, 89, 57, 67, 36, 90, 12, 61, 57, 45, 77, 24, 81, 37, 86, 31, 49, 35, 72, 93, 81, 62, 60, 10, 50, 9, 22, 99, 73, 33, 79, 10, 53, 66, 91, 96, 99, 41, 11, 97, 53, 94, 65, 80, 15, 61, 56, 46, 30, 63, 66, 28, 78, 61, 80, 93, 64, 17, 80, 44, 92, 67, 90, 92, 84, 61, 79, 47, 51, 22, 64, 27, 43, 42, 98, 97, 61, 26, 41, 43, 13, 97, 13, 74, 44, 54, 67, 16, 43, 59, 88, 50, 94, 34, 25, 96, 9, 60, 50, 5, 23, 74, 76, 38, 87, 68, 53, 7, 85, 83, 83, 12, 17, 75, 67, 46, 77, 94, 91, 64, 45, 73, 75, 23, 24, 26, 50, 91, 80, 78, 61, 75, 51, 12, 39, 65, 77, 62, 91, 37, 15, 70, 73, 80, 84, 81, 90, 26, 62, 91, 34, 52, 77, 88, 44, 58, 18, 58, 89, 76, 93, 28, 90, 33, 73, 37, 99, 85, 14, 36, 20, 73, 46, 98, 10, 79, 4, 37, 37, 12, 63, 87, 7, 12, 32, 65, 99, 42, 34, 74, 12, 77, 2, 92, 72, 12, 45, 2, 27, 58, 82, 89, 39, 74, 97, 68, 40, 85, 61, 40, 69, 2, 82, 88]
last_save: 313

Gen:45
last_save: 313
Exit:TrueFalseFalse