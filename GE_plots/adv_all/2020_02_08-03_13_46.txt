Dataset:Spiral/Full.csv
FS:False
Seed:1235
Size:3

Gen:1
TrainFitness:1.0
TestFitness:0.5555555555555556
MaxGenLen:500
Individual: def p():
  def adf0(index):
    if np.less(np.tanh(x[index]),-615211.6495).all():
      return True
    else:
      return True
  def adf1(index):
    if np.greater(sigmoid(x[index]),+967395.3808).all():
      return False
    else:
      return False
  def adf2(index):
    if np.greater(rlog(x[index]),+697190.4292).all():
      return True
    else:
      return False
  def adf3(index):
    if np.less(x[index],+988530.2144).all():
      return False
    else:
      return True
  def adf4(index):
    if np.less(x[index],+702102.9207).all():
      return True
    else:
      return True
  def adf5(index):
    if np.greater(psqrt(x[index]),+489344.0147).all():
      return False
    else:
      return False
  def adf6(index):
    if np.greater(rlog(x[index]),-384510.7262).all():
      return False
    else:
      return False
  def adf7(index):
    if np.less(psqrt(x[index]),+135212.8717).all():
      return False
    else:
      return False
  def adf8(index):
    if np.less(np.cos(x[index]),+779011.9263).all():
      return True
    else:
      return False
  return multiple_operation([adf0(0)*-415.152, adf1(1)*-283.233, adf2(2)*-009.148, adf3(3)*+020.037, adf4(4)*-015.225, adf5(5)*-676.265, adf6(6)*+199.860, adf7(7)*-831.925, adf8(8)*+120.527], [1, 1, 0, 0, 1, 0, 0, 1], 475.321)
result=p(); 1.0
IndLenGenome:420
IndGenome:[67, 86, 36, 39, 93, 87, 44, 54, 53, 15, 36, 31, 42, 97, 70, 40, 23, 3, 44, 57, 9, 32, 19, 16, 94, 72, 20, 9, 91, 27, 39, 4, 3, 49, 33, 15, 68, 93, 42, 9, 63, 33, 83, 77, 91, 67, 91, 51, 87, 88, 52, 18, 39, 57, 25, 77, 12, 81, 92, 62, 91, 25, 33, 8, 17, 97, 86, 49, 60, 12, 19, 41, 14, 25, 67, 5, 16, 69, 92, 51, 70, 81, 77, 55, 70, 2, 27, 92, 34, 93, 11, 16, 18, 52, 41, 96, 70, 36, 26, 95, 44, 39, 80, 89, 83, 90, 51, 61, 13, 92, 81, 31, 89, 32, 57, 32, 27, 87, 23, 57, 59, 76, 79, 89, 70, 88, 58, 82, 7, 11, 63, 71, 35, 47, 43, 26, 45, 72, 77, 41, 46, 13, 37, 32, 62, 8, 61, 20, 15, 25, 60, 58, 72, 59, 94, 62, 82, 16, 60, 43, 74, 70, 33, 28, 51, 93, 56, 92, 63, 35, 34, 33, 96, 54, 80, 39, 84, 73, 58, 22, 95, 37, 32, 60, 45, 38, 74, 74, 47, 30, 31, 13, 21, 98, 67, 29, 41, 42, 76, 21, 69, 60, 67, 73, 81, 13, 90, 47, 28, 75, 66, 17, 70, 42, 12, 82, 49, 97, 20, 41, 44, 1, 89, 12, 53, 39, 34, 66, 77, 91, 66, 47, 20, 65, 91, 28, 64, 91, 9, 85, 74, 97, 70, 37, 64, 68, 24, 65, 18, 92, 75, 13, 21, 72, 27, 25, 92, 31, 71, 34, 68, 72, 15, 94, 31, 58, 17, 93, 40, 15, 99, 24, 16, 50, 89, 62, 47, 19, 22, 61, 4, 94, 99, 80, 25, 37, 35, 42, 30, 62, 60, 86, 93, 73, 27, 72, 81, 67, 88, 8, 30, 42, 75, 26, 90, 45, 83, 86, 43, 33, 56, 35, 70, 86, 85, 27, 94, 0, 66, 59, 50, 32, 20, 40, 25, 73, 25, 74, 26, 24, 27, 58, 59, 81, 13, 94, 23, 13, 79, 79, 62, 78, 3, 10, 22, 94, 10, 68, 80, 40, 29, 90, 89, 54, 18, 27, 68, 59, 26, 18, 9, 47, 99, 58, 34, 55, 11, 73, 92, 35, 83, 83, 8, 27, 92, 38, 38, 98, 29, 0, 17, 76, 36, 52, 64, 87, 92, 14, 53, 56, 74, 97, 97, 32, 70, 4, 39, 39, 45, 7, 96, 65, 26, 37, 63, 88, 92, 9, 98, 28, 84, 0, 80, 73, 16, 35, 8, 71, 58, 41]
last_save: 311

Gen:1
last_save: 311
Exit:TrueFalseFalse

Gen:1
TrainFitness:0.6666666666666666
TestFitness:0.8888888888888888
MaxGenLen:500
Individual: def p():
  def adf0(index):
    if np.less(x[index],+996685.8463).all():
      return True
    else:
      return True
  def adf1(index):
    if np.less(x[index],+236878.6181).all():
      return True
    else:
      return False
  def adf2(index):
    if np.greater(x[index],+227797.9133).all():
      return False
    else:
      return False
  def adf3(index):
    if np.less(x[index],+901240.0011).all():
      return True
    else:
      return True
  def adf4(index):
    if np.less(x[index],+023276.2897).all():
      return True
    else:
      return False
  def adf5(index):
    if np.greater(sigmoid(x[index]),+151964.5590).all():
      return False
    else:
      return True
  def adf6(index):
    if np.less(x[index],-083276.4777).all():
      return False
    else:
      return False
  def adf7(index):
    if np.less(x[index],+779352.0520).all():
      return True
    else:
      return False
  def adf8(index):
    if np.equal(np.tanh(x[index]),+991193.1433).all():
      return False
    else:
      return False
  return multiple_operation([adf0(0)*+114.864, adf1(1)*-578.553, adf2(2)*+745.695, adf3(3)*+067.773, adf4(4)*-716.712, adf5(5)*-234.824, adf6(6)*+055.181, adf7(7)*+289.010, adf8(8)*+998.641], [0, 0, 1, 1, 1, 0, 1, 0], 479.724)
result=p(); 0.6666666666666666
IndLenGenome:412
IndGenome:[27, 18, 65, 95, 28, 32, 53, 42, 40, 71, 29, 69, 13, 99, 77, 28, 88, 85, 23, 20, 91, 64, 67, 65, 23, 12, 39, 49, 4, 4, 4, 47, 84, 58, 27, 90, 57, 71, 7, 21, 54, 85, 39, 5, 18, 59, 34, 19, 14, 96, 21, 64, 77, 55, 12, 32, 91, 37, 46, 72, 17, 56, 27, 52, 47, 51, 43, 40, 30, 84, 75, 18, 89, 93, 63, 24, 92, 80, 82, 51, 64, 22, 25, 88, 16, 16, 26, 30, 48, 16, 21, 73, 97, 12, 57, 92, 9, 12, 15, 88, 40, 39, 56, 85, 72, 72, 41, 49, 78, 98, 38, 92, 18, 89, 20, 12, 65, 15, 49, 61, 26, 79, 97, 50, 90, 70, 87, 96, 87, 45, 97, 41, 59, 57, 26, 26, 13, 42, 95, 20, 59, 78, 85, 91, 69, 72, 89, 57, 100, 13, 42, 24, 87, 40, 61, 27, 2, 56, 89, 82, 47, 72, 95, 62, 83, 60, 14, 39, 17, 93, 11, 55, 63, 84, 54, 12, 13, 21, 45, 51, 57, 68, 21, 37, 37, 89, 78, 61, 13, 63, 96, 72, 98, 17, 9, 85, 28, 60, 74, 31, 91, 74, 39, 39, 68, 68, 91, 79, 26, 98, 69, 86, 13, 41, 49, 97, 35, 65, 33, 56, 90, 52, 59, 43, 61, 25, 30, 52, 13, 33, 85, 91, 72, 91, 23, 25, 30, 62, 46, 47, 9, 63, 19, 94, 54, 37, 33, 82, 87, 29, 78, 17, 47, 70, 25, 31, 97, 88, 27, 96, 28, 29, 46, 34, 89, 91, 11, 60, 59, 83, 90, 16, 64, 14, 30, 52, 81, 25, 74, 32, 14, 14, 81, 70, 14, 38, 78, 10, 68, 68, 98, 64, 15, 92, 4, 48, 46, 28, 39, 10, 39, 64, 1, 25, 55, 85, 100, 39, 25, 38, 89, 89, 3, 87, 15, 46, 26, 14, 58, 29, 27, 57, 52, 35, 10, 17, 90, 73, 85, 82, 48, 27, 17, 4, 91, 62, 47, 6, 56, 94, 48, 97, 1, 44, 44, 63, 61, 27, 15, 7, 46, 1, 22, 90, 14, 31, 32, 40, 4, 6, 83, 51, 79, 16, 44, 84, 72, 99, 17, 10, 96, 19, 27, 10, 40, 40, 88, 1, 16, 19, 88, 12, 93, 86, 49, 2, 4, 42, 7, 16, 95, 27, 36, 99, 54, 20, 40, 22, 9, 24, 33, 80, 30, 41, 0, 60, 19, 65, 81, 52, 60, 7]
last_save: 312

Gen:13
TrainFitness:0.6666666666666666
TestFitness:1.0
MaxGenLen:500
Individual: def p():
  def adf0(index):
    if np.equal(x[index],-136589.2620).all():
      return False
    else:
      return True
  def adf1(index):
    if np.less(np.sin(x[index]),+835752.1760).all():
      return True
    else:
      return True
  def adf2(index):
    if np.less(x[index],+040117.2993).all():
      return False
    else:
      return True
  def adf3(index):
    if np.less(rlog(x[index]),+112641.6441).all():
      if np.equal(x[index],+813628.1201).all():
        return True
      else:
        return True
      return False
    else:
      if np.equal(np.tanh(x[index]),+439225.2618).all():
        if np.equal(rlog(x[index]),-811522.4483).all():
          if np.equal(np.tanh(x[index]),+821358.4099).all():
            return False
          else:
            return True
          return False
        else:
          if np.less(x[index],+263490.5934).all():
            return True
          else:
            return False
          return False
        return False
      else:
        if np.less(x[index],+760357.0292).all():
          return True
        else:
          return True
        return True
      return True
  def adf4(index):
    if np.equal(x[index],+973042.5624).all():
      return False
    else:
      return True
  def adf5(index):
    if np.equal(x[index],-502560.6816).all():
      return False
    else:
      return False
  def adf6(index):
    if np.less(np.tanh(x[index]),-882243.1959).all():
      if np.less(x[index],-182896.9945).all():
        return True
      else:
        return False
      return False
    else:
      if np.greater(sigmoid(x[index]),+000527.1195).all():
        return True
      else:
        return False
      return True
  def adf7(index):
    if np.equal(x[index],-515679.9558).all():
      return False
    else:
      return True
  def adf8(index):
    if np.equal(np.sin(x[index]),+937092.7680).all():
      return False
    else:
      return True
  return multiple_operation([adf0(0)*+384.162, adf1(1)*+776.404, adf2(2)*+446.145, adf3(3)*+567.664, adf4(4)*+933.754, adf5(5)*+033.881, adf6(6)*-308.833, adf7(7)*-000.997, adf8(8)*-467.390], [1, 1, 0, 0, 0, 1, 0, 0], 461.017)
result=p(); 0.6666666666666666
IndLenGenome:453
IndGenome:[73, 18, 57, 37, 41, 5, 31, 37, 84, 31, 23, 76, 65, 48, 99, 2, 66, 12, 40, 91, 92, 54, 77, 79, 36, 42, 4, 10, 13, 48, 33, 45, 67, 15, 12, 21, 37, 86, 50, 80, 58, 43, 91, 64, 89, 70, 34, 33, 30, 44, 30, 71, 81, 47, 72, 59, 29, 83, 11, 68, 94, 78, 39, 25, 2, 52, 66, 90, 33, 91, 81, 52, 76, 44, 91, 6, 44, 34, 51, 51, 53, 31, 24, 86, 33, 78, 81, 73, 56, 72, 38, 61, 32, 10, 1, 28, 82, 43, 54, 31, 65, 26, 20, 49, 16, 79, 24, 23, 49, 62, 12, 65, 52, 6, 71, 78, 76, 57, 11, 24, 52, 37, 67, 94, 98, 81, 41, 45, 2, 62, 34, 44, 98, 93, 45, 62, 38, 14, 92, 14, 85, 48, 42, 71, 63, 85, 68, 64, 50, 19, 39, 37, 98, 11, 99, 37, 29, 86, 32, 99, 62, 56, 33, 74, 59, 30, 25, 79, 33, 14, 80, 55, 83, 87, 41, 28, 51, 53, 24, 88, 47, 16, 60, 63, 95, 57, 50, 32, 69, 52, 26, 60, 32, 68, 20, 95, 92, 21, 9, 80, 64, 49, 17, 43, 20, 84, 12, 95, 66, 12, 34, 75, 44, 81, 39, 65, 13, 72, 47, 48, 25, 10, 52, 25, 46, 10, 96, 98, 41, 16, 67, 73, 78, 36, 26, 37, 18, 32, 54, 25, 38, 28, 18, 72, 52, 74, 53, 81, 39, 35, 59, 11, 58, 33, 71, 53, 15, 51, 58, 62, 58, 49, 36, 39, 99, 34, 35, 30, 85, 55, 61, 78, 80, 21, 53, 70, 94, 40, 90, 10, 15, 32, 67, 71, 71, 69, 35, 50, 93, 80, 87, 65, 77, 9, 75, 57, 34, 95, 61, 55, 36, 87, 59, 29, 65, 15, 88, 59, 30, 43, 47, 89, 10, 42, 20, 16, 3, 89, 33, 57, 0, 59, 92, 7, 56, 28, 50, 43, 58, 76, 28, 27, 92, 89, 63, 58, 24, 11, 6, 62, 80, 26, 53, 57, 7, 66, 4, 0, 64, 4, 64, 26, 94, 34, 76, 1, 54, 75, 33, 40, 57, 45, 76, 67, 76, 96, 94, 94, 82, 3, 39, 43, 93, 7, 45, 14, 97, 82, 94, 60, 53, 3, 98, 38, 61, 94, 45, 10, 53, 80, 88, 88, 93, 93, 10, 7, 41, 100, 20, 60, 89, 99, 97, 68, 67, 31, 74, 96, 57, 53, 69, 30, 4, 77, 43, 92, 24, 82, 45, 98, 60, 91, 24, 6, 91, 60, 21, 7, 39, 47, 59, 10, 26, 21, 41, 38, 27, 95, 99, 86, 3, 51, 61, 19, 38, 28, 33, 41, 98, 50, 0, 60, 5]
last_save: 312

Gen:747
TrainFitness:0.7777777777777778
TestFitness:0.7777777777777778
MaxGenLen:710
Individual: def p():
  def adf0(index):
    if np.greater(x[index],+576011.4942).all():
      return False
    else:
      return True
  def adf1(index):
    if np.less(np.sin(x[index]),+035749.2260).all():
      return True
    else:
      return False
  def adf2(index):
    if np.less(x[index],+040357.9997).all():
      return False
    else:
      return True
  def adf3(index):
    if np.less(x[index],+667254.0640).all():
      if np.equal(sigmoid(x[index]),-228252.5206).all():
        return True
      else:
        return False
      return True
    else:
      if np.greater(np.sin(x[index]),-185441.1313).all():
        return True
      else:
        return False
      return True
  def adf4(index):
    if np.greater(np.tanh(x[index]),+182241.0162).all():
      return True
    else:
      return False
  def adf5(index):
    if np.equal(rlog(x[index]),+086364.2004).all():
      return False
    else:
      return False
  def adf6(index):
    if np.equal(sigmoid(x[index]),-528969.9450).all():
      return False
    else:
      return False
  def adf7(index):
    if np.greater(x[index],+005271.1950).all():
      if np.less(x[index],-574375.6764).all():
        return True
      else:
        return False
      return False
    else:
      if np.greater(np.cos(x[index]),+588822.4319).all():
        if np.equal(x[index],+536589.8742).all():
          return False
        else:
          return True
        return True
      else:
        if np.less(np.sin(x[index]),+035749.1260).all():
          return True
        else:
          return False
        return False
      return False
  def adf8(index):
    if np.less(x[index],-628120.4823).all():
      return True
    else:
      return False
  return multiple_operation([adf0(0)*+943.922, adf1(1)*+201.823, adf2(2)*-469.693, adf3(3)*+492.313, adf4(4)*+005.271, adf5(5)*-030.757, adf6(6)*-451.567, adf7(7)*-589.037, adf8(8)*+063.937], [1, 0, 1, 0, 0, 0, 1, 0], 872.938)
result=p(); 0.7777777777777778
IndLenGenome:524
IndGenome:[57, 28, 79, 37, 84, 5, 31, 0, 84, 45, 57, 76, 90, 71, 1, 64, 79, 84, 92, 59, 92, 54, 25, 79, 74, 42, 4, 86, 4, 90, 33, 45, 67, 64, 49, 42, 62, 86, 50, 50, 25, 43, 91, 64, 79, 70, 20, 33, 30, 44, 50, 83, 75, 47, 29, 59, 29, 77, 11, 68, 68, 92, 39, 25, 39, 13, 86, 68, 66, 16, 97, 52, 95, 44, 90, 6, 44, 0, 87, 11, 56, 81, 20, 65, 13, 72, 22, 48, 62, 35, 52, 25, 82, 10, 96, 32, 87, 88, 49, 78, 8, 36, 78, 35, 18, 61, 8, 5, 44, 34, 51, 81, 53, 31, 33, 36, 33, 68, 81, 15, 12, 28, 38, 64, 32, 43, 1, 28, 82, 32, 54, 31, 50, 21, 6, 92, 16, 27, 93, 23, 68, 96, 4, 89, 52, 95, 10, 78, 76, 3, 46, 24, 52, 20, 40, 94, 87, 87, 55, 97, 89, 62, 69, 44, 11, 16, 45, 62, 58, 49, 36, 39, 99, 34, 35, 30, 85, 55, 61, 78, 80, 21, 53, 26, 94, 40, 90, 10, 15, 32, 67, 71, 71, 69, 35, 50, 93, 28, 87, 65, 77, 9, 75, 57, 34, 83, 37, 55, 36, 87, 6, 44, 0, 87, 11, 44, 81, 36, 26, 37, 18, 32, 54, 25, 38, 28, 18, 72, 52, 74, 53, 81, 39, 35, 59, 9, 58, 30, 71, 45, 23, 76, 65, 48, 99, 18, 87, 84, 92, 59, 92, 54, 9, 79, 74, 42, 4, 86, 4, 90, 33, 45, 67, 64, 49, 21, 62, 86, 50, 50, 25, 43, 91, 64, 15, 70, 33, 0, 89, 73, 56, 72, 38, 61, 32, 10, 4, 28, 82, 43, 54, 31, 65, 38, 20, 32, 16, 79, 24, 23, 49, 62, 12, 65, 52, 66, 32, 10, 1, 28, 82, 43, 10, 31, 50, 64, 6, 49, 16, 79, 93, 9, 68, 96, 4, 89, 52, 43, 21, 53, 70, 94, 40, 90, 10, 15, 32, 67, 71, 71, 69, 35, 50, 93, 80, 87, 65, 77, 9, 75, 57, 34, 95, 61, 55, 36, 87, 59, 29, 65, 15, 88, 59, 30, 43, 47, 89, 10, 42, 20, 16, 3, 89, 33, 57, 0, 59, 92, 7, 56, 28, 50, 43, 58, 82, 28, 27, 92, 89, 63, 58, 33, 11, 69, 35, 50, 93, 80, 87, 8, 77, 14, 97, 16, 51, 60, 53, 3, 98, 6, 61, 94, 45, 10, 53, 80, 88, 73, 93, 93, 10, 7, 41, 100, 27, 60, 54, 99, 20, 68, 67, 31, 74, 96, 57, 53, 42, 30, 0, 82, 3, 39, 98, 93, 7, 45, 14, 97, 82, 94, 60, 53, 3, 98, 38, 61, 18, 45, 10, 53, 80, 88, 73, 93, 93, 10, 7, 41, 100, 20, 60, 89, 71, 97, 68, 67, 67, 74, 96, 57, 53, 69, 30, 4, 77, 43, 92, 24, 82, 5, 98, 60, 91, 24, 50, 91, 60, 21, 7, 39, 47, 59, 10, 26, 21, 41, 38, 27, 95, 99, 86, 3, 51, 61, 19, 38, 28, 33, 41, 98, 50, 0, 60, 5]
last_save: 312

Gen:2747
last_save: 312
Exit:FalseFalseTrue

Gen:1
TrainFitness:0.6666666666666666
TestFitness:0.5555555555555556
MaxGenLen:500
Individual: def p():
  def adf0(index):
    if np.equal(x[index],-684848.1602).all():
      return True
    else:
      return False
  def adf1(index):
    if np.greater(np.tanh(x[index]),-671908.0227).all():
      return False
    else:
      return True
  def adf2(index):
    if np.equal(x[index],+684416.9140).all():
      return True
    else:
      return False
  def adf3(index):
    if np.less(x[index],+011249.0907).all():
      return True
    else:
      return False
  def adf4(index):
    if np.equal(x[index],-289332.3278).all():
      return True
    else:
      return False
  def adf5(index):
    if np.less(x[index],+406935.7072).all():
      return True
    else:
      return True
  def adf6(index):
    if np.less(x[index],+564114.6015).all():
      return False
    else:
      return False
  def adf7(index):
    if np.greater(x[index],-442723.6090).all():
      return False
    else:
      return True
  def adf8(index):
    if np.greater(np.tanh(x[index]),-599298.3207).all():
      return True
    else:
      return False
  return multiple_operation([adf0(0)*+481.785, adf1(1)*-543.046, adf2(2)*-822.056, adf3(3)*+351.878, adf4(4)*+697.858, adf5(5)*+551.223, adf6(6)*+716.597, adf7(7)*+385.634, adf8(8)*+141.402], [1, 0, 0, 1, 1, 0, 1, 1], 438.225)
result=p(); 0.6666666666666666
IndLenGenome:412
IndGenome:[80, 1, 1, 57, 85, 97, 12, 39, 40, 55, 61, 50, 87, 38, 34, 99, 72, 59, 23, 92, 19, 34, 10, 39, 92, 34, 15, 40, 72, 57, 80, 91, 27, 34, 28, 3, 63, 76, 87, 25, 75, 77, 91, 94, 65, 32, 88, 43, 32, 83, 38, 25, 86, 46, 53, 52, 4, 51, 63, 98, 71, 6, 58, 70, 88, 7, 94, 61, 85, 3, 65, 39, 13, 92, 37, 44, 41, 8, 12, 85, 32, 41, 90, 26, 40, 20, 9, 59, 81, 78, 98, 74, 74, 68, 93, 9, 90, 27, 79, 12, 98, 14, 42, 37, 83, 91, 71, 96, 76, 66, 52, 41, 48, 68, 91, 43, 45, 51, 39, 49, 80, 44, 37, 22, 10, 4, 87, 25, 82, 61, 63, 92, 16, 34, 32, 35, 16, 24, 25, 10, 29, 15, 61, 41, 33, 88, 93, 99, 72, 46, 43, 36, 77, 37, 84, 21, 65, 80, 9, 80, 21, 99, 68, 30, 21, 38, 30, 83, 40, 84, 82, 42, 75, 45, 80, 16, 79, 64, 12, 90, 73, 69, 46, 18, 73, 37, 62, 55, 34, 65, 54, 26, 21, 94, 16, 60, 39, 91, 68, 45, 41, 30, 18, 33, 80, 18, 64, 52, 79, 82, 37, 98, 25, 72, 49, 63, 98, 47, 67, 4, 89, 61, 27, 97, 34, 59, 89, 79, 67, 62, 97, 69, 44, 44, 36, 71, 64, 26, 86, 36, 59, 91, 23, 70, 32, 65, 31, 71, 18, 57, 21, 25, 20, 21, 67, 53, 12, 87, 26, 69, 48, 57, 30, 68, 79, 92, 33, 50, 24, 20, 18, 72, 91, 94, 56, 41, 69, 2, 36, 65, 57, 28, 31, 42, 32, 26, 6, 65, 76, 95, 65, 6, 56, 17, 53, 6, 2, 17, 5, 70, 8, 21, 29, 95, 45, 53, 47, 38, 15, 62, 7, 56, 67, 34, 85, 25, 1, 85, 54, 29, 46, 93, 41, 75, 65, 23, 11, 35, 36, 80, 36, 32, 34, 83, 43, 45, 78, 44, 90, 34, 80, 95, 66, 2, 13, 97, 53, 100, 21, 46, 1, 9, 19, 0, 41, 18, 26, 80, 76, 62, 22, 55, 50, 47, 9, 33, 72, 67, 64, 8, 51, 38, 70, 52, 66, 11, 0, 28, 57, 47, 93, 20, 20, 65, 10, 52, 18, 23, 41, 82, 26, 29, 33, 1, 7, 72, 47, 85, 0, 9, 3, 54, 71, 34, 24, 6, 26, 41, 21, 97, 46, 46]
last_save: 313

Gen:8
TrainFitness:0.7777777777777778
TestFitness:0.5555555555555556
MaxGenLen:500
Individual: def p():
  def adf0(index):
    if np.greater(x[index],-743616.7833).all():
      if np.less(np.tanh(x[index]),+131253.3173).all():
        return False
      else:
        return False
      return True
    else:
      if np.less(x[index],-722656.5226).all():
        return False
      else:
        return False
      return True
  def adf1(index):
    if np.less(x[index],+042117.7645).all():
      if np.less(psqrt(x[index]),-380792.9277).all():
        return True
      else:
        return True
      return True
    else:
      if np.less(np.tanh(x[index]),+671455.8860).all():
        return False
      else:
        return False
      return False
  def adf2(index):
    if np.less(np.sin(x[index]),-470056.3470).all():
      return True
    else:
      return True
  def adf3(index):
    if np.less(np.sin(x[index]),+129123.2763).all():
      return False
    else:
      return False
  def adf4(index):
    if np.less(x[index],+008991.8220).all():
      return False
    else:
      return True
  def adf5(index):
    if np.equal(np.tanh(x[index]),+522326.6273).all():
      return True
    else:
      return True
  def adf6(index):
    if np.equal(x[index],+380920.5800).all():
      return True
    else:
      return False
  def adf7(index):
    if np.equal(x[index],-977724.1377).all():
      return True
    else:
      return False
  def adf8(index):
    if np.less(np.sin(x[index]),-329331.4429).all():
      return True
    else:
      return True
  return multiple_operation([adf0(0)*-374.993, adf1(1)*+335.177, adf2(2)*-616.454, adf3(3)*+424.244, adf4(4)*+244.835, adf5(5)*-504.116, adf6(6)*-964.620, adf7(7)*+035.240, adf8(8)*-520.501], [1, 1, 1, 1, 0, 0, 1, 0], 878.660)
result=p(); 0.7777777777777778
IndLenGenome:405
IndGenome:[40, 39, 19, 48, 14, 27, 31, 69, 51, 74, 67, 44, 13, 26, 41, 26, 27, 58, 3, 3, 79, 19, 76, 20, 81, 96, 3, 11, 33, 51, 82, 15, 63, 13, 71, 67, 93, 91, 99, 86, 17, 88, 97, 60, 43, 22, 17, 42, 42, 26, 5, 16, 45, 62, 32, 96, 21, 17, 36, 89, 38, 28, 25, 53, 66, 42, 76, 80, 64, 22, 91, 11, 77, 47, 36, 44, 95, 11, 61, 90, 59, 15, 83, 48, 93, 68, 70, 97, 89, 22, 39, 12, 37, 17, 58, 10, 92, 45, 70, 82, 20, 62, 98, 36, 26, 97, 91, 4, 15, 15, 48, 18, 46, 40, 13, 35, 49, 92, 51, 43, 98, 84, 91, 13, 21, 64, 17, 70, 20, 95, 26, 63, 4, 57, 90, 92, 62, 19, 49, 94, 52, 60, 78, 24, 54, 11, 82, 29, 21, 42, 43, 12, 17, 66, 93, 3, 85, 82, 63, 52, 23, 86, 92, 62, 90, 90, 48, 39, 89, 61, 88, 82, 62, 30, 57, 28, 6, 65, 17, 38, 62, 16, 48, 69, 55, 32, 82, 43, 72, 6, 16, 62, 37, 53, 74, 64, 17, 95, 83, 89, 82, 72, 31, 13, 48, 80, 29, 72, 90, 85, 78, 40, 50, 42, 69, 58, 89, 14, 29, 66, 43, 69, 89, 97, 87, 57, 82, 44, 11, 43, 97, 77, 26, 15, 26, 85, 22, 58, 72, 64, 25, 67, 13, 92, 79, 93, 53, 21, 34, 64, 82, 49, 54, 84, 21, 90, 17, 67, 24, 73, 77, 64, 39, 39, 63, 15, 36, 19, 63, 63, 45, 91, 7, 47, 14, 91, 44, 86, 81, 56, 94, 75, 54, 31, 8, 46, 94, 62, 54, 82, 44, 94, 49, 54, 65, 2, 64, 34, 38, 93, 15, 58, 1, 63, 95, 60, 34, 71, 41, 76, 21, 5, 89, 99, 86, 54, 76, 2, 60, 88, 46, 86, 40, 63, 75, 22, 44, 40, 32, 31, 19, 5, 22, 100, 35, 100, 31, 93, 15, 69, 49, 89, 86, 76, 81, 22, 85, 38, 67, 68, 96, 16, 80, 87, 53, 83, 70, 65, 47, 73, 43, 9, 76, 29, 59, 16, 5, 48, 22, 85, 4, 50, 81, 4, 52, 36, 93, 86, 0, 11, 96, 92, 64, 85, 1, 77, 2, 6, 38, 6, 78, 48, 89, 85, 46, 23, 91, 73, 51, 97, 89, 32, 70, 23, 20]
last_save: 313

Gen:2008
last_save: 313
Exit:FalseFalseTrue