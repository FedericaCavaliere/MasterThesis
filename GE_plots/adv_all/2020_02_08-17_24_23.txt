Dataset:Meander/Full.csv
FS:True
Seed:1238
Size:3

Gen:1
TrainFitness:0.8333333333333334
TestFitness:0.6666666666666666
MaxGenLen:500
Individual: def p():
  def adf0(index):
    if np.equal(np.cos(x[index]),-707687.8511).all():
      return False
    else:
      return True
  def adf1(index):
    if np.greater(np.tanh(x[index]),-270267.7797).all():
      return True
    else:
      return False
  def adf2(index):
    if np.less(x[index],+007997.2336).all():
      return False
    else:
      return False
  def adf3(index):
    if np.less(np.sin(x[index]),-398274.6007).all():
      return True
    else:
      return True
  def adf4(index):
    if np.equal(x[index],+968385.4016).all():
      return True
    else:
      return True
  def adf7(index):
    if np.equal(rlog(x[index]),-078625.5630).all():
      return True
    else:
      return False
  return multiple_operation([adf0(0)*+561.727, adf1(1)*+298.549, adf2(2)*-039.631, adf3(3)*+271.425, adf4(4)*-856.630, adf7(7)*+511.612], [0, 1, 1, 0, 1], 250.051)
result=p(); 0.8333333333333334
IndLenGenome:285
IndGenome:[95, 46, 73, 74, 43, 11, 39, 54, 80, 71, 10, 75, 47, 8, 71, 51, 93, 38, 25, 23, 33, 16, 81, 5, 96, 85, 80, 45, 39, 96, 41, 49, 52, 44, 20, 99, 97, 91, 83, 70, 93, 6, 11, 96, 13, 30, 55, 85, 65, 54, 90, 41, 18, 63, 12, 54, 70, 86, 25, 75, 50, 14, 45, 29, 87, 81, 80, 93, 4, 45, 67, 53, 50, 16, 67, 27, 30, 47, 27, 88, 43, 72, 25, 92, 17, 32, 16, 57, 14, 7, 96, 16, 78, 57, 25, 23, 41, 91, 26, 17, 39, 83, 81, 40, 20, 26, 62, 12, 79, 70, 67, 42, 95, 85, 32, 81, 62, 45, 58, 57, 19, 27, 85, 92, 30, 99, 46, 15, 27, 6, 32, 17, 51, 26, 68, 6, 43, 53, 83, 44, 36, 38, 75, 35, 75, 90, 68, 73, 31, 9, 32, 26, 36, 85, 32, 29, 23, 62, 45, 50, 38, 65, 50, 16, 76, 33, 36, 69, 27, 96, 57, 91, 18, 29, 31, 14, 48, 52, 68, 26, 24, 55, 25, 52, 13, 50, 31, 20, 90, 39, 27, 13, 0, 57, 38, 51, 42, 68, 5, 38, 75, 67, 21, 22, 54, 13, 85, 58, 38, 86, 99, 79, 43, 31, 47, 93, 13, 35, 82, 89, 65, 46, 50, 4, 44, 22, 54, 21, 78, 63, 93, 97, 67, 91, 29, 63, 8, 60, 98, 33, 82, 87, 41, 70, 61, 8, 56, 33, 3, 11, 95, 83, 26, 64, 20, 25, 27, 2, 38, 29, 36, 36, 44, 38, 66, 8, 66, 6, 70, 67, 19, 71, 32, 56, 8, 10, 87, 93, 4, 10, 77, 2, 31, 96, 39]
last_save: 341

Gen:2001
last_save: 341
Exit:FalseFalseTrue

Gen:1
TrainFitness:0.8333333333333334
TestFitness:0.6666666666666666
MaxGenLen:500
Individual: def p():
  def adf0(index):
    if np.greater(x[index],+868446.7477).all():
      return True
    else:
      return False
  def adf1(index):
    if np.less(x[index],-037233.1417).all():
      return True
    else:
      return False
  def adf2(index):
    if np.equal(x[index],+397288.1235).all():
      return True
    else:
      return True
  def adf3(index):
    if np.less(x[index],+023471.8572).all():
      return True
    else:
      return False
  def adf4(index):
    if np.greater(np.sin(x[index]),+400886.4491).all():
      return False
    else:
      return False
  def adf7(index):
    if np.equal(rlog(x[index]),+125122.5583).all():
      return False
    else:
      return False
  return multiple_operation([adf0(0)*+384.763, adf1(1)*-711.759, adf2(2)*-503.369, adf3(3)*-793.813, adf4(4)*-378.373, adf7(7)*+198.657], [0, 1, 0, 0, 1], 272.376)
result=p(); 0.8333333333333334
IndLenGenome:282
IndGenome:[8, 98, 38, 95, 44, 67, 99, 15, 36, 81, 95, 68, 66, 15, 94, 63, 21, 65, 49, 94, 60, 95, 54, 46, 89, 95, 26, 36, 55, 77, 47, 43, 45, 13, 11, 95, 22, 29, 4, 19, 82, 4, 5, 43, 26, 25, 97, 98, 92, 16, 31, 24, 38, 53, 63, 13, 55, 48, 13, 96, 6, 55, 32, 41, 46, 24, 86, 27, 80, 74, 91, 82, 71, 97, 87, 2, 81, 76, 62, 88, 88, 48, 45, 30, 87, 98, 69, 56, 37, 74, 22, 55, 58, 85, 7, 77, 63, 51, 36, 18, 37, 28, 31, 42, 75, 38, 31, 84, 70, 93, 42, 34, 83, 13, 62, 12, 45, 59, 87, 53, 36, 98, 75, 41, 50, 48, 41, 24, 51, 27, 74, 3, 60, 89, 23, 73, 27, 91, 32, 49, 88, 57, 11, 87, 89, 44, 64, 33, 21, 17, 38, 17, 54, 65, 29, 85, 77, 81, 36, 93, 68, 53, 85, 35, 59, 10, 20, 45, 93, 77, 25, 31, 62, 32, 50, 18, 77, 73, 99, 76, 73, 71, 23, 27, 75, 66, 39, 68, 6, 57, 48, 16, 91, 60, 8, 16, 33, 87, 50, 59, 5, 92, 10, 53, 61, 76, 56, 98, 3, 24, 62, 89, 34, 87, 97, 39, 74, 82, 11, 43, 82, 70, 86, 73, 83, 5, 3, 13, 38, 51, 50, 55, 58, 67, 92, 65, 67, 7, 22, 15, 42, 53, 67, 21, 43, 11, 8, 75, 89, 14, 45, 67, 0, 63, 18, 55, 81, 94, 42, 2, 98, 21, 65, 9, 65, 49, 35, 92, 61, 52, 84, 93, 1, 4, 100, 67, 28, 32, 20, 55, 19, 28]
last_save: 342

Gen:2001
last_save: 342
Exit:FalseFalseTrue

Gen:1
TrainFitness:0.6666666666666666
TestFitness:1.0
MaxGenLen:500
Individual: def p():
  def adf0(index):
    if np.greater(np.sin(x[index]),-129335.1375).all():
      return False
    else:
      return False
  def adf1(index):
    if np.equal(np.tanh(x[index]),+861133.4987).all():
      return False
    else:
      return False
  def adf2(index):
    if np.equal(np.sin(x[index]),-517158.6637).all():
      return False
    else:
      return True
  def adf3(index):
    if np.less(sigmoid(x[index]),-121689.2509).all():
      return True
    else:
      return True
  def adf4(index):
    if np.greater(np.cos(x[index]),+566392.9426).all():
      return True
    else:
      return True
  def adf7(index):
    if np.greater(x[index],+782731.8504).all():
      return True
    else:
      return True
  return multiple_operation([adf0(0)*-973.632, adf1(1)*-345.204, adf2(2)*-879.448, adf3(3)*+529.203, adf4(4)*+915.054, adf7(7)*-179.886], [1, 0, 0, 1, 0], 700.533)
result=p(); 0.6666666666666666
IndLenGenome:286
IndGenome:[20, 78, 57, 82, 75, 66, 89, 53, 27, 82, 59, 52, 94, 68, 96, 51, 40, 56, 83, 97, 11, 67, 23, 25, 8, 75, 60, 91, 83, 18, 70, 35, 23, 69, 84, 50, 30, 21, 65, 6, 77, 31, 4, 82, 95, 79, 10, 22, 85, 93, 19, 36, 78, 71, 84, 35, 94, 22, 57, 26, 33, 37, 96, 43, 89, 88, 91, 47, 17, 87, 95, 31, 36, 78, 64, 92, 58, 91, 22, 50, 67, 65, 59, 68, 54, 99, 73, 20, 95, 53, 73, 50, 11, 10, 11, 85, 78, 88, 26, 70, 92, 87, 76, 8, 22, 45, 7, 20, 84, 19, 61, 32, 82, 53, 51, 48, 62, 31, 13, 23, 2, 38, 84, 77, 51, 79, 36, 98, 11, 44, 3, 73, 54, 19, 96, 23, 15, 22, 54, 48, 87, 96, 64, 70, 30, 47, 32, 57, 5, 37, 99, 72, 13, 29, 24, 35, 66, 96, 92, 43, 85, 63, 79, 95, 71, 8, 17, 66, 16, 29, 88, 72, 81, 41, 78, 64, 93, 83, 92, 73, 18, 59, 51, 92, 35, 69, 50, 52, 76, 71, 28, 96, 45, 75, 35, 28, 49, 35, 2, 13, 35, 81, 83, 37, 71, 33, 8, 66, 91, 69, 8, 38, 84, 81, 70, 54, 83, 39, 40, 56, 12, 8, 84, 85, 20, 15, 53, 46, 45, 95, 56, 14, 57, 98, 32, 20, 60, 78, 42, 45, 33, 98, 57, 93, 46, 50, 21, 36, 48, 28, 12, 48, 87, 34, 6, 36, 79, 35, 27, 72, 94, 48, 11, 56, 62, 92, 28, 69, 44, 22, 60, 97, 55, 45, 49, 61, 58, 81, 54, 100, 38, 53, 76, 20, 52, 87]
last_save: 343

Gen:16
TrainFitness:0.8333333333333334
TestFitness:0.8333333333333334
MaxGenLen:500
Individual: def p():
  def adf0(index):
    if np.greater(np.cos(x[index]),-652861.5241).all():
      return False
    else:
      return False
  def adf1(index):
    if np.greater(x[index],+973357.2539).all():
      return True
    else:
      return True
  def adf2(index):
    if np.greater(x[index],-587897.1041).all():
      return False
    else:
      return True
  def adf3(index):
    if np.greater(np.cos(x[index]),-277449.9582).all():
      return True
    else:
      return False
  def adf4(index):
    if np.less(sigmoid(x[index]),+763213.8004).all():
      if np.equal(np.tanh(x[index]),-736557.2277).all():
        return True
      else:
        return True
      return False
    else:
      if np.greater(np.sin(x[index]),+744695.8273).all():
        return True
      else:
        return False
      return False
  def adf7(index):
    if np.greater(rlog(x[index]),-084619.8947).all():
      if np.less(x[index],+020862.2258).all():
        return True
      else:
        return False
      return True
    else:
      if np.equal(x[index],+877769.7775).all():
        if np.equal(rlog(x[index]),+091563.8943).all():
          return True
        else:
          return True
        return True
      else:
        if np.less(x[index],-871891.1454).all():
          return True
        else:
          return True
        return True
      return True
  return multiple_operation([adf0(0)*+584.793, adf1(1)*-350.546, adf2(2)*-533.126, adf3(3)*+145.785, adf4(4)*+109.917, adf7(7)*+921.321], [1, 0, 0, 0, 1], 030.848)
result=p(); 0.8333333333333334
IndLenGenome:486
IndGenome:[34, 61, 55, 13, 9, 22, 25, 67, 53, 99, 86, 45, 92, 98, 86, 31, 25, 82, 14, 31, 13, 27, 68, 67, 9, 85, 73, 56, 39, 79, 37, 53, 43, 65, 57, 52, 65, 43, 49, 62, 80, 35, 51, 42, 55, 66, 5, 88, 95, 98, 67, 18, 69, 97, 61, 10, 24, 41, 73, 4, 44, 67, 3, 76, 85, 5, 87, 82, 82, 77, 47, 54, 34, 59, 99, 15, 68, 72, 82, 9, 73, 64, 78, 55, 74, 99, 16, 78, 41, 87, 86, 23, 92, 91, 83, 58, 90, 10, 4, 87, 35, 54, 62, 2, 27, 77, 37, 3, 76, 85, 5, 87, 82, 82, 77, 47, 54, 34, 59, 99, 15, 68, 90, 82, 82, 54, 47, 54, 34, 36, 99, 15, 68, 72, 67, 3, 24, 5, 83, 50, 58, 72, 96, 66, 58, 14, 29, 48, 20, 18, 84, 76, 61, 79, 98, 49, 74, 77, 31, 22, 75, 92, 30, 30, 20, 2, 70, 18, 76, 82, 22, 62, 95, 88, 58, 19, 92, 98, 87, 89, 47, 88, 42, 44, 88, 17, 27, 17, 36, 99, 37, 77, 47, 25, 27, 92, 38, 16, 48, 52, 6, 0, 49, 61, 85, 16, 83, 88, 29, 4, 83, 90, 94, 44, 15, 58, 75, 37, 91, 73, 58, 17, 61, 48, 79, 61, 31, 14, 55, 64, 20, 20, 30, 98, 79, 99, 73, 72, 5, 75, 68, 94, 67, 69, 93, 98, 47, 35, 73, 55, 60, 35, 34, 26, 10, 21, 54, 75, 83, 83, 11, 12, 26, 24, 32, 28, 11, 4, 15, 27, 78, 25, 76, 62, 54, 11, 10, 99, 59, 51, 97, 80, 86, 88, 99, 32, 11, 23, 52, 11, 73, 13, 30, 48, 16, 31, 6, 60, 83, 20, 38, 34, 38, 96, 81, 60, 80, 91, 56, 33, 94, 16, 56, 13, 9, 24, 17, 26, 19, 82, 75, 80, 68, 60, 55, 74, 72, 23, 72, 67, 95, 15, 88, 38, 59, 46, 14, 75, 37, 30, 36, 53, 91, 90, 38, 88, 31, 92, 66, 70, 71, 53, 74, 21, 34, 88, 7, 85, 44, 69, 92, 59, 71, 37, 59, 22, 29, 29, 68, 13, 86, 99, 87, 10, 48, 66, 30, 66, 62, 75, 16, 83, 49, 59, 32, 39, 38, 86, 98, 16, 89, 56, 96, 54, 98, 82, 25, 84, 78, 15, 96, 42, 12, 58, 56, 22, 27, 53, 43, 88, 30, 84, 85, 48, 96, 12, 87, 84, 58, 59, 63, 26, 95, 58, 71, 91, 35, 67, 38, 56, 12, 50, 49, 85, 70, 69, 82, 98, 33, 100, 61, 15, 99, 97, 87, 6, 73, 39, 3, 6, 5, 51, 90, 2, 77, 89, 68, 51, 90, 77, 93, 18, 50, 88, 86, 41, 88, 78, 10, 47, 3, 61, 42, 75, 70, 21, 12, 50, 10, 8, 54, 29, 75, 28, 84, 85]
last_save: 343

Gen:2016
last_save: 343
Exit:FalseFalseTrue