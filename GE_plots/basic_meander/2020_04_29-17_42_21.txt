Dataset:Meander/new_Full.csv
FS:False
Seed:1234
Size:10

Gen:1
TrainFitness:0.806060606060606
TestFitness:0.7894736842105263
MaxGenLen:400
Individual: def p():
  def adf0(index):
    if np.less(x[index],30301.93506):
      return False
    else:
      return False
  def adf1(index):
    if np.equal(x[index],02076.38496):
      return True
    else:
      return False
  def adf2(index):
    if np.equal(x[index],84541.79739):
      return True
    else:
      return True
  def adf3(index):
    if np.greater(x[index],30598.88302):
      return True
    else:
      return False
  def adf4(index):
    if np.equal(x[index],25536.43733):
      return True
    else:
      return False
  def adf5(index):
    if np.greater(x[index],90232.63678):
      return True
    else:
      return False
  def adf6(index):
    if np.equal(x[index],50938.48913):
      return True
    else:
      return True
  def adf7(index):
    if np.less(x[index],40945.91956):
      return True
    else:
      return False
  def adf8(index):
    if np.less(x[index],48918.54747):
      return True
    else:
      return False
  return multiple_operation([adf0(0)*+11.24, adf1(1)*+53.46, adf2(2)*-47.23, adf3(3)*-62.15, adf4(4)*+06.10, adf5(5)*+58.75, adf6(6)*+95.88, adf7(7)*+47.24, adf8(8)*+43.39], 58.35)
result=p(); 0.806060606060606
IndLenGenome:339
IndGenome:[45, 13, 16, 76, 61, 81, 58, 63, 1, 15, 60, 15, 80, 70, 93, 32, 50, 60, 38, 5, 5, 80, 46, 26, 70, 61, 22, 68, 25, 91, 91, 80, 22, 10, 44, 62, 75, 52, 10, 10, 27, 54, 31, 81, 55, 78, 85, 77, 40, 38, 53, 32, 50, 33, 16, 84, 62, 1, 97, 26, 66, 54, 78, 25, 26, 6, 59, 34, 46, 36, 45, 24, 18, 60, 66, 97, 53, 68, 34, 34, 98, 71, 50, 32, 32, 80, 77, 23, 25, 29, 72, 45, 97, 62, 52, 58, 95, 13, 38, 21, 25, 26, 51, 58, 75, 87, 98, 51, 43, 78, 57, 21, 79, 26, 45, 54, 90, 93, 46, 14, 38, 11, 17, 12, 14, 70, 32, 51, 75, 64, 63, 13, 38, 53, 33, 23, 87, 93, 19, 85, 8, 66, 10, 77, 21, 12, 45, 72, 28, 16, 70, 58, 12, 29, 68, 10, 83, 38, 60, 99, 17, 40, 49, 34, 70, 24, 49, 22, 46, 53, 19, 63, 62, 19, 94, 88, 34, 21, 39, 92, 67, 73, 88, 84, 14, 44, 64, 75, 93, 90, 63, 93, 31, 66, 13, 68, 85, 57, 64, 81, 89, 96, 93, 8, 75, 65, 21, 23, 99, 31, 24, 59, 11, 69, 25, 78, 55, 36, 90, 74, 69, 88, 95, 35, 60, 27, 12, 66, 83, 48, 6, 39, 26, 97, 95, 88, 24, 51, 15, 11, 70, 12, 29, 83, 83, 96, 25, 86, 94, 75, 1, 42, 21, 2, 80, 58, 51, 57, 24, 62, 3, 43, 83, 7, 29, 41, 29, 77, 50, 76, 73, 56, 9, 82, 80, 65, 85, 62, 55, 76, 84, 53, 29, 83, 16, 77, 78, 57, 52, 44, 43, 9, 80, 11, 36, 54, 20, 87, 10, 87, 20, 6, 79, 3, 84, 19, 95, 78, 40, 19, 16, 30, 9, 26, 97, 39, 18, 16, 70, 72, 0, 70, 31, 87, 2, 92, 28, 81, 77, 86, 30, 61, 42, 30, 65, 3, 72, 0, 83]
last_save: 100

Gen:251
last_save: 100
Exit:FalseFalseTrue

Gen:1
TrainFitness:0.806060606060606
TestFitness:0.7894736842105263
MaxGenLen:400
Individual: def p():
  def adf0(index):
    if np.less(x[index],32498.70379):
      return False
    else:
      return False
  def adf1(index):
    if np.less(x[index],51449.71970):
      return False
    else:
      return True
  def adf2(index):
    if np.greater(x[index],47634.96108):
      return True
    else:
      return False
  def adf3(index):
    if np.less(x[index],42038.53794):
      return False
    else:
      return True
  def adf4(index):
    if np.greater(x[index],35580.00392):
      return False
    else:
      return False
  def adf5(index):
    if np.less(x[index],53331.27952):
      return False
    else:
      return False
  def adf6(index):
    if np.greater(x[index],31561.09525):
      return True
    else:
      return True
  def adf7(index):
    if np.less(x[index],49876.88861):
      return True
    else:
      return False
  def adf8(index):
    if np.greater(x[index],85458.89245):
      return False
    else:
      return True
  return multiple_operation([adf0(0)*-27.92, adf1(1)*-65.40, adf2(2)*-00.83, adf3(3)*+10.31, adf4(4)*-91.03, adf5(5)*+05.03, adf6(6)*+08.84, adf7(7)*-49.81, adf8(8)*+94.91], 14.31)
result=p(); 0.806060606060606
IndLenGenome:339
IndGenome:[48, 83, 55, 95, 82, 8, 30, 10, 4, 25, 64, 8, 55, 54, 78, 23, 59, 75, 55, 58, 54, 24, 31, 96, 3, 36, 87, 63, 15, 7, 74, 40, 46, 80, 84, 88, 42, 3, 25, 45, 57, 19, 81, 91, 68, 14, 26, 70, 80, 29, 61, 16, 11, 70, 16, 47, 90, 55, 98, 88, 3, 44, 94, 73, 70, 21, 11, 50, 41, 85, 50, 68, 70, 60, 51, 72, 28, 30, 74, 5, 65, 45, 69, 71, 54, 88, 32, 12, 41, 93, 36, 84, 80, 12, 61, 25, 45, 67, 17, 15, 23, 43, 21, 20, 84, 63, 52, 12, 81, 46, 77, 59, 68, 61, 25, 33, 64, 5, 92, 99, 93, 54, 90, 48, 69, 22, 96, 56, 98, 68, 45, 20, 59, 47, 58, 87, 48, 94, 54, 18, 14, 80, 39, 24, 23, 55, 94, 95, 13, 26, 88, 100, 46, 38, 62, 89, 77, 33, 93, 77, 83, 22, 59, 93, 67, 11, 91, 25, 35, 47, 71, 54, 68, 60, 83, 79, 42, 28, 65, 67, 19, 66, 32, 78, 47, 43, 57, 44, 19, 29, 95, 22, 50, 10, 75, 66, 56, 13, 93, 19, 82, 15, 30, 48, 31, 84, 49, 80, 23, 83, 57, 40, 94, 60, 27, 95, 28, 39, 14, 79, 71, 85, 35, 50, 32, 10, 3, 27, 70, 22, 22, 41, 64, 100, 8, 43, 17, 85, 98, 33, 20, 52, 0, 50, 25, 60, 39, 41, 53, 5, 50, 94, 50, 8, 76, 32, 22, 11, 24, 18, 75, 35, 48, 93, 69, 10, 51, 16, 21, 48, 0, 96, 95, 78, 13, 92, 10, 36, 78, 5, 19, 67, 30, 18, 37, 73, 4, 24, 55, 44, 63, 93, 87, 59, 38, 74, 63, 17, 49, 10, 88, 78, 4, 39, 10, 65, 7, 37, 83, 23, 41, 1, 56, 41, 61, 46, 85, 49, 67, 21, 52, 31, 9, 36, 75, 96, 64, 2, 14, 78, 58, 47, 3, 66, 35, 65, 86, 26, 42]
last_save: 100

Gen:251
last_save: 100
Exit:FalseFalseTrue

Gen:1
TrainFitness:0.8036253776435045
TestFitness:0.8108108108108109
MaxGenLen:400
Individual: def p():
  def adf0(index):
    if np.equal(x[index],31301.71883):
      return False
    else:
      return True
  def adf1(index):
    if np.less(x[index],90760.29706):
      return False
    else:
      return True
  def adf2(index):
    if np.greater(x[index],20673.16397):
      return False
    else:
      return False
  def adf3(index):
    if np.less(x[index],82498.18167):
      return False
    else:
      return True
  def adf4(index):
    if np.less(x[index],96463.62974):
      return False
    else:
      return True
  def adf5(index):
    if np.less(x[index],93372.30463):
      return True
    else:
      return True
  def adf6(index):
    if np.less(x[index],69960.71685):
      return True
    else:
      return False
  def adf7(index):
    if np.greater(x[index],39957.62881):
      return False
    else:
      return False
  def adf8(index):
    if np.equal(x[index],50422.43229):
      return False
    else:
      return True
  return multiple_operation([adf0(0)*-21.97, adf1(1)*-83.52, adf2(2)*-45.13, adf3(3)*+06.23, adf4(4)*-89.74, adf5(5)*-13.47, adf6(6)*+41.40, adf7(7)*-63.65, adf8(8)*+69.67], 36.76)
result=p(); 0.8036253776435045
IndLenGenome:339
IndGenome:[76, 76, 9, 9, 40, 25, 1, 19, 69, 50, 67, 55, 55, 22, 96, 61, 35, 74, 10, 84, 70, 68, 53, 39, 90, 69, 57, 95, 5, 82, 6, 29, 10, 49, 50, 6, 8, 23, 64, 28, 67, 58, 75, 90, 86, 39, 22, 17, 24, 31, 38, 52, 63, 18, 22, 66, 66, 13, 31, 77, 51, 60, 57, 92, 20, 39, 43, 50, 19, 73, 57, 19, 33, 99, 23, 72, 2, 51, 97, 57, 96, 64, 40, 74, 45, 10, 66, 57, 47, 89, 53, 11, 44, 93, 65, 40, 44, 19, 2, 91, 83, 12, 23, 38, 50, 70, 18, 25, 14, 36, 67, 94, 91, 98, 82, 66, 63, 83, 46, 72, 40, 11, 75, 56, 28, 75, 19, 67, 28, 56, 90, 73, 35, 94, 87, 58, 86, 59, 97, 67, 96, 81, 53, 4, 92, 97, 47, 15, 52, 75, 91, 24, 73, 18, 7, 23, 58, 81, 29, 79, 49, 18, 59, 14, 34, 16, 51, 90, 62, 72, 72, 67, 76, 16, 2, 49, 5, 58, 79, 28, 4, 66, 89, 86, 90, 99, 66, 72, 89, 10, 59, 82, 59, 85, 10, 27, 26, 66, 35, 87, 99, 13, 34, 82, 67, 13, 33, 90, 77, 27, 81, 29, 34, 84, 4, 83, 51, 83, 73, 39, 28, 11, 90, 18, 47, 61, 19, 98, 13, 4, 81, 59, 15, 85, 64, 83, 20, 54, 67, 17, 11, 36, 48, 86, 30, 2, 66, 84, 34, 63, 93, 4, 64, 16, 25, 92, 53, 51, 68, 84, 42, 77, 22, 100, 10, 34, 7, 67, 89, 51, 40, 60, 32, 95, 74, 14, 86, 39, 48, 92, 18, 31, 70, 23, 43, 1, 94, 84, 48, 25, 37, 14, 15, 9, 73, 0, 70, 26, 19, 90, 25, 91, 4, 49, 13, 22, 33, 2, 83, 74, 22, 35, 64, 33, 70, 11, 63, 62, 87, 55, 28, 32, 82, 52, 82, 33, 41, 3, 59, 63, 80, 50, 82, 5, 69, 0, 49, 48, 61]
last_save: 100

Gen:160
TrainFitness:0.8066465256797583
TestFitness:0.8108108108108109
MaxGenLen:445
Individual: def p():
  def adf0(index):
    if np.less(x[index],50346.95155):
      return True
    else:
      return False
  def adf1(index):
    if np.less(x[index],50475.45696):
      return True
    else:
      return True
  def adf2(index):
    if np.equal(x[index],25311.24471):
      return False
    else:
      return True
  def adf3(index):
    if np.less(x[index],57370.77485):
      if np.equal(x[index],86029.15144):
        return False
      else:
        return False
    else:
      if np.greater(x[index],68732.59865):
        return False
      else:
        return False
  def adf4(index):
    if np.greater(x[index],39848.35544):
      return False
    else:
      return True
  def adf5(index):
    if np.greater(x[index],73219.88513):
      return True
    else:
      return False
  def adf6(index):
    if np.less(x[index],84837.42495):
      if np.equal(x[index],55316.06488):
        return True
      else:
        return True
    else:
      if np.less(x[index],09455.51836):
        return False
      else:
        return False
  def adf7(index):
    if np.greater(x[index],02625.02709):
      return True
    else:
      return False
  def adf8(index):
    if np.greater(x[index],79909.37045):
      if np.greater(x[index],91383.05369):
        if np.less(x[index],22467.44629):
          return False
        else:
          return True
      else:
        if np.equal(x[index],86421.10839):
          return True
        else:
          return True
    else:
      if np.less(x[index],19146.90049):
        if np.equal(x[index],85986.58014):
          return True
        else:
          return False
      else:
        if np.equal(x[index],12155.07147):
          return True
        else:
          return False
  return multiple_operation([adf0(0)*+93.06, adf1(1)*+28.52, adf2(2)*-04.78, adf3(3)*+83.87, adf4(4)*+29.97, adf5(5)*+20.22, adf6(6)*-14.42, adf7(7)*-87.80, adf8(8)*-86.15], 99.08)
result=p(); 0.8066465256797583
IndLenGenome:383
IndGenome:[88, 59, 29, 20, 75, 85, 93, 35, 20, 73, 64, 86, 79, 95, 81, 95, 85, 4, 63, 64, 45, 5, 40, 25, 85, 60, 54, 7, 65, 64, 95, 16, 29, 6, 20, 62, 48, 75, 10, 35, 95, 72, 55, 53, 91, 31, 52, 4, 44, 7, 91, 97, 94, 91, 26, 56, 10, 52, 45, 17, 73, 17, 60, 97, 97, 74, 58, 65, 62, 32, 58, 78, 96, 40, 72, 19, 91, 95, 21, 34, 44, 45, 71, 22, 45, 95, 36, 78, 97, 83, 52, 75, 49, 48, 66, 5, 71, 83, 50, 5, 44, 36, 32, 43, 29, 18, 74, 28, 73, 95, 35, 34, 44, 45, 28, 22, 45, 95, 36, 78, 97, 83, 52, 1, 49, 48, 48, 5, 71, 83, 50, 5, 44, 36, 32, 43, 76, 18, 74, 28, 73, 17, 74, 62, 54, 19, 15, 11, 32, 39, 25, 45, 53, 71, 56, 80, 76, 24, 28, 78, 82, 32, 70, 76, 16, 30, 9, 4, 15, 75, 5, 51, 58, 63, 46, 31, 3, 95, 90, 87, 75, 84, 0, 82, 46, 12, 85, 60, 42, 57, 30, 19, 60, 59, 53, 87, 70, 24, 37, 57, 79, 19, 60, 59, 53, 87, 70, 24, 35, 81, 45, 39, 49, 31, 93, 98, 63, 10, 95, 23, 96, 39, 78, 82, 89, 12, 22, 24, 16, 37, 34, 54, 96, 22, 29, 21, 34, 92, 23, 24, 78, 76, 34, 42, 51, 81, 50, 98, 73, 79, 4, 36, 79, 7, 69, 31, 69, 11, 64, 56, 29, 10, 40, 74, 99, 92, 50, 59, 88, 55, 19, 88, 96, 95, 48, 50, 81, 24, 20, 99, 96, 92, 89, 41, 32, 31, 65, 15, 50, 47, 81, 34, 87, 68, 63, 71, 58, 90, 58, 38, 39, 43, 60, 46, 30, 4, 21, 12, 98, 75, 62, 20, 53, 7, 30, 94, 27, 38, 59, 86, 63, 48, 63, 48, 97, 40, 60, 56, 32, 9, 19, 97, 12, 6, 61, 32, 70, 92, 12, 7, 15, 16, 31, 24, 54, 32, 71, 79, 51, 88, 77, 78, 50, 61, 5, 93, 58, 16, 51, 95, 8, 39, 19, 50, 28, 89, 8, 34, 53, 98, 76, 56, 10, 30, 42, 4, 22, 89, 47, 68, 9, 91, 51]
last_save: 100

Gen:171
TrainFitness:0.8126888217522659
TestFitness:0.8108108108108109
MaxGenLen:445
Individual: def p():
  def adf0(index):
    if np.less(x[index],50346.95465):
      return True
    else:
      return False
  def adf1(index):
    if np.less(x[index],50475.45696):
      return True
    else:
      return True
  def adf2(index):
    if np.equal(x[index],25311.24571):
      return False
    else:
      return True
  def adf3(index):
    if np.less(x[index],57370.77485):
      if np.equal(x[index],86029.15144):
        return False
      else:
        return True
    else:
      if np.greater(x[index],68732.59865):
        return False
      else:
        return False
  def adf4(index):
    if np.greater(x[index],39848.45543):
      return False
    else:
      return True
  def adf5(index):
    if np.greater(x[index],79212.88513):
      return True
    else:
      return False
  def adf6(index):
    if np.less(x[index],84837.42895):
      if np.equal(x[index],55316.06438):
        return True
      else:
        return True
    else:
      if np.less(x[index],09455.51836):
        return False
      else:
        return False
  def adf7(index):
    if np.greater(x[index],02225.02709):
      return True
    else:
      return False
  def adf8(index):
    if np.greater(x[index],79939.37045):
      if np.greater(x[index],91383.05369):
        if np.less(x[index],22467.44629):
          return False
        else:
          return True
      else:
        if np.equal(x[index],86421.10839):
          return True
        else:
          return True
    else:
      if np.less(x[index],19146.90049):
        if np.equal(x[index],85986.58011):
          return True
        else:
          return False
      else:
        if np.equal(x[index],12155.07147):
          return True
        else:
          return False
  return multiple_operation([adf0(0)*+93.06, adf1(1)*+28.58, adf2(2)*+42.99, adf3(3)*+12.12, adf4(4)*-61.44, adf5(5)*-19.27, adf6(6)*+44.21, adf7(7)*-78.01, adf8(8)*-61.98], 90.89)
result=p(); 0.8126888217522659
IndLenGenome:382
IndGenome:[88, 59, 29, 20, 75, 85, 93, 35, 20, 73, 64, 86, 79, 95, 54, 26, 85, 4, 63, 64, 45, 5, 40, 25, 85, 60, 54, 7, 65, 64, 95, 16, 29, 6, 20, 62, 48, 75, 10, 35, 95, 72, 55, 53, 91, 31, 52, 4, 25, 7, 91, 97, 94, 91, 26, 56, 10, 52, 45, 17, 73, 17, 60, 97, 97, 74, 58, 65, 62, 32, 58, 78, 96, 40, 72, 19, 91, 95, 21, 34, 44, 45, 28, 22, 45, 95, 36, 78, 97, 83, 52, 75, 49, 48, 66, 5, 71, 83, 50, 5, 44, 36, 32, 43, 29, 18, 74, 28, 24, 95, 35, 34, 33, 45, 28, 22, 45, 95, 36, 78, 97, 29, 52, 1, 52, 48, 48, 5, 71, 83, 50, 5, 44, 36, 32, 43, 76, 18, 74, 28, 73, 17, 74, 62, 58, 19, 15, 11, 32, 39, 25, 45, 53, 71, 56, 80, 76, 24, 23, 78, 82, 32, 70, 76, 16, 30, 9, 4, 15, 75, 5, 51, 58, 63, 46, 31, 3, 95, 90, 87, 75, 84, 0, 82, 22, 12, 85, 60, 42, 57, 30, 19, 60, 59, 53, 87, 70, 24, 37, 57, 79, 19, 3, 59, 53, 87, 70, 24, 35, 81, 45, 39, 49, 31, 93, 98, 63, 10, 95, 23, 96, 39, 78, 82, 89, 12, 22, 24, 16, 37, 34, 54, 96, 22, 29, 21, 34, 92, 23, 24, 78, 76, 34, 42, 51, 81, 50, 98, 73, 79, 4, 36, 79, 7, 69, 31, 69, 11, 64, 56, 29, 10, 40, 74, 99, 92, 50, 59, 88, 55, 19, 88, 96, 95, 48, 50, 81, 71, 20, 99, 6, 92, 89, 41, 32, 31, 65, 15, 50, 47, 81, 34, 87, 68, 63, 71, 58, 90, 58, 38, 39, 43, 60, 46, 30, 4, 21, 12, 98, 75, 48, 86, 40, 17, 24, 32, 9, 19, 32, 12, 6, 61, 32, 81, 92, 7, 7, 40, 16, 31, 24, 54, 32, 71, 79, 51, 39, 12, 7, 15, 16, 31, 24, 54, 32, 71, 80, 51, 88, 77, 78, 50, 61, 5, 93, 58, 16, 51, 69, 8, 39, 19, 50, 28, 89, 93, 34, 53, 98, 72, 56, 10, 30, 42, 4, 22, 89, 47, 68, 9, 91, 51]
last_save: 100

Gen:403
TrainFitness:0.8157099697885196
TestFitness:0.8108108108108109
MaxGenLen:505
Individual: def p():
  def adf0(index):
    if np.less(x[index],50346.95465):
      return True
    else:
      return False
  def adf1(index):
    if np.less(x[index],50475.45696):
      return True
    else:
      return True
  def adf2(index):
    if np.equal(x[index],25311.24571):
      return False
    else:
      return True
  def adf3(index):
    if np.less(x[index],57370.77485):
      if np.equal(x[index],86029.15144):
        return False
      else:
        return True
    else:
      if np.greater(x[index],68732.59865):
        return False
      else:
        return False
  def adf4(index):
    if np.greater(x[index],39848.45543):
      return False
    else:
      return True
  def adf5(index):
    if np.greater(x[index],79212.88513):
      return True
    else:
      return True
  def adf6(index):
    if np.less(x[index],24571.14166):
      return True
    else:
      return True
  def adf7(index):
    if np.equal(x[index],77485.22886):
      if np.greater(x[index],15144.58255):
        if np.greater(x[index],32598.65130):
          return False
        else:
          return True
      else:
        if np.equal(x[index],98484.55432):
          return True
        else:
          return True
    else:
      if np.equal(x[index],87981.28851):
        if np.equal(x[index],46239.22066):
          return True
        else:
          return False
      else:
        if np.greater(x[index],01836.13507):
          return False
        else:
          return True
  def adf8(index):
    if np.equal(x[index],98292.24674):
      return True
    else:
      return True
  return multiple_operation([adf0(0)*+34.86, adf1(1)*+10.83, adf2(2)*+97.91, adf3(3)*-69.00, adf4(4)*+10.96, adf5(5)*-26.55, adf6(6)*-47.80, adf7(7)*+88.93, adf8(8)*+41.28], 74.46)
result=p(); 0.8157099697885196
IndLenGenome:486
IndGenome:[88, 59, 29, 20, 75, 85, 93, 35, 20, 73, 64, 86, 79, 95, 54, 26, 85, 4, 63, 64, 45, 5, 40, 25, 85, 60, 54, 7, 65, 64, 95, 16, 29, 6, 20, 62, 48, 75, 10, 35, 95, 72, 55, 53, 91, 31, 52, 4, 25, 7, 91, 97, 94, 91, 26, 56, 10, 52, 45, 17, 73, 17, 60, 97, 97, 74, 58, 65, 62, 32, 58, 78, 96, 40, 72, 19, 91, 95, 21, 34, 44, 45, 28, 22, 45, 95, 36, 78, 97, 83, 52, 75, 49, 48, 66, 5, 71, 83, 50, 5, 44, 36, 32, 43, 29, 18, 74, 28, 24, 95, 35, 34, 33, 45, 28, 22, 45, 95, 36, 78, 97, 29, 52, 1, 52, 48, 48, 5, 71, 83, 50, 90, 72, 55, 53, 91, 31, 52, 4, 25, 7, 91, 81, 94, 91, 26, 56, 10, 52, 45, 17, 73, 17, 60, 97, 97, 74, 58, 65, 62, 32, 58, 78, 96, 40, 72, 19, 91, 95, 21, 34, 44, 45, 28, 22, 45, 95, 36, 78, 97, 83, 52, 75, 49, 48, 66, 5, 71, 83, 50, 5, 44, 36, 32, 43, 29, 18, 74, 28, 24, 95, 35, 34, 33, 22, 28, 22, 45, 95, 36, 78, 97, 29, 18, 1, 52, 48, 48, 5, 71, 83, 50, 5, 44, 36, 32, 23, 29, 82, 32, 70, 76, 16, 30, 9, 4, 15, 75, 80, 51, 58, 63, 46, 31, 3, 95, 90, 87, 75, 84, 63, 10, 95, 23, 96, 39, 78, 82, 89, 12, 22, 24, 16, 37, 34, 54, 96, 22, 29, 96, 72, 92, 23, 24, 78, 76, 34, 42, 5, 81, 50, 98, 73, 79, 4, 36, 79, 7, 69, 31, 69, 11, 64, 56, 29, 10, 40, 39, 50, 81, 71, 20, 99, 6, 92, 89, 41, 32, 86, 65, 15, 50, 47, 81, 34, 87, 68, 0, 71, 58, 90, 58, 38, 39, 43, 60, 46, 30, 4, 21, 12, 98, 16, 37, 34, 54, 96, 22, 29, 21, 34, 92, 23, 24, 78, 37, 34, 42, 51, 81, 50, 98, 73, 79, 4, 36, 79, 7, 69, 31, 69, 48, 64, 56, 29, 10, 40, 74, 99, 92, 50, 59, 88, 55, 50, 88, 96, 95, 48, 50, 81, 71, 20, 99, 6, 92, 24, 41, 32, 31, 91, 15, 50, 47, 81, 34, 87, 68, 63, 71, 58, 90, 58, 38, 39, 43, 60, 46, 30, 4, 21, 12, 98, 75, 48, 86, 40, 17, 24, 32, 9, 19, 32, 12, 6, 61, 32, 81, 92, 41, 7, 40, 16, 31, 24, 54, 32, 71, 79, 51, 39, 12, 9, 15, 16, 7, 24, 54, 32, 71, 80, 51, 88, 77, 78, 50, 61, 5, 93, 22, 16, 30, 69, 8, 39, 19, 50, 28, 89, 93, 34, 53, 98, 72, 56, 10, 30, 42, 4, 22, 89, 47, 68, 9, 91, 51]
last_save: 100

Gen:429
TrainFitness:0.8187311178247734
TestFitness:0.8108108108108109
MaxGenLen:505
Individual: def p():
  def adf0(index):
    if np.less(x[index],50346.95465):
      return True
    else:
      return True
  def adf1(index):
    if np.less(x[index],54475.43696):
      return True
    else:
      return True
  def adf2(index):
    if np.equal(x[index],25311.24971):
      return False
    else:
      return True
  def adf3(index):
    if np.less(x[index],57370.77485):
      if np.equal(x[index],86029.15104):
        return False
      else:
        return True
    else:
      if np.greater(x[index],03732.59865):
        return False
      else:
        return False
  def adf4(index):
    if np.greater(x[index],39748.45541):
      return False
    else:
      return True
  def adf5(index):
    if np.greater(x[index],79212.88613):
      return True
    else:
      return True
  def adf6(index):
    if np.less(x[index],24571.14169):
      return True
    else:
      return True
  def adf7(index):
    if np.equal(x[index],77485.22886):
      if np.greater(x[index],15144.58255):
        if np.greater(x[index],32198.65130):
          return False
        else:
          return True
      else:
        if np.equal(x[index],98484.55432):
          return True
        else:
          return True
    else:
      if np.equal(x[index],27981.28851):
        if np.equal(x[index],46239.22066):
          return True
        else:
          return False
      else:
        if np.greater(x[index],01436.13577):
          return False
        else:
          return True
  def adf8(index):
    if np.equal(x[index],98292.24674):
      return True
    else:
      return True
  return multiple_operation([adf0(0)*+34.36, adf1(1)*+10.88, adf2(2)*+97.61, adf3(3)*-69.00, adf4(4)*+10.96, adf5(5)*-26.55, adf6(6)*-47.80, adf7(7)*+88.96, adf8(8)*-06.04], 28.67)
result=p(); 0.8187311178247734
IndLenGenome:489
IndGenome:[88, 59, 29, 20, 75, 85, 93, 35, 20, 73, 64, 86, 79, 95, 54, 26, 85, 4, 12, 64, 45, 5, 40, 25, 85, 84, 54, 7, 65, 64, 73, 16, 29, 6, 20, 62, 48, 75, 10, 35, 95, 72, 55, 53, 91, 31, 52, 4, 79, 7, 91, 97, 94, 91, 26, 56, 10, 52, 45, 17, 73, 17, 60, 97, 97, 74, 58, 65, 62, 32, 58, 78, 96, 40, 72, 19, 91, 95, 21, 30, 44, 45, 28, 22, 45, 95, 100, 83, 97, 83, 52, 75, 49, 48, 66, 5, 71, 83, 50, 5, 44, 36, 32, 43, 29, 7, 74, 28, 24, 95, 35, 34, 81, 45, 28, 22, 45, 95, 36, 78, 97, 29, 52, 1, 52, 48, 48, 66, 71, 83, 50, 90, 72, 55, 53, 91, 31, 52, 4, 25, 7, 91, 81, 94, 91, 26, 89, 10, 52, 45, 17, 73, 17, 60, 97, 97, 74, 58, 65, 62, 32, 58, 78, 96, 40, 72, 19, 91, 95, 21, 34, 44, 45, 28, 22, 45, 95, 36, 78, 97, 83, 52, 21, 49, 48, 66, 5, 71, 83, 50, 5, 44, 36, 32, 43, 29, 18, 74, 28, 24, 95, 35, 34, 33, 22, 28, 22, 45, 95, 36, 72, 97, 29, 18, 1, 52, 48, 48, 5, 71, 83, 50, 5, 44, 36, 32, 23, 29, 82, 32, 70, 76, 16, 30, 45, 4, 15, 75, 80, 51, 54, 63, 46, 31, 3, 95, 47, 87, 75, 84, 63, 10, 95, 23, 96, 39, 78, 82, 89, 12, 22, 24, 16, 37, 34, 54, 96, 22, 29, 96, 72, 92, 23, 24, 53, 76, 34, 42, 5, 81, 50, 98, 58, 79, 4, 36, 79, 7, 6, 31, 69, 11, 64, 56, 29, 10, 40, 39, 50, 81, 71, 20, 99, 6, 92, 89, 41, 32, 86, 65, 15, 50, 47, 81, 34, 87, 68, 0, 71, 58, 90, 58, 38, 39, 36, 38, 39, 43, 60, 46, 30, 4, 21, 12, 98, 16, 37, 34, 54, 96, 22, 29, 21, 34, 92, 23, 24, 78, 37, 34, 42, 51, 81, 50, 98, 73, 79, 4, 36, 79, 7, 69, 31, 69, 48, 64, 56, 29, 10, 40, 74, 99, 92, 50, 59, 88, 55, 50, 88, 96, 95, 48, 50, 81, 71, 20, 99, 6, 92, 24, 41, 32, 31, 91, 15, 50, 47, 81, 34, 87, 68, 63, 71, 58, 90, 58, 38, 39, 43, 60, 46, 30, 4, 21, 12, 98, 75, 48, 86, 40, 17, 24, 32, 9, 19, 32, 12, 6, 61, 32, 81, 92, 41, 7, 40, 16, 31, 24, 54, 32, 71, 79, 51, 39, 12, 9, 15, 16, 7, 24, 54, 32, 71, 80, 51, 88, 77, 78, 50, 61, 5, 93, 22, 16, 30, 69, 8, 39, 19, 50, 28, 89, 93, 34, 53, 98, 72, 56, 10, 30, 42, 4, 22, 89, 47, 68, 9, 91, 51]
last_save: 100

Gen:500
last_save: 100
Exit:FalseTrueFalse

Gen:1
TrainFitness:0.8036253776435045
TestFitness:0.8108108108108109
MaxGenLen:400
Individual: def p():
  def adf0(index):
    if np.equal(x[index],16675.37389):
      return False
    else:
      return True
  def adf1(index):
    if np.less(x[index],78211.84417):
      return False
    else:
      return True
  def adf2(index):
    if np.equal(x[index],68797.61713):
      return False
    else:
      return False
  def adf3(index):
    if np.less(x[index],96012.44969):
      return False
    else:
      return False
  def adf4(index):
    if np.greater(x[index],58269.65847):
      return False
    else:
      return True
  def adf5(index):
    if np.equal(x[index],83423.61031):
      return False
    else:
      return False
  def adf6(index):
    if np.equal(x[index],17109.38549):
      return True
    else:
      return False
  def adf7(index):
    if np.greater(x[index],95788.57349):
      return True
    else:
      return False
  def adf8(index):
    if np.greater(x[index],43811.36106):
      return False
    else:
      return False
  return multiple_operation([adf0(0)*+34.98, adf1(1)*+14.36, adf2(2)*+84.06, adf3(3)*+57.15, adf4(4)*+94.47, adf5(5)*+07.27, adf6(6)*-21.94, adf7(7)*-21.57, adf8(8)*-78.48], 98.07)
result=p(); 0.8036253776435045
IndLenGenome:339
IndGenome:[74, 22, 53, 83, 7, 41, 91, 99, 58, 67, 78, 36, 62, 27, 86, 14, 15, 13, 67, 14, 75, 14, 76, 5, 48, 49, 88, 50, 22, 15, 43, 40, 89, 20, 81, 55, 32, 40, 30, 60, 63, 19, 80, 62, 86, 83, 92, 87, 90, 39, 95, 22, 20, 22, 59, 19, 92, 55, 79, 5, 18, 89, 24, 97, 69, 88, 9, 32, 27, 65, 21, 10, 30, 44, 20, 71, 43, 35, 24, 24, 91, 7, 88, 17, 18, 40, 60, 56, 85, 35, 96, 75, 68, 14, 36, 78, 55, 11, 80, 54, 91, 44, 59, 58, 76, 46, 51, 56, 54, 91, 57, 69, 84, 47, 19, 66, 40, 97, 62, 88, 48, 89, 42, 81, 99, 25, 94, 53, 33, 81, 70, 15, 29, 34, 6, 19, 26, 92, 98, 76, 38, 58, 80, 71, 76, 73, 95, 64, 76, 92, 24, 82, 49, 47, 92, 97, 71, 21, 44, 95, 35, 50, 40, 25, 81, 15, 11, 77, 27, 34, 3, 69, 99, 37, 87, 40, 64, 81, 37, 33, 28, 77, 11, 93, 68, 52, 61, 71, 46, 71, 40, 43, 39, 30, 83, 75, 25, 86, 23, 27, 96, 31, 49, 91, 87, 13, 17, 23, 89, 36, 61, 86, 87, 86, 49, 28, 37, 85, 73, 17, 24, 39, 85, 65, 98, 38, 73, 47, 38, 62, 13, 31, 0, 37, 21, 17, 18, 35, 24, 32, 69, 82, 87, 45, 20, 59, 16, 86, 37, 67, 71, 92, 62, 51, 59, 34, 27, 55, 75, 18, 97, 50, 56, 48, 34, 51, 9, 15, 8, 44, 11, 27, 48, 41, 73, 99, 5, 2, 84, 87, 75, 33, 77, 6, 95, 85, 50, 69, 51, 42, 18, 15, 23, 49, 34, 43, 15, 62, 15, 96, 19, 4, 23, 26, 1, 38, 73, 20, 79, 89, 79, 50, 12, 29, 20, 87, 57, 29, 13, 70, 61, 6, 41, 56, 83, 94, 62, 22, 24, 67, 61, 67, 72, 85, 21, 27, 68, 37, 98]
last_save: 100

Gen:251
last_save: 100
Exit:FalseFalseTrue

Gen:1
TrainFitness:0.8126888217522659
TestFitness:0.7567567567567568
MaxGenLen:400
Individual: def p():
  def adf0(index):
    if np.greater(x[index],71468.42743):
      return False
    else:
      return False
  def adf1(index):
    if np.less(x[index],57228.07713):
      return False
    else:
      return True
  def adf2(index):
    if np.less(x[index],24280.73189):
      return True
    else:
      return True
  def adf3(index):
    if np.greater(x[index],74327.27383):
      return False
    else:
      return True
  def adf4(index):
    if np.equal(x[index],65615.22099):
      return True
    else:
      return False
  def adf5(index):
    if np.less(x[index],02210.26452):
      return True
    else:
      return False
  def adf6(index):
    if np.equal(x[index],19235.20115):
      return False
    else:
      return False
  def adf7(index):
    if np.less(x[index],01146.73480):
      return True
    else:
      return False
  def adf8(index):
    if np.greater(x[index],08324.11297):
      return False
    else:
      return False
  return multiple_operation([adf0(0)*+30.77, adf1(1)*+95.84, adf2(2)*-21.59, adf3(3)*+62.64, adf4(4)*+43.47, adf5(5)*-50.53, adf6(6)*+82.74, adf7(7)*+22.94, adf8(8)*+46.54], 10.40)
result=p(); 0.8126888217522659
IndLenGenome:339
IndGenome:[73, 84, 87, 99, 73, 35, 90, 74, 27, 97, 36, 79, 96, 82, 71, 80, 59, 35, 7, 54, 20, 62, 79, 32, 63, 60, 25, 30, 70, 62, 54, 64, 16, 28, 81, 63, 24, 64, 9, 68, 98, 46, 30, 42, 6, 66, 43, 20, 1, 11, 67, 2, 11, 62, 60, 31, 30, 5, 94, 73, 74, 41, 45, 78, 13, 85, 58, 58, 28, 75, 67, 62, 82, 40, 72, 17, 99, 54, 11, 100, 56, 63, 35, 51, 12, 74, 66, 49, 79, 74, 6, 82, 57, 30, 27, 44, 62, 82, 87, 85, 43, 4, 36, 77, 57, 54, 9, 31, 74, 33, 55, 35, 45, 5, 71, 72, 91, 49, 69, 74, 54, 57, 62, 43, 73, 47, 84, 23, 49, 54, 27, 79, 12, 27, 83, 45, 99, 74, 58, 15, 91, 82, 32, 58, 88, 60, 50, 57, 98, 90, 13, 30, 21, 14, 36, 27, 19, 12, 63, 97, 32, 3, 69, 56, 84, 94, 78, 54, 93, 14, 80, 18, 49, 43, 76, 75, 72, 10, 33, 22, 45, 27, 34, 42, 67, 45, 64, 17, 16, 72, 81, 20, 62, 72, 78, 97, 61, 42, 95, 52, 19, 38, 31, 56, 21, 10, 19, 26, 40, 22, 95, 10, 22, 67, 95, 44, 28, 87, 53, 64, 57, 91, 66, 72, 29, 84, 74, 85, 21, 25, 75, 76, 42, 97, 14, 53, 98, 4, 1, 69, 52, 4, 34, 69, 41, 25, 74, 3, 55, 69, 82, 27, 84, 30, 79, 58, 91, 20, 41, 15, 28, 63, 52, 59, 18, 42, 3, 16, 79, 6, 3, 5, 100, 8, 19, 52, 11, 0, 19, 0, 25, 47, 16, 6, 29, 71, 25, 69, 51, 85, 75, 52, 89, 42, 38, 91, 44, 1, 43, 30, 46, 69, 80, 93, 100, 56, 63, 17, 57, 100, 83, 16, 16, 74, 57, 54, 66, 55, 27, 21, 70, 45, 23, 44, 5, 26, 41, 60, 65, 91, 20, 94, 87, 45, 33, 85, 71, 84, 75]
last_save: 100

Gen:177
TrainFitness:0.8157099697885196
TestFitness:0.7837837837837838
MaxGenLen:445
Individual: def p():
  def adf0(index):
    if np.equal(x[index],35769.71230):
      if np.equal(x[index],54781.25107):
        return True
      else:
        return True
    else:
      if np.equal(x[index],15151.56894):
        return True
      else:
        return False
  def adf1(index):
    if np.less(x[index],15131.59894):
      return False
    else:
      return False
  def adf2(index):
    if np.less(x[index],87733.26202):
      return False
    else:
      return True
  def adf3(index):
    if np.equal(x[index],87201.80470):
      return False
    else:
      return False
  def adf4(index):
    if np.greater(x[index],14507.97521):
      return False
    else:
      return True
  def adf5(index):
    if np.greater(x[index],21261.52563):
      return True
    else:
      return True
  def adf6(index):
    if np.greater(x[index],20038.79560):
      if np.greater(x[index],36800.26369):
        return True
      else:
        return False
    else:
      if np.greater(x[index],07299.75616):
        return True
      else:
        return False
  def adf7(index):
    if np.less(x[index],02232.30151):
      if np.equal(x[index],76692.87801):
        return True
      else:
        return True
    else:
      if np.greater(x[index],40768.79824):
        return False
      else:
        return False
  def adf8(index):
    if np.equal(x[index],76775.19488):
      return False
    else:
      return True
  return multiple_operation([adf0(0)*-43.75, adf1(1)*+20.72, adf2(2)*+46.30, adf3(3)*+78.68, adf4(4)*+94.92, adf5(5)*-70.86, adf6(6)*-24.00, adf7(7)*+72.18, adf8(8)*-07.22], 75.67)
result=p(); 0.8157099697885196
IndLenGenome:410
IndGenome:[6, 82, 51, 71, 45, 32, 17, 33, 65, 37, 56, 49, 47, 61, 52, 23, 70, 82, 20, 84, 25, 94, 7, 8, 91, 72, 55, 91, 50, 97, 14, 68, 3, 80, 5, 41, 5, 1, 15, 61, 35, 66, 48, 39, 34, 32, 31, 71, 35, 99, 91, 63, 41, 5, 1, 73, 61, 65, 9, 48, 99, 34, 39, 31, 71, 35, 21, 91, 79, 88, 17, 97, 23, 93, 92, 16, 2, 20, 2, 85, 56, 88, 70, 45, 89, 31, 98, 37, 42, 90, 41, 8, 70, 94, 77, 30, 25, 81, 88, 85, 53, 36, 30, 81, 74, 35, 60, 47, 79, 27, 25, 72, 51, 41, 12, 69, 95, 23, 93, 84, 92, 31, 82, 66, 51, 65, 42, 35, 26, 43, 72, 12, 59, 71, 50, 18, 37, 2, 20, 10, 43, 18, 37, 19, 95, 26, 40, 93, 96, 65, 43, 36, 88, 30, 90, 92, 96, 53, 36, 39, 62, 41, 25, 36, 30, 10, 97, 32, 79, 69, 97, 35, 86, 91, 96, 76, 75, 75, 36, 28, 13, 56, 60, 42, 32, 3, 12, 93, 80, 41, 25, 51, 17, 83, 65, 77, 86, 66, 39, 32, 38, 77, 68, 100, 81, 52, 94, 15, 96, 45, 84, 50, 17, 16, 78, 27, 9, 88, 22, 34, 3, 45, 72, 55, 84, 32, 90, 17, 16, 87, 27, 25, 61, 89, 34, 48, 58, 97, 34, 61, 79, 72, 67, 53, 54, 13, 27, 85, 73, 94, 80, 62, 20, 77, 22, 73, 42, 65, 84, 56, 43, 70, 96, 94, 86, 27, 38, 56, 78, 64, 8, 28, 29, 24, 29, 32, 82, 95, 39, 17, 100, 8, 76, 34, 47, 54, 12, 84, 40, 30, 42, 72, 12, 77, 42, 41, 28, 17, 13, 97, 0, 27, 52, 42, 30, 7, 65, 16, 57, 30, 8, 8, 1, 28, 54, 21, 81, 95, 5, 19, 76, 89, 96, 3, 60, 66, 77, 94, 30, 42, 72, 12, 72, 82, 1, 13, 42, 22, 7, 38, 16, 57, 44, 8, 8, 46, 28, 54, 21, 81, 95, 5, 1, 14, 2, 72, 93, 78, 61, 12, 88, 4, 93, 67, 83, 55, 49, 19, 25, 64, 47, 78, 2, 67, 52, 27, 39, 87, 77, 2, 24, 45, 73, 54, 99, 70, 41, 11, 1, 66, 24, 40, 18, 41, 64, 43, 60, 84, 51, 99, 65, 48, 47, 44, 66, 37, 12, 47, 13, 9]
last_save: 100

Gen:185
TrainFitness:0.8187311178247734
TestFitness:0.7567567567567568
MaxGenLen:445
Individual: def p():
  def adf0(index):
    if np.equal(x[index],35769.71230):
      if np.equal(x[index],54781.25107):
        return True
      else:
        return True
    else:
      if np.equal(x[index],15151.56894):
        return True
      else:
        return False
  def adf1(index):
    if np.less(x[index],15131.59894):
      return False
    else:
      return False
  def adf2(index):
    if np.less(x[index],87733.26202):
      return False
    else:
      return True
  def adf3(index):
    if np.equal(x[index],87201.80470):
      return False
    else:
      return False
  def adf4(index):
    if np.greater(x[index],14507.97521):
      return False
    else:
      return True
  def adf5(index):
    if np.greater(x[index],21261.52563):
      return True
    else:
      return True
  def adf6(index):
    if np.greater(x[index],20038.89560):
      if np.greater(x[index],36800.26369):
        return True
      else:
        return False
    else:
      if np.greater(x[index],07299.75616):
        return True
      else:
        return False
  def adf7(index):
    if np.less(x[index],02032.30151):
      if np.equal(x[index],76692.87831):
        return True
      else:
        return True
    else:
      if np.greater(x[index],40767.75824):
        return False
      else:
        return False
  def adf8(index):
    if np.equal(x[index],76775.19088):
      return False
    else:
      return True
  return multiple_operation([adf0(0)*-43.75, adf1(1)*+20.72, adf2(2)*+46.30, adf3(3)*+70.68, adf4(4)*+94.92, adf5(5)*-70.86, adf6(6)*-24.00, adf7(7)*+72.18, adf8(8)*-07.22], 75.67)
result=p(); 0.8187311178247734
IndLenGenome:410
IndGenome:[6, 82, 51, 71, 45, 32, 17, 33, 65, 37, 56, 49, 47, 61, 52, 23, 70, 82, 20, 84, 25, 94, 7, 8, 91, 72, 55, 91, 50, 97, 14, 68, 3, 80, 5, 41, 5, 1, 15, 61, 35, 66, 48, 39, 34, 32, 31, 71, 35, 99, 91, 63, 41, 5, 1, 73, 61, 65, 9, 48, 99, 34, 39, 31, 71, 35, 21, 91, 79, 88, 17, 97, 23, 93, 92, 16, 2, 20, 2, 85, 56, 88, 70, 45, 89, 31, 98, 37, 42, 90, 41, 8, 70, 94, 77, 30, 25, 81, 88, 85, 53, 36, 30, 81, 74, 35, 60, 47, 79, 27, 25, 72, 51, 41, 12, 69, 95, 23, 93, 84, 92, 31, 82, 66, 51, 65, 42, 35, 26, 43, 72, 12, 59, 71, 50, 18, 37, 2, 20, 10, 43, 18, 8, 19, 95, 26, 40, 6, 96, 65, 43, 36, 88, 30, 90, 92, 96, 53, 36, 39, 62, 41, 25, 36, 30, 10, 97, 32, 79, 69, 97, 35, 86, 91, 96, 76, 75, 75, 41, 28, 13, 56, 60, 42, 40, 3, 12, 93, 80, 41, 25, 51, 17, 83, 65, 77, 86, 66, 39, 32, 38, 77, 68, 43, 81, 52, 94, 15, 96, 45, 84, 50, 17, 16, 27, 27, 65, 88, 22, 34, 3, 45, 72, 55, 84, 32, 90, 17, 16, 87, 27, 25, 61, 89, 40, 48, 58, 97, 34, 61, 79, 72, 67, 53, 54, 13, 27, 85, 73, 94, 80, 62, 20, 77, 22, 73, 42, 65, 84, 56, 43, 70, 96, 94, 86, 27, 40, 56, 78, 64, 8, 28, 29, 24, 29, 32, 82, 95, 39, 17, 100, 8, 76, 34, 47, 54, 12, 84, 40, 30, 42, 72, 12, 77, 42, 41, 28, 17, 13, 97, 0, 27, 52, 42, 30, 7, 65, 16, 57, 30, 8, 8, 1, 28, 54, 21, 81, 95, 5, 19, 76, 89, 96, 3, 60, 66, 77, 94, 30, 42, 72, 12, 72, 82, 1, 13, 42, 22, 7, 38, 16, 57, 44, 8, 8, 46, 28, 54, 21, 81, 95, 5, 1, 14, 2, 72, 93, 78, 61, 12, 88, 4, 93, 67, 83, 55, 49, 19, 25, 64, 47, 78, 2, 67, 52, 27, 39, 87, 77, 2, 24, 45, 73, 54, 99, 70, 41, 11, 1, 66, 24, 40, 18, 41, 64, 43, 60, 84, 51, 99, 65, 48, 47, 44, 66, 37, 12, 47, 13, 9]
last_save: 100

Gen:212
TrainFitness:0.8277945619335347
TestFitness:0.7297297297297297
MaxGenLen:445
Individual: def p():
  def adf0(index):
    if np.equal(x[index],35769.71230):
      if np.equal(x[index],54781.25107):
        return True
      else:
        return True
    else:
      if np.equal(x[index],15151.56894):
        return True
      else:
        return False
  def adf1(index):
    if np.less(x[index],15131.59894):
      return False
    else:
      return False
  def adf2(index):
    if np.less(x[index],87733.26202):
      return False
    else:
      return True
  def adf3(index):
    if np.equal(x[index],87201.80470):
      return False
    else:
      return False
  def adf4(index):
    if np.greater(x[index],14507.97521):
      return False
    else:
      return True
  def adf5(index):
    if np.greater(x[index],21291.52563):
      return True
    else:
      return True
  def adf6(index):
    if np.greater(x[index],20038.89560):
      if np.greater(x[index],36392.15600):
        return False
      else:
        return True
    else:
      if np.greater(x[index],56466.55183):
        return True
      else:
        return True
  def adf7(index):
    if np.greater(x[index],01517.35766):
      return False
    else:
      return True
  def adf8(index):
    if np.less(x[index],24565.40767):
      if np.equal(x[index],24352.54207):
        if np.greater(x[index],54207.67751):
          return False
        else:
          return True
      else:
        if np.less(x[index],41947.39347):
          return False
        else:
          return True
    else:
      if np.equal(x[index],72325.46306):
        if np.equal(x[index],06848.89492):
          return True
        else:
          return False
      else:
        if np.equal(x[index],86474.24002):
          return True
        else:
          return True
  return multiple_operation([adf0(0)*+37.07, adf1(1)*+75.67, adf2(2)*+18.41, adf3(3)*-96.96, adf4(4)*+74.02, adf5(5)*+21.32, adf6(6)*-67.48, adf7(7)*+41.15, adf8(8)*-22.38], 28.43)
result=p(); 0.8277945619335347
IndLenGenome:412
IndGenome:[6, 82, 51, 71, 45, 32, 17, 33, 65, 37, 56, 49, 47, 61, 52, 23, 70, 82, 20, 84, 25, 94, 7, 8, 91, 72, 55, 91, 50, 97, 14, 68, 3, 80, 5, 41, 5, 1, 15, 61, 35, 66, 48, 39, 34, 32, 31, 71, 35, 99, 91, 63, 41, 5, 1, 73, 61, 65, 9, 48, 99, 34, 39, 31, 71, 35, 21, 91, 79, 88, 17, 97, 23, 93, 92, 16, 2, 20, 2, 85, 56, 88, 70, 45, 89, 31, 98, 37, 42, 90, 41, 8, 70, 94, 77, 30, 25, 81, 88, 85, 53, 36, 30, 81, 74, 35, 60, 47, 79, 27, 25, 72, 51, 41, 12, 69, 95, 23, 93, 84, 92, 31, 82, 39, 51, 65, 42, 35, 26, 43, 72, 12, 59, 71, 50, 18, 37, 2, 20, 10, 43, 18, 8, 19, 95, 26, 40, 6, 96, 65, 43, 36, 63, 39, 62, 41, 25, 36, 30, 10, 97, 32, 79, 69, 97, 35, 86, 24, 96, 76, 75, 75, 41, 28, 13, 56, 60, 42, 40, 3, 12, 93, 80, 41, 25, 51, 17, 83, 65, 77, 86, 66, 39, 32, 38, 77, 68, 43, 81, 52, 94, 15, 96, 45, 84, 50, 17, 16, 27, 27, 65, 88, 22, 34, 3, 45, 72, 55, 84, 32, 90, 17, 16, 45, 72, 55, 84, 32, 90, 17, 16, 87, 27, 25, 61, 89, 40, 33, 58, 97, 34, 61, 79, 4, 67, 53, 49, 13, 4, 27, 73, 94, 80, 62, 20, 77, 22, 73, 42, 65, 84, 56, 43, 70, 96, 94, 86, 27, 40, 56, 78, 64, 8, 28, 29, 24, 29, 32, 82, 95, 39, 17, 100, 8, 76, 34, 47, 54, 12, 84, 40, 30, 42, 72, 30, 77, 42, 41, 28, 17, 13, 97, 0, 27, 52, 42, 30, 7, 65, 16, 57, 30, 8, 8, 1, 28, 54, 21, 81, 95, 5, 19, 76, 89, 96, 3, 60, 66, 77, 94, 30, 42, 72, 12, 72, 82, 1, 13, 42, 22, 7, 38, 16, 57, 44, 8, 8, 46, 28, 54, 21, 81, 95, 5, 1, 14, 2, 72, 93, 78, 61, 12, 88, 4, 93, 67, 83, 55, 49, 19, 25, 64, 47, 78, 2, 67, 52, 27, 39, 87, 77, 2, 24, 45, 73, 54, 99, 70, 41, 11, 1, 66, 24, 40, 18, 41, 64, 43, 60, 84, 51, 99, 65, 48, 47, 44, 66, 37, 12, 47, 13, 9]
last_save: 100

Gen:462
last_save: 100
Exit:FalseFalseTrue

Gen:1
TrainFitness:0.8036253776435045
TestFitness:0.8108108108108109
MaxGenLen:400
Individual: def p():
  def adf0(index):
    if np.greater(x[index],36150.41887):
      return False
    else:
      return False
  def adf1(index):
    if np.less(x[index],99100.65350):
      return False
    else:
      return True
  def adf2(index):
    if np.less(x[index],61523.51605):
      return False
    else:
      return False
  def adf3(index):
    if np.less(x[index],55875.38590):
      return False
    else:
      return False
  def adf4(index):
    if np.less(x[index],78978.05658):
      return True
    else:
      return True
  def adf5(index):
    if np.greater(x[index],54851.74831):
      return False
    else:
      return True
  def adf6(index):
    if np.greater(x[index],49866.44440):
      return True
    else:
      return True
  def adf7(index):
    if np.equal(x[index],63773.47679):
      return False
    else:
      return False
  def adf8(index):
    if np.equal(x[index],30644.07188):
      return False
    else:
      return True
  return multiple_operation([adf0(0)*-73.39, adf1(1)*+32.73, adf2(2)*+22.66, adf3(3)*-28.28, adf4(4)*+80.40, adf5(5)*-78.95, adf6(6)*+60.51, adf7(7)*+61.94, adf8(8)*+57.15], 39.12)
result=p(); 0.8036253776435045
IndLenGenome:339
IndGenome:[27, 62, 96, 49, 56, 39, 34, 43, 71, 65, 64, 54, 65, 43, 85, 38, 8, 22, 69, 71, 68, 1, 20, 74, 42, 3, 30, 45, 15, 56, 40, 54, 65, 91, 70, 13, 51, 6, 75, 10, 82, 57, 97, 25, 28, 59, 72, 95, 70, 71, 86, 81, 15, 93, 22, 82, 94, 34, 48, 85, 74, 23, 21, 61, 35, 90, 12, 15, 33, 41, 50, 93, 56, 40, 29, 85, 15, 12, 18, 28, 74, 22, 75, 39, 45, 18, 72, 32, 83, 15, 26, 27, 40, 94, 97, 63, 22, 73, 93, 34, 91, 64, 18, 16, 14, 77, 59, 86, 97, 57, 19, 78, 86, 79, 43, 98, 35, 73, 35, 35, 30, 58, 89, 27, 68, 96, 44, 98, 13, 87, 16, 35, 44, 23, 31, 83, 41, 88, 39, 2, 90, 27, 68, 27, 54, 95, 38, 17, 41, 61, 79, 64, 95, 44, 60, 78, 57, 46, 87, 7, 96, 70, 53, 98, 85, 20, 16, 93, 28, 56, 37, 97, 61, 74, 77, 71, 78, 15, 88, 10, 33, 59, 17, 26, 36, 7, 90, 57, 46, 15, 59, 99, 55, 20, 65, 60, 63, 18, 25, 50, 59, 64, 44, 40, 51, 40, 45, 55, 91, 57, 18, 79, 41, 99, 10, 20, 83, 55, 90, 15, 46, 31, 21, 92, 65, 26, 73, 50, 89, 44, 20, 8, 96, 55, 60, 76, 23, 19, 45, 27, 17, 75, 92, 77, 0, 33, 4, 1, 20, 40, 80, 68, 17, 97, 80, 52, 25, 3, 46, 56, 12, 59, 25, 4, 75, 73, 77, 30, 27, 16, 73, 46, 20, 97, 12, 22, 41, 13, 42, 68, 80, 11, 36, 90, 92, 6, 47, 4, 19, 53, 4, 63, 43, 9, 73, 13, 39, 25, 38, 96, 94, 27, 42, 58, 3, 53, 94, 73, 31, 77, 85, 15, 86, 16, 3, 5, 58, 18, 71, 93, 97, 24, 3, 27, 26, 41, 36, 22, 6, 9, 43, 55, 57, 79, 55, 73, 24, 85, 3]
last_save: 100

Gen:251
last_save: 100
Exit:FalseFalseTrue

Gen:1
TrainFitness:0.8042168674698795
TestFitness:0.8055555555555556
MaxGenLen:400
Individual: def p():
  def adf0(index):
    if np.less(x[index],32254.68138):
      return False
    else:
      return True
  def adf1(index):
    if np.greater(x[index],43871.08272):
      return True
    else:
      return True
  def adf2(index):
    if np.equal(x[index],62712.08332):
      return False
    else:
      return False
  def adf3(index):
    if np.greater(x[index],51655.41298):
      return True
    else:
      return True
  def adf4(index):
    if np.equal(x[index],42828.93231):
      return True
    else:
      return False
  def adf5(index):
    if np.greater(x[index],89480.06430):
      return True
    else:
      return True
  def adf6(index):
    if np.greater(x[index],20304.26893):
      return False
    else:
      return True
  def adf7(index):
    if np.equal(x[index],46719.57355):
      return True
    else:
      return False
  def adf8(index):
    if np.greater(x[index],07842.49607):
      return True
    else:
      return True
  return multiple_operation([adf0(0)*-37.49, adf1(1)*+43.62, adf2(2)*+20.79, adf3(3)*+58.14, adf4(4)*-27.46, adf5(5)*+40.57, adf6(6)*+01.56, adf7(7)*+47.38, adf8(8)*-23.35], 98.25)
result=p(); 0.8042168674698795
IndLenGenome:339
IndGenome:[19, 37, 39, 98, 50, 21, 90, 90, 20, 96, 65, 65, 19, 70, 5, 47, 9, 67, 12, 8, 50, 18, 73, 1, 18, 15, 15, 1, 40, 66, 74, 33, 42, 40, 36, 19, 41, 60, 73, 81, 70, 12, 28, 33, 47, 25, 78, 87, 19, 72, 47, 39, 66, 41, 52, 9, 40, 56, 82, 42, 52, 60, 52, 75, 90, 91, 32, 80, 24, 52, 45, 90, 91, 35, 96, 51, 21, 12, 63, 62, 16, 28, 79, 12, 28, 57, 24, 61, 14, 89, 10, 54, 70, 65, 39, 42, 95, 47, 38, 5, 58, 64, 70, 68, 20, 43, 73, 39, 73, 48, 36, 65, 83, 17, 38, 38, 79, 12, 35, 17, 19, 76, 58, 40, 14, 19, 64, 82, 18, 93, 94, 64, 49, 90, 32, 26, 41, 47, 53, 44, 55, 75, 60, 41, 35, 16, 22, 14, 65, 84, 97, 47, 49, 37, 39, 69, 62, 52, 24, 33, 37, 98, 84, 28, 88, 29, 40, 61, 36, 95, 88, 31, 52, 37, 73, 31, 92, 52, 60, 90, 41, 72, 55, 69, 77, 74, 88, 76, 44, 78, 76, 56, 64, 53, 63, 37, 69, 83, 34, 47, 83, 78, 48, 88, 35, 66, 7, 31, 68, 17, 80, 62, 58, 94, 13, 32, 25, 12, 46, 42, 61, 12, 23, 31, 48, 40, 73, 10, 98, 54, 80, 68, 56, 62, 32, 15, 78, 71, 79, 37, 89, 0, 40, 78, 99, 43, 48, 8, 41, 89, 15, 57, 0, 8, 81, 55, 44, 24, 65, 49, 67, 10, 8, 81, 5, 33, 60, 5, 91, 21, 48, 8, 59, 50, 12, 37, 47, 48, 33, 11, 45, 33, 58, 6, 8, 95, 95, 86, 66, 57, 54, 18, 34, 26, 87, 44, 50, 31, 44, 85, 83, 68, 86, 22, 24, 59, 99, 5, 22, 76, 6, 20, 63, 28, 25, 90, 3, 59, 83, 44, 53, 58, 28, 38, 37, 64, 69, 6, 57, 78, 17, 74, 48, 95, 59, 33, 74, 80, 88]
last_save: 100

Gen:251
last_save: 100
Exit:FalseFalseTrue

Gen:1
TrainFitness:0.8042168674698795
TestFitness:0.8055555555555556
MaxGenLen:400
Individual: def p():
  def adf0(index):
    if np.equal(x[index],77301.60593):
      return False
    else:
      return False
  def adf1(index):
    if np.less(x[index],53084.74818):
      return False
    else:
      return True
  def adf2(index):
    if np.less(x[index],69740.78640):
      return False
    else:
      return False
  def adf3(index):
    if np.greater(x[index],04329.45330):
      return False
    else:
      return False
  def adf4(index):
    if np.greater(x[index],42807.75634):
      return True
    else:
      return False
  def adf5(index):
    if np.equal(x[index],63440.51329):
      return True
    else:
      return False
  def adf6(index):
    if np.less(x[index],87641.07515):
      return False
    else:
      return True
  def adf7(index):
    if np.less(x[index],43080.10708):
      return True
    else:
      return True
  def adf8(index):
    if np.less(x[index],94885.55312):
      return False
    else:
      return True
  return multiple_operation([adf0(0)*+38.77, adf1(1)*+85.86, adf2(2)*-38.80, adf3(3)*+13.88, adf4(4)*+05.39, adf5(5)*-58.88, adf6(6)*+89.25, adf7(7)*+56.87, adf8(8)*+75.82], 52.46)
result=p(); 0.8042168674698795
IndLenGenome:339
IndGenome:[41, 23, 65, 65, 60, 47, 19, 68, 21, 27, 70, 29, 15, 55, 46, 24, 40, 90, 66, 60, 75, 21, 70, 15, 23, 6, 58, 73, 99, 35, 92, 12, 89, 87, 28, 14, 13, 85, 71, 90, 44, 10, 30, 96, 83, 100, 15, 88, 90, 28, 68, 89, 4, 34, 88, 91, 78, 89, 35, 31, 19, 22, 83, 13, 93, 78, 53, 14, 11, 7, 55, 82, 27, 98, 38, 75, 41, 67, 95, 37, 32, 44, 55, 11, 53, 22, 89, 70, 76, 26, 22, 44, 90, 48, 48, 2, 94, 52, 49, 45, 68, 91, 70, 8, 70, 38, 101, 24, 59, 39, 49, 81, 11, 18, 30, 10, 54, 38, 56, 68, 33, 39, 65, 25, 30, 87, 71, 37, 63, 61, 12, 37, 27, 59, 65, 15, 6, 23, 10, 98, 2, 33, 15, 40, 90, 52, 24, 99, 64, 35, 82, 55, 95, 46, 69, 34, 58, 72, 75, 46, 52, 54, 14, 44, 37, 26, 1, 70, 27, 28, 5, 73, 20, 47, 70, 35, 77, 67, 39, 58, 47, 65, 20, 63, 35, 93, 27, 64, 14, 73, 38, 87, 16, 68, 40, 68, 22, 37, 35, 58, 65, 86, 41, 90, 88, 14, 21, 53, 83, 5, 67, 67, 80, 70, 15, 78, 14, 61, 75, 18, 12, 53, 77, 40, 38, 40, 24, 52, 49, 60, 79, 100, 52, 47, 62, 59, 0, 51, 81, 57, 64, 63, 35, 32, 92, 31, 76, 26, 27, 56, 54, 37, 29, 0, 82, 85, 70, 23, 89, 12, 66, 51, 47, 62, 1, 77, 71, 59, 98, 0, 12, 39, 58, 34, 77, 46, 43, 84, 10, 65, 94, 48, 51, 91, 20, 30, 85, 33, 85, 81, 29, 99, 68, 45, 87, 62, 43, 45, 80, 99, 12, 81, 52, 86, 11, 4, 21, 5, 80, 75, 10, 63, 63, 72, 74, 94, 57, 31, 3, 79, 43, 39, 51, 70, 40, 12, 31, 92, 41, 65, 80, 20, 84, 29, 55, 54, 63, 73, 10]
last_save: 100

Gen:251
last_save: 100
Exit:FalseFalseTrue

Gen:1
TrainFitness:0.8042168674698795
TestFitness:0.8055555555555556
MaxGenLen:400
Individual: def p():
  def adf0(index):
    if np.equal(x[index],06044.81169):
      return True
    else:
      return True
  def adf1(index):
    if np.equal(x[index],66621.85151):
      return False
    else:
      return False
  def adf2(index):
    if np.equal(x[index],03262.03855):
      return True
    else:
      return False
  def adf3(index):
    if np.less(x[index],20751.37677):
      return False
    else:
      return False
  def adf4(index):
    if np.less(x[index],99543.47164):
      return True
    else:
      return True
  def adf5(index):
    if np.greater(x[index],91928.59258):
      return False
    else:
      return False
  def adf6(index):
    if np.equal(x[index],36001.44259):
      return False
    else:
      return True
  def adf7(index):
    if np.equal(x[index],18496.52926):
      return True
    else:
      return False
  def adf8(index):
    if np.less(x[index],76090.75749):
      return False
    else:
      return True
  return multiple_operation([adf0(0)*+99.54, adf1(1)*-15.14, adf2(2)*+29.88, adf3(3)*+13.80, adf4(4)*-25.21, adf5(5)*+09.58, adf6(6)*+21.78, adf7(7)*-74.90, adf8(8)*-50.37], 23.95)
result=p(); 0.8042168674698795
IndLenGenome:339
IndGenome:[61, 18, 31, 52, 99, 29, 21, 60, 30, 49, 56, 75, 50, 32, 65, 93, 68, 33, 60, 1, 85, 85, 9, 34, 96, 22, 49, 28, 56, 47, 1, 55, 73, 70, 64, 66, 40, 67, 19, 91, 91, 70, 52, 89, 42, 45, 45, 18, 38, 59, 79, 22, 55, 99, 16, 28, 70, 95, 20, 25, 84, 60, 3, 37, 52, 68, 69, 3, 28, 32, 74, 65, 67, 38, 54, 59, 80, 15, 77, 75, 13, 29, 90, 17, 89, 20, 67, 10, 74, 25, 17, 86, 89, 73, 30, 20, 28, 93, 31, 47, 53, 31, 45, 29, 23, 22, 35, 10, 22, 46, 43, 42, 37, 20, 62, 30, 95, 72, 99, 78, 23, 65, 30, 20, 52, 42, 97, 38, 61, 99, 37, 74, 33, 81, 86, 69, 65, 52, 79, 48, 44, 32, 85, 74, 96, 28, 30, 97, 41, 65, 47, 38, 55, 58, 13, 61, 51, 15, 41, 75, 10, 41, 20, 83, 91, 19, 58, 44, 60, 76, 45, 71, 38, 61, 92, 99, 31, 98, 92, 42, 36, 26, 43, 74, 31, 79, 50, 76, 7, 36, 99, 19, 67, 25, 9, 71, 95, 14, 16, 94, 93, 65, 5, 21, 98, 68, 86, 65, 64, 34, 30, 66, 58, 92, 81, 99, 30, 79, 74, 94, 23, 30, 52, 86, 36, 40, 67, 99, 90, 13, 91, 33, 71, 16, 41, 85, 72, 37, 36, 55, 10, 51, 73, 98, 73, 33, 52, 30, 1, 13, 1, 60, 11, 75, 80, 90, 14, 77, 82, 1, 18, 75, 26, 55, 57, 40, 39, 72, 61, 60, 81, 22, 80, 20, 93, 33, 78, 7, 62, 79, 75, 36, 26, 18, 56, 78, 51, 12, 90, 34, 71, 50, 58, 71, 20, 8, 17, 55, 50, 47, 82, 5, 66, 75, 29, 66, 14, 48, 49, 84, 63, 24, 58, 6, 50, 12, 88, 4, 89, 85, 60, 27, 29, 13, 93, 19, 77, 64, 34, 17, 13, 80, 83, 37, 10, 76, 24, 64, 70]
last_save: 100

Gen:251
last_save: 100
Exit:FalseFalseTrue

Gen:1
TrainFitness:0.8042168674698795
TestFitness:0.8055555555555556
MaxGenLen:400
Individual: def p():
  def adf0(index):
    if np.less(x[index],45116.48156):
      return True
    else:
      return True
  def adf1(index):
    if np.less(x[index],80216.92013):
      return True
    else:
      return True
  def adf2(index):
    if np.greater(x[index],82966.43092):
      return True
    else:
      return True
  def adf3(index):
    if np.less(x[index],34898.55662):
      return False
    else:
      return False
  def adf4(index):
    if np.greater(x[index],08073.65624):
      return True
    else:
      return True
  def adf5(index):
    if np.less(x[index],27831.89802):
      return True
    else:
      return False
  def adf6(index):
    if np.less(x[index],16866.47874):
      return False
    else:
      return True
  def adf7(index):
    if np.less(x[index],62338.96627):
      return True
    else:
      return True
  def adf8(index):
    if np.less(x[index],31669.82347):
      return False
    else:
      return False
  return multiple_operation([adf0(0)*+64.40, adf1(1)*+56.21, adf2(2)*+32.74, adf3(3)*+13.37, adf4(4)*+57.94, adf5(5)*-56.60, adf6(6)*+76.96, adf7(7)*-53.41, adf8(8)*+74.53], 64.39)
result=p(); 0.8042168674698795
IndLenGenome:339
IndGenome:[31, 84, 48, 82, 6, 13, 56, 75, 60, 82, 4, 65, 95, 49, 78, 76, 89, 35, 75, 89, 19, 91, 64, 65, 42, 84, 84, 59, 63, 55, 34, 92, 76, 27, 37, 46, 32, 78, 76, 83, 95, 79, 68, 12, 25, 46, 78, 32, 51, 60, 62, 35, 21, 45, 26, 30, 47, 34, 80, 52, 83, 54, 91, 61, 72, 78, 61, 10, 51, 90, 53, 27, 58, 76, 40, 17, 43, 58, 73, 16, 50, 19, 22, 2, 29, 45, 26, 97, 94, 55, 23, 58, 81, 17, 56, 95, 42, 86, 41, 18, 87, 71, 54, 66, 99, 52, 73, 93, 33, 30, 32, 60, 84, 38, 52, 97, 14, 63, 87, 49, 91, 46, 74, 84, 82, 11, 32, 57, 7, 36, 15, 61, 65, 90, 88, 72, 64, 68, 39, 98, 41, 42, 15, 83, 78, 44, 56, 51, 86, 48, 74, 20, 88, 47, 34, 89, 58, 86, 86, 85, 86, 73, 68, 56, 29, 58, 69, 15, 14, 24, 73, 97, 66, 36, 85, 86, 72, 66, 33, 8, 26, 67, 95, 59, 44, 61, 44, 77, 92, 43, 96, 16, 37, 48, 20, 42, 35, 41, 94, 70, 98, 16, 19, 60, 73, 94, 31, 98, 87, 86, 50, 11, 82, 42, 3, 68, 10, 20, 16, 42, 46, 87, 78, 35, 73, 14, 18, 50, 2, 39, 61, 46, 39, 5, 48, 52, 5, 37, 59, 17, 28, 98, 47, 50, 47, 19, 20, 55, 38, 95, 71, 23, 42, 69, 75, 43, 1, 27, 31, 31, 20, 64, 66, 86, 50, 35, 29, 20, 28, 37, 64, 41, 52, 11, 61, 46, 45, 12, 4, 36, 63, 9, 58, 56, 93, 20, 96, 85, 62, 61, 43, 97, 69, 62, 86, 58, 15, 15, 33, 73, 79, 69, 27, 14, 64, 35, 72, 97, 6, 58, 98, 21, 25, 31, 15, 71, 24, 28, 55, 78, 68, 22, 1, 72, 70, 89, 75, 46, 57, 55, 51, 74, 63, 25, 21, 11, 5, 2, 0]
last_save: 100

Gen:251
last_save: 100
Exit:FalseFalseTrue