Dataset:Meander/new_Full.csv
FS:False
Seed:1236
Size:10

Gen:1
TrainFitness:0.8090909090909091
TestFitness:0.7894736842105263
MaxGenLen:400
Individual: def p():
  def adf0(index):
    if np.less(x[index],65346.02158):
      if np.equal(x[index],20825.78629):
        return False
      else:
        return True
    else:
      if np.equal(x[index],41192.97936):
        return False
      else:
        return True
  def adf1(index):
    if np.equal(x[index],30890.55695):
      if np.greater(x[index],31079.24240):
        return False
      else:
        return False
    else:
      if np.greater(x[index],10669.69175):
        return False
      else:
        return True
  def adf2(index):
    if np.less(x[index],58464.91616):
      if np.greater(x[index],54643.82874):
        return True
      else:
        return False
    else:
      if np.greater(x[index],28095.17571):
        return False
      else:
        return False
  def adf3(index):
    if np.greater(x[index],80359.96570):
      if np.greater(x[index],31671.98208):
        return False
      else:
        return False
    else:
      if np.greater(x[index],43266.50353):
        return False
      else:
        return False
  def adf4(index):
    if np.greater(x[index],24143.47674):
      if np.less(x[index],26595.26494):
        return False
      else:
        return False
    else:
      if np.equal(x[index],63684.95312):
        return False
      else:
        return True
  def adf5(index):
    if np.greater(x[index],91126.76368):
      if np.greater(x[index],15936.69638):
        return False
      else:
        return True
    else:
      if np.greater(x[index],22178.32245):
        return True
      else:
        return False
  def adf6(index):
    if np.equal(x[index],67136.48152):
      if np.equal(x[index],37274.41262):
        return True
      else:
        return True
    else:
      if np.greater(x[index],58551.94318):
        return False
      else:
        return True
  def adf7(index):
    if np.greater(x[index],60901.37766):
      if np.greater(x[index],43917.64401):
        return False
      else:
        return False
    else:
      if np.greater(x[index],11399.88283):
        return True
      else:
        return True
  def adf8(index):
    if np.equal(x[index],42604.10931):
      if np.less(x[index],77643.28763):
        return False
      else:
        return True
    else:
      if np.equal(x[index],73754.97337):
        return False
      else:
        return False
  return multiple_operation([adf0(0)*-81.77, adf1(1)*+96.70, adf2(2)*+64.58, adf3(3)*+72.81, adf4(4)*+94.05, adf5(5)*+99.19, adf6(6)*+83.05, adf7(7)*-55.46, adf8(8)*+09.38], 54.75)
result=p(); 0.8090909090909091
IndLenGenome:717
IndGenome:[44, 51, 8, 23, 79, 24, 74, 32, 2, 66, 7, 63, 58, 26, 75, 16, 56, 71, 76, 41, 11, 74, 56, 40, 45, 71, 55, 55, 6, 60, 99, 66, 89, 84, 51, 64, 67, 44, 91, 82, 82, 74, 58, 55, 14, 66, 65, 44, 12, 66, 19, 69, 45, 34, 35, 71, 27, 13, 10, 46, 57, 32, 48, 31, 11, 66, 64, 87, 7, 13, 59, 83, 54, 17, 77, 32, 73, 28, 88, 86, 93, 100, 72, 3, 54, 36, 90, 14, 19, 60, 77, 85, 19, 9, 79, 44, 16, 11, 81, 23, 74, 29, 19, 44, 96, 22, 94, 97, 5, 8, 51, 64, 35, 12, 89, 92, 22, 91, 95, 58, 34, 9, 78, 43, 78, 68, 84, 78, 19, 23, 61, 74, 68, 91, 12, 5, 66, 47, 43, 72, 42, 96, 62, 64, 26, 48, 77, 12, 46, 9, 83, 23, 47, 38, 15, 13, 98, 73, 20, 87, 11, 14, 55, 38, 53, 34, 31, 63, 83, 88, 21, 39, 18, 36, 57, 70, 74, 60, 62, 49, 68, 56, 17, 14, 59, 20, 27, 45, 32, 86, 25, 31, 23, 93, 37, 18, 93, 57, 71, 74, 27, 26, 73, 10, 34, 15, 44, 95, 32, 56, 49, 36, 51, 24, 54, 23, 19, 76, 88, 7, 9, 68, 21, 33, 57, 98, 41, 94, 25, 93, 79, 50, 14, 94, 96, 34, 19, 21, 46, 95, 73, 86, 76, 67, 38, 77, 42, 80, 20, 83, 23, 93, 95, 26, 67, 96, 93, 63, 10, 29, 53, 70, 60, 78, 35, 57, 88, 63, 19, 57, 23, 93, 84, 28, 99, 53, 36, 22, 88, 41, 16, 87, 5, 70, 35, 53, 90, 11, 67, 78, 54, 41, 72, 86, 66, 98, 53, 97, 70, 18, 52, 58, 19, 33, 66, 41, 68, 29, 89, 96, 94, 43, 75, 45, 27, 35, 56, 50, 86, 99, 84, 92, 77, 90, 25, 39, 61, 60, 87, 63, 55, 72, 98, 92, 81, 35, 48, 41, 91, 82, 46, 30, 89, 15, 86, 76, 26, 51, 95, 96, 96, 90, 46, 17, 59, 89, 91, 75, 85, 22, 57, 40, 61, 60, 91, 44, 88, 35, 24, 23, 66, 79, 77, 67, 39, 97, 49, 19, 22, 16, 15, 50, 6, 33, 92, 74, 31, 25, 98, 8, 80, 40, 22, 56, 73, 69, 64, 93, 11, 56, 23, 58, 50, 66, 49, 29, 52, 45, 59, 82, 71, 77, 75, 99, 53, 48, 65, 16, 90, 14, 53, 11, 24, 88, 89, 32, 22, 21, 98, 59, 56, 21, 37, 69, 25, 91, 25, 49, 98, 14, 24, 59, 12, 20, 51, 86, 22, 44, 37, 61, 40, 93, 85, 87, 38, 98, 55, 76, 10, 65, 71, 38, 22, 46, 76, 21, 71, 72, 23, 53, 31, 83, 56, 61, 15, 79, 65, 64, 7, 14, 95, 7, 3, 73, 71, 67, 96, 94, 52, 88, 32, 57, 45, 52, 24, 72, 3, 70, 68, 9, 19, 86, 76, 11, 29, 59, 57, 69, 1, 71, 96, 59, 19, 21, 3, 70, 89, 34, 25, 58, 65, 70, 94, 79, 48, 73, 43, 42, 4, 86, 68, 45, 13, 5, 33, 61, 63, 94, 6, 86, 19, 77, 16, 10, 50, 56, 100, 88, 73, 93, 21, 20, 34, 1, 49, 56, 0, 73, 68, 59, 35, 68, 16, 52, 23, 10, 68, 27, 51, 56, 23, 34, 7, 13, 28, 88, 11, 39, 54, 48, 49, 28, 6, 49, 75, 36, 31, 85, 44, 81, 96, 56, 76, 18, 83, 92, 20, 58, 36, 24, 61, 92, 66, 62, 71, 80, 52, 24, 89, 28, 77, 20, 20, 76, 15, 88, 0, 74, 86, 15, 56, 84, 19, 46, 1, 45, 42, 98, 8, 0, 54, 43, 22, 38, 58, 83, 76, 21, 45, 46, 92, 33, 1, 66, 56, 37, 43, 35, 22, 58, 7, 15, 76, 68, 5, 51, 22, 48, 45, 69, 22, 69, 23, 90, 95, 32, 45, 2, 30, 58, 51, 94, 100, 55, 4, 20, 37, 94, 78, 78, 37, 36, 0, 4, 92, 40, 61, 77, 91, 52, 40, 95, 72, 12, 42, 52, 91, 57, 56, 93, 62, 19, 86, 69, 40, 31, 92, 27, 74, 7, 19, 66, 57, 28, 88, 52, 44]
last_save: 102

Gen:251
last_save: 102
Exit:FalseFalseTrue

Gen:1
TrainFitness:0.806060606060606
TestFitness:0.7894736842105263
MaxGenLen:400
Individual: def p():
  def adf0(index):
    if np.equal(x[index],04621.50725):
      return False
    else:
      return False
  def adf1(index):
    if np.greater(x[index],92912.51091):
      return True
    else:
      return False
  def adf2(index):
    if np.equal(x[index],04523.98153):
      return False
    else:
      return True
  def adf3(index):
    if np.greater(x[index],19841.76142):
      return True
    else:
      return True
  def adf4(index):
    if np.equal(x[index],36339.54801):
      return True
    else:
      return True
  def adf5(index):
    if np.less(x[index],09229.97696):
      return False
    else:
      return False
  def adf6(index):
    if np.less(x[index],23383.59711):
      return True
    else:
      return True
  def adf7(index):
    if np.greater(x[index],68484.89713):
      return True
    else:
      return False
  def adf8(index):
    if np.equal(x[index],80985.66058):
      return True
    else:
      return True
  return multiple_operation([adf0(0)*-90.97, adf1(1)*+71.66, adf2(2)*-08.31, adf3(3)*-25.29, adf4(4)*+99.57, adf5(5)*+41.27, adf6(6)*-56.50, adf7(7)*-86.87, adf8(8)*+20.32], 10.85)
result=p(); 0.806060606060606
IndLenGenome:339
IndGenome:[78, 85, 15, 85, 2, 41, 15, 41, 57, 48, 7, 75, 79, 64, 58, 35, 40, 95, 22, 1, 35, 23, 42, 47, 9, 28, 69, 99, 75, 1, 75, 87, 3, 69, 17, 59, 90, 101, 59, 21, 39, 11, 55, 16, 49, 39, 12, 52, 84, 52, 88, 57, 38, 12, 3, 70, 86, 78, 85, 81, 22, 50, 14, 28, 99, 85, 84, 19, 64, 95, 50, 89, 23, 26, 12, 74, 58, 40, 96, 21, 96, 68, 82, 68, 53, 81, 91, 22, 44, 98, 72, 50, 51, 90, 43, 15, 55, 79, 89, 60, 10, 76, 92, 13, 43, 22, 25, 72, 86, 97, 42, 17, 11, 74, 80, 35, 28, 82, 15, 93, 50, 50, 57, 57, 55, 46, 99, 31, 41, 80, 65, 11, 28, 96, 8, 11, 71, 25, 19, 67, 55, 30, 93, 85, 54, 73, 94, 40, 79, 93, 58, 64, 44, 12, 22, 23, 85, 58, 20, 85, 91, 70, 68, 61, 24, 18, 69, 25, 57, 58, 81, 26, 2, 23, 33, 17, 76, 38, 32, 39, 12, 63, 27, 52, 34, 69, 51, 48, 66, 93, 41, 68, 71, 28, 83, 58, 94, 14, 35, 59, 71, 49, 52, 94, 98, 78, 40, 25, 18, 20, 56, 8, 99, 22, 97, 70, 22, 37, 46, 39, 76, 99, 26, 49, 11, 96, 79, 87, 87, 36, 89, 37, 94, 19, 7, 15, 80, 98, 91, 2, 26, 74, 15, 13, 51, 79, 41, 8, 74, 79, 72, 8, 35, 74, 39, 73, 25, 14, 10, 94, 57, 44, 23, 84, 9, 75, 34, 2, 30, 91, 18, 1, 40, 41, 31, 49, 30, 3, 61, 23, 13, 78, 92, 71, 70, 20, 6, 9, 56, 19, 27, 5, 97, 65, 68, 5, 15, 78, 51, 73, 22, 97, 94, 63, 9, 96, 37, 48, 70, 65, 87, 23, 11, 44, 40, 91, 18, 51, 50, 54, 64, 71, 12, 70, 67, 13, 53, 89, 54, 16, 74, 45, 45, 83, 27, 31, 0, 31, 13]
last_save: 102

Gen:31
TrainFitness:0.8151515151515152
TestFitness:0.7894736842105263
MaxGenLen:400
Individual: def p():
  def adf0(index):
    if np.greater(x[index],02380.96559):
      return False
    else:
      return True
  def adf1(index):
    if np.greater(x[index],05508.31293):
      return False
    else:
      return True
  def adf2(index):
    if np.less(x[index],19490.70447):
      return True
    else:
      return True
  def adf3(index):
    if np.less(x[index],08491.43995):
      if np.equal(x[index],75074.20520):
        return True
      else:
        return True
    else:
      if np.equal(x[index],04332.41095):
        return False
      else:
        return True
  def adf4(index):
    if np.greater(x[index],91776.84853):
      return False
    else:
      return True
  def adf5(index):
    if np.greater(x[index],29898.66285):
      if np.less(x[index],20714.63959):
        return True
      else:
        return False
    else:
      if np.less(x[index],46122.43557):
        return False
      else:
        return True
  def adf6(index):
    if np.less(x[index],86402.81354):
      if np.greater(x[index],09726.28726):
        return True
      else:
        return False
    else:
      if np.equal(x[index],21029.30418):
        return True
      else:
        return False
  def adf7(index):
    if np.greater(x[index],36106.44029):
      return False
    else:
      return True
  def adf8(index):
    if np.less(x[index],87027.80703):
      if np.greater(x[index],64045.29439):
        return True
      else:
        return True
    else:
      if np.less(x[index],51969.53236):
        return True
      else:
        return False
  return multiple_operation([adf0(0)*-63.73, adf1(1)*+70.97, adf2(2)*-18.34, adf3(3)*+25.28, adf4(4)*+75.02, adf5(5)*+45.69, adf6(6)*+11.18, adf7(7)*-00.62, adf8(8)*+35.13], 56.20)
result=p(); 0.8151515151515152
IndLenGenome:394
IndGenome:[88, 23, 41, 75, 53, 39, 20, 30, 22, 93, 58, 60, 19, 6, 15, 35, 89, 31, 38, 10, 5, 35, 99, 11, 40, 95, 15, 80, 58, 83, 71, 52, 79, 33, 45, 96, 16, 35, 93, 49, 4, 61, 59, 4, 59, 60, 87, 20, 24, 64, 77, 52, 26, 26, 66, 9, 70, 36, 70, 78, 4, 39, 51, 24, 93, 59, 9, 65, 50, 59, 9, 17, 5, 60, 57, 14, 12, 30, 75, 52, 80, 80, 56, 21, 17, 11, 50, 14, 23, 93, 12, 44, 21, 50, 19, 25, 41, 38, 36, 70, 96, 72, 48, 69, 41, 67, 47, 36, 68, 94, 38, 15, 13, 83, 64, 75, 16, 74, 96, 78, 62, 29, 98, 69, 68, 76, 6, 72, 58, 85, 30, 19, 66, 92, 40, 87, 71, 4, 86, 13, 79, 75, 69, 56, 7, 70, 97, 83, 24, 76, 71, 72, 62, 84, 23, 15, 95, 67, 89, 42, 15, 36, 24, 13, 26, 8, 6, 54, 10, 92, 78, 71, 43, 35, 64, 14, 30, 27, 90, 39, 17, 32, 56, 92, 48, 67, 22, 66, 88, 85, 5, 35, 84, 32, 81, 50, 52, 79, 33, 30, 44, 61, 38, 40, 75, 69, 10, 29, 15, 12, 23, 16, 41, 60, 86, 24, 54, 70, 52, 99, 91, 52, 57, 76, 79, 76, 66, 58, 47, 40, 72, 17, 58, 70, 57, 40, 13, 96, 93, 72, 76, 34, 90, 44, 35, 32, 89, 84, 83, 79, 40, 38, 1, 43, 82, 95, 41, 19, 86, 49, 55, 53, 52, 83, 66, 90, 97, 73, 12, 93, 83, 11, 66, 63, 27, 93, 47, 44, 74, 37, 50, 19, 87, 98, 31, 2, 71, 58, 63, 34, 79, 82, 98, 12, 85, 12, 18, 55, 80, 64, 97, 25, 90, 2, 96, 24, 80, 84, 25, 26, 59, 39, 2, 79, 51, 51, 11, 58, 42, 5, 37, 90, 10, 96, 22, 42, 100, 7, 93, 75, 11, 33, 88, 45, 86, 72, 80, 54, 27, 86, 35, 28, 3, 91, 24, 90, 44, 50, 25, 33, 37, 29, 86, 62, 77, 35, 74, 38, 78, 32, 18, 8, 97, 41, 19, 88, 2, 13, 48, 73, 60, 55, 83, 26, 33, 16, 93, 91, 75, 36, 9, 54, 89, 37, 37, 76, 56, 76, 59, 100, 22, 71, 66, 26]
last_save: 102

Gen:41
TrainFitness:0.8181818181818182
TestFitness:0.8421052631578947
MaxGenLen:400
Individual: def p():
  def adf0(index):
    if np.greater(x[index],02880.96559):
      return False
    else:
      return True
  def adf1(index):
    if np.greater(x[index],05508.31293):
      return False
    else:
      return True
  def adf2(index):
    if np.less(x[index],19490.77447):
      return True
    else:
      return True
  def adf3(index):
    if np.less(x[index],08491.43995):
      if np.equal(x[index],75074.20520):
        return True
      else:
        return True
    else:
      if np.greater(x[index],04332.41095):
        return False
      else:
        return True
  def adf4(index):
    if np.greater(x[index],91776.84853):
      return False
    else:
      return True
  def adf5(index):
    if np.greater(x[index],29892.66285):
      if np.less(x[index],20714.63959):
        return True
      else:
        return False
    else:
      if np.less(x[index],46122.43557):
        return False
      else:
        return False
  def adf6(index):
    if np.less(x[index],86202.81354):
      if np.greater(x[index],09726.28726):
        return True
      else:
        return False
    else:
      if np.equal(x[index],21029.30418):
        return True
      else:
        return False
  def adf7(index):
    if np.greater(x[index],36106.44029):
      return False
    else:
      return True
  def adf8(index):
    if np.less(x[index],87027.80703):
      if np.greater(x[index],64045.29439):
        return True
      else:
        return True
    else:
      if np.less(x[index],51969.53236):
        return True
      else:
        return False
  return multiple_operation([adf0(0)*-63.73, adf1(1)*+70.97, adf2(2)*-18.34, adf3(3)*+25.28, adf4(4)*+75.02, adf5(5)*+45.69, adf6(6)*+11.18, adf7(7)*-00.52, adf8(8)*+35.13], 56.20)
result=p(); 0.8181818181818182
IndLenGenome:394
IndGenome:[88, 23, 41, 75, 53, 39, 20, 30, 22, 18, 58, 60, 19, 6, 15, 35, 89, 31, 38, 10, 5, 35, 99, 11, 40, 95, 15, 80, 58, 83, 71, 52, 79, 33, 45, 96, 16, 35, 93, 49, 4, 61, 59, 4, 59, 60, 87, 17, 24, 64, 77, 52, 26, 26, 66, 9, 70, 36, 70, 78, 4, 39, 51, 24, 93, 59, 9, 65, 50, 59, 9, 17, 5, 60, 57, 14, 12, 30, 75, 52, 80, 80, 56, 21, 90, 11, 50, 14, 23, 93, 12, 44, 21, 50, 19, 25, 41, 38, 36, 70, 96, 72, 48, 69, 41, 67, 47, 36, 68, 94, 38, 15, 13, 83, 64, 75, 16, 74, 96, 78, 62, 29, 98, 69, 92, 76, 6, 72, 58, 85, 30, 19, 66, 92, 40, 87, 71, 4, 86, 13, 79, 75, 69, 56, 45, 70, 97, 83, 24, 76, 71, 72, 62, 84, 23, 15, 95, 67, 89, 31, 15, 36, 24, 13, 26, 8, 6, 82, 10, 92, 78, 71, 43, 35, 64, 14, 30, 27, 90, 39, 17, 32, 56, 92, 48, 67, 22, 66, 88, 85, 5, 35, 84, 32, 81, 50, 52, 79, 33, 30, 44, 61, 38, 40, 75, 69, 10, 29, 15, 12, 23, 16, 41, 60, 86, 24, 54, 70, 52, 99, 91, 52, 57, 76, 31, 76, 66, 58, 47, 40, 72, 17, 58, 70, 57, 40, 13, 96, 93, 72, 76, 34, 90, 44, 35, 32, 89, 84, 83, 79, 40, 38, 1, 43, 82, 95, 41, 19, 86, 49, 55, 53, 52, 83, 66, 90, 97, 73, 12, 93, 83, 11, 66, 63, 27, 93, 47, 44, 74, 37, 50, 19, 87, 98, 31, 2, 71, 58, 63, 34, 79, 82, 98, 12, 85, 12, 18, 55, 80, 64, 97, 25, 90, 2, 96, 24, 80, 84, 25, 26, 59, 39, 2, 79, 51, 51, 11, 58, 42, 5, 37, 90, 10, 65, 22, 42, 100, 7, 93, 75, 11, 33, 88, 45, 86, 72, 80, 61, 27, 86, 35, 28, 3, 91, 24, 90, 44, 50, 25, 33, 37, 29, 86, 62, 77, 35, 74, 38, 78, 32, 18, 8, 97, 41, 19, 88, 2, 13, 48, 73, 60, 55, 83, 26, 33, 16, 93, 91, 75, 36, 9, 54, 89, 37, 37, 76, 56, 76, 59, 100, 22, 71, 66, 26]
last_save: 102

Gen:106
TrainFitness:0.8212121212121212
TestFitness:0.8421052631578947
MaxGenLen:415
Individual: def p():
  def adf0(index):
    if np.greater(x[index],02880.96559):
      return False
    else:
      return True
  def adf1(index):
    if np.greater(x[index],05508.31293):
      return False
    else:
      return True
  def adf2(index):
    if np.less(x[index],39490.77447):
      return False
    else:
      return True
  def adf3(index):
    if np.less(x[index],08431.43995):
      if np.equal(x[index],75074.20520):
        return True
      else:
        return True
    else:
      if np.greater(x[index],04537.41095):
        return False
      else:
        return True
  def adf4(index):
    if np.greater(x[index],91776.84853):
      return False
    else:
      return True
  def adf5(index):
    if np.greater(x[index],28892.66285):
      if np.less(x[index],20714.63959):
        return False
      else:
        return False
    else:
      if np.less(x[index],46129.43559):
        return False
      else:
        return False
  def adf6(index):
    if np.greater(x[index],86202.81354):
      if np.greater(x[index],09726.28726):
        return True
      else:
        return False
    else:
      if np.equal(x[index],21029.30418):
        return True
      else:
        return False
  def adf7(index):
    if np.greater(x[index],36156.44029):
      return False
    else:
      return True
  def adf8(index):
    if np.less(x[index],87027.80703):
      if np.greater(x[index],64045.29439):
        return True
      else:
        return True
    else:
      if np.less(x[index],51969.53235):
        return True
      else:
        return False
  return multiple_operation([adf0(0)*-63.73, adf1(1)*+70.97, adf2(2)*-18.30, adf3(3)*+25.28, adf4(4)*+73.02, adf5(5)*+45.69, adf6(6)*+11.18, adf7(7)*-00.52, adf8(8)*+35.13], 56.20)
result=p(); 0.8212121212121212
IndLenGenome:394
IndGenome:[88, 23, 41, 75, 53, 39, 20, 30, 22, 18, 58, 60, 19, 6, 15, 35, 89, 31, 38, 10, 5, 35, 99, 11, 40, 95, 15, 80, 58, 3, 71, 52, 79, 33, 45, 96, 16, 35, 93, 28, 4, 73, 59, 4, 59, 60, 87, 17, 24, 64, 77, 91, 26, 26, 66, 9, 70, 36, 70, 78, 4, 33, 51, 24, 93, 59, 9, 65, 50, 59, 9, 17, 5, 60, 57, 14, 12, 30, 75, 52, 80, 80, 56, 21, 90, 16, 50, 14, 15, 93, 67, 44, 21, 50, 19, 25, 41, 38, 36, 70, 96, 72, 48, 69, 41, 67, 47, 36, 68, 94, 38, 15, 13, 83, 64, 75, 16, 74, 96, 78, 62, 8, 98, 69, 92, 76, 6, 72, 58, 85, 30, 19, 66, 92, 40, 87, 71, 4, 86, 13, 79, 75, 69, 1, 45, 70, 97, 83, 24, 76, 71, 72, 19, 84, 23, 15, 95, 39, 89, 31, 15, 36, 24, 57, 26, 8, 6, 82, 10, 92, 78, 71, 43, 35, 64, 14, 30, 27, 90, 39, 17, 32, 56, 92, 48, 67, 22, 66, 88, 85, 5, 35, 84, 32, 81, 50, 52, 79, 33, 30, 44, 61, 38, 40, 75, 69, 10, 29, 15, 12, 23, 16, 41, 55, 86, 24, 54, 70, 52, 99, 37, 52, 57, 76, 31, 76, 66, 58, 47, 40, 72, 17, 58, 70, 57, 40, 13, 96, 93, 72, 76, 34, 90, 44, 35, 32, 89, 84, 83, 79, 40, 38, 1, 43, 82, 95, 41, 19, 86, 49, 55, 53, 52, 83, 25, 90, 97, 73, 12, 93, 83, 11, 66, 63, 27, 93, 47, 44, 74, 37, 50, 19, 87, 98, 31, 2, 71, 58, 63, 30, 79, 82, 98, 12, 85, 12, 18, 55, 80, 64, 37, 93, 90, 2, 96, 24, 80, 84, 25, 26, 59, 39, 2, 79, 51, 51, 11, 58, 42, 5, 37, 90, 10, 65, 22, 42, 100, 7, 93, 75, 11, 33, 88, 45, 86, 72, 80, 61, 27, 86, 35, 28, 3, 91, 24, 90, 44, 50, 25, 33, 37, 29, 86, 62, 77, 35, 74, 38, 78, 32, 18, 8, 97, 41, 19, 88, 2, 13, 48, 73, 60, 55, 83, 26, 33, 16, 93, 91, 75, 36, 9, 54, 89, 37, 37, 76, 56, 76, 59, 100, 22, 71, 66, 26]
last_save: 102

Gen:356
last_save: 102
Exit:FalseFalseTrue

Gen:1
TrainFitness:0.8066465256797583
TestFitness:0.7837837837837838
MaxGenLen:400
Individual: def p():
  def adf0(index):
    if np.less(x[index],34071.60523):
      if np.greater(x[index],02061.94187):
        return False
      else:
        return True
    else:
      if np.less(x[index],66964.07599):
        return True
      else:
        return True
  def adf1(index):
    if np.less(x[index],34045.30860):
      if np.equal(x[index],56337.64056):
        return True
      else:
        return True
    else:
      if np.less(x[index],29211.51824):
        return False
      else:
        return False
  def adf2(index):
    if np.less(x[index],34935.74813):
      if np.less(x[index],58116.44131):
        return True
      else:
        return True
    else:
      if np.greater(x[index],19754.85607):
        return True
      else:
        return True
  def adf3(index):
    if np.equal(x[index],74041.04069):
      if np.equal(x[index],16991.00121):
        return False
      else:
        return True
    else:
      if np.less(x[index],65744.03435):
        return True
      else:
        return False
  def adf4(index):
    if np.less(x[index],16605.07873):
      if np.less(x[index],57154.74566):
        return True
      else:
        return True
    else:
      if np.equal(x[index],10608.96026):
        return True
      else:
        return False
  def adf5(index):
    if np.equal(x[index],86403.71155):
      if np.less(x[index],09871.22246):
        return False
      else:
        return True
    else:
      if np.equal(x[index],11314.09763):
        return True
      else:
        return False
  def adf6(index):
    if np.greater(x[index],51155.35232):
      if np.less(x[index],67610.30356):
        return True
      else:
        return True
    else:
      if np.greater(x[index],04542.81079):
        return False
      else:
        return True
  def adf7(index):
    if np.less(x[index],37998.97133):
      if np.equal(x[index],82464.19578):
        return True
      else:
        return False
    else:
      if np.equal(x[index],25347.56099):
        return True
      else:
        return False
  def adf8(index):
    if np.greater(x[index],03132.80334):
      if np.equal(x[index],06917.98542):
        return True
      else:
        return True
    else:
      if np.greater(x[index],77533.68699):
        return True
      else:
        return False
  return multiple_operation([adf0(0)*-95.50, adf1(1)*-31.91, adf2(2)*+80.69, adf3(3)*+12.91, adf4(4)*-19.83, adf5(5)*-73.61, adf6(6)*+75.80, adf7(7)*+32.51, adf8(8)*+22.51], 74.12)
result=p(); 0.8066465256797583
IndLenGenome:717
IndGenome:[63, 13, 7, 57, 28, 86, 74, 94, 16, 71, 86, 28, 93, 31, 67, 41, 29, 62, 34, 21, 22, 14, 51, 65, 81, 40, 96, 89, 47, 48, 81, 84, 40, 58, 20, 10, 64, 77, 61, 25, 91, 79, 39, 61, 91, 22, 26, 74, 98, 82, 48, 38, 34, 38, 24, 21, 94, 86, 82, 99, 99, 80, 46, 91, 90, 26, 18, 94, 50, 99, 72, 57, 65, 55, 75, 85, 41, 62, 1, 80, 64, 17, 86, 60, 17, 16, 91, 9, 80, 73, 35, 21, 38, 56, 40, 75, 4, 65, 53, 55, 41, 43, 34, 89, 36, 67, 44, 92, 75, 84, 44, 24, 53, 75, 99, 23, 34, 94, 70, 73, 95, 98, 43, 24, 20, 29, 59, 36, 95, 62, 67, 93, 69, 35, 98, 28, 59, 18, 36, 16, 93, 28, 3, 14, 37, 40, 79, 26, 28, 79, 3, 41, 72, 51, 84, 55, 67, 13, 37, 34, 94, 51, 31, 74, 39, 87, 21, 6, 28, 50, 94, 30, 13, 39, 52, 14, 11, 27, 70, 10, 82, 15, 48, 68, 41, 30, 46, 15, 97, 72, 40, 41, 26, 66, 20, 49, 71, 13, 8, 88, 51, 31, 35, 39, 31, 25, 45, 18, 11, 60, 79, 38, 2, 88, 96, 28, 78, 27, 75, 18, 59, 48, 21, 8, 18, 61, 31, 79, 31, 16, 55, 49, 83, 64, 22, 88, 69, 13, 95, 26, 47, 42, 17, 85, 90, 22, 11, 75, 20, 50, 82, 6, 52, 81, 81, 15, 34, 44, 16, 74, 6, 10, 18, 46, 53, 34, 47, 22, 53, 77, 56, 44, 57, 66, 94, 33, 21, 93, 41, 95, 38, 61, 51, 82, 56, 13, 42, 20, 36, 38, 97, 73, 10, 43, 28, 18, 23, 51, 80, 94, 55, 57, 21, 83, 12, 46, 66, 29, 71, 43, 81, 50, 60, 85, 22, 8, 94, 65, 77, 99, 82, 78, 34, 99, 67, 66, 64, 27, 19, 29, 91, 10, 70, 70, 18, 71, 93, 22, 20, 26, 35, 29, 41, 68, 61, 62, 51, 90, 72, 68, 63, 83, 21, 71, 36, 26, 86, 47, 89, 66, 30, 3, 45, 61, 64, 78, 43, 41, 29, 31, 53, 9, 20, 93, 94, 97, 26, 64, 26, 72, 17, 25, 40, 41, 41, 37, 93, 43, 86, 91, 65, 83, 96, 44, 98, 38, 31, 39, 93, 74, 55, 91, 55, 81, 90, 43, 27, 85, 78, 55, 19, 59, 95, 23, 65, 26, 55, 28, 78, 65, 13, 17, 42, 95, 7, 74, 91, 63, 17, 92, 71, 20, 64, 91, 13, 37, 56, 18, 83, 95, 45, 85, 96, 71, 7, 39, 90, 48, 34, 84, 23, 17, 10, 92, 96, 26, 57, 65, 73, 75, 72, 63, 23, 97, 24, 30, 45, 81, 14, 79, 89, 72, 15, 34, 40, 11, 49, 37, 73, 100, 82, 49, 100, 55, 45, 12, 12, 46, 100, 85, 78, 2, 78, 28, 76, 41, 98, 42, 1, 46, 11, 6, 2, 96, 48, 19, 7, 54, 54, 29, 0, 0, 46, 15, 41, 27, 77, 5, 40, 29, 68, 21, 28, 17, 6, 1, 47, 38, 82, 0, 61, 64, 42, 36, 81, 51, 45, 8, 58, 48, 22, 88, 45, 20, 27, 65, 85, 91, 70, 84, 8, 88, 89, 63, 84, 15, 19, 97, 80, 85, 19, 71, 24, 18, 45, 7, 83, 56, 48, 54, 42, 35, 16, 28, 40, 99, 95, 36, 96, 73, 62, 73, 40, 42, 33, 26, 53, 41, 58, 23, 20, 74, 99, 87, 30, 47, 66, 57, 81, 82, 58, 15, 73, 5, 4, 56, 31, 56, 40, 74, 57, 22, 6, 94, 74, 47, 72, 62, 31, 34, 10, 34, 41, 67, 88, 73, 51, 72, 91, 93, 53, 49, 38, 94, 67, 28, 32, 12, 57, 51, 1, 21, 63, 100, 94, 80, 13, 27, 86, 72, 80, 42, 21, 83, 69, 62, 42, 77, 93, 53, 60, 12, 82, 26, 70, 36, 68, 52, 78, 32, 48, 34, 14, 61, 54, 38, 60, 45, 40, 1, 30, 52, 17, 10, 16, 23, 34, 37, 87, 7, 69, 34, 7, 12, 83, 35, 0, 30, 24, 56, 42, 45, 83, 17, 86, 19, 55, 69, 66, 29, 65, 91, 41, 94, 89, 32, 64]
last_save: 102

Gen:251
last_save: 102
Exit:FalseFalseTrue

Gen:1
TrainFitness:0.8036253776435045
TestFitness:0.8108108108108109
MaxGenLen:400
Individual: def p():
  def adf0(index):
    if np.equal(x[index],23816.90048):
      return False
    else:
      return False
  def adf1(index):
    if np.less(x[index],46840.08659):
      return False
    else:
      return False
  def adf2(index):
    if np.less(x[index],38622.05971):
      return True
    else:
      return True
  def adf3(index):
    if np.less(x[index],27213.02550):
      return True
    else:
      return False
  def adf4(index):
    if np.greater(x[index],67296.33243):
      return False
    else:
      return True
  def adf5(index):
    if np.equal(x[index],26962.32401):
      return False
    else:
      return True
  def adf6(index):
    if np.equal(x[index],71026.53970):
      return True
    else:
      return False
  def adf7(index):
    if np.less(x[index],81697.08585):
      return True
    else:
      return False
  def adf8(index):
    if np.equal(x[index],64920.55903):
      return False
    else:
      return False
  return multiple_operation([adf0(0)*+78.74, adf1(1)*+79.89, adf2(2)*+73.77, adf3(3)*+31.93, adf4(4)*-15.00, adf5(5)*-62.83, adf6(6)*-32.35, adf7(7)*+71.60, adf8(8)*+04.11], 01.74)
result=p(); 0.8036253776435045
IndLenGenome:339
IndGenome:[67, 9, 49, 70, 77, 37, 46, 85, 90, 35, 67, 57, 91, 70, 34, 2, 75, 30, 92, 15, 70, 29, 84, 31, 67, 98, 91, 40, 90, 45, 7, 94, 77, 45, 62, 15, 59, 15, 64, 2, 40, 45, 69, 65, 81, 28, 21, 27, 99, 84, 85, 44, 62, 63, 7, 38, 56, 47, 60, 39, 35, 43, 88, 91, 30, 63, 91, 40, 13, 48, 34, 39, 20, 75, 37, 25, 14, 64, 59, 44, 6, 8, 63, 50, 5, 76, 48, 64, 85, 29, 80, 13, 17, 80, 37, 60, 32, 96, 80, 87, 48, 72, 12, 84, 55, 85, 28, 53, 91, 11, 36, 46, 25, 70, 32, 98, 83, 53, 82, 43, 17, 22, 38, 58, 87, 29, 41, 80, 92, 97, 97, 50, 13, 59, 36, 69, 28, 90, 92, 46, 73, 89, 94, 36, 78, 81, 30, 57, 85, 32, 37, 36, 75, 22, 36, 11, 75, 77, 92, 70, 65, 37, 44, 40, 53, 91, 80, 99, 36, 77, 40, 83, 46, 13, 92, 13, 42, 15, 67, 50, 86, 13, 72, 50, 81, 61, 88, 51, 38, 66, 48, 14, 30, 51, 29, 36, 86, 83, 79, 35, 39, 17, 10, 87, 80, 13, 44, 66, 99, 89, 82, 59, 42, 25, 31, 91, 15, 79, 63, 90, 93, 64, 65, 90, 56, 20, 47, 15, 16, 79, 21, 46, 2, 30, 12, 13, 55, 47, 7, 90, 98, 36, 55, 49, 49, 96, 83, 95, 36, 4, 25, 41, 78, 35, 9, 20, 70, 1, 15, 36, 100, 14, 38, 22, 1, 48, 25, 25, 99, 46, 35, 41, 66, 82, 37, 39, 75, 98, 32, 20, 71, 85, 37, 27, 41, 31, 69, 76, 41, 17, 39, 20, 100, 91, 100, 41, 60, 59, 73, 32, 15, 9, 71, 78, 42, 2, 34, 15, 50, 13, 26, 50, 63, 37, 49, 78, 29, 23, 98, 35, 30, 22, 36, 10, 18, 38, 4, 12, 28, 27, 45, 97, 48, 66, 30, 60, 71, 81, 23]
last_save: 102

Gen:251
last_save: 102
Exit:FalseFalseTrue

Gen:1
TrainFitness:0.8157099697885196
TestFitness:0.7837837837837838
MaxGenLen:400
Individual: def p():
  def adf0(index):
    if np.less(x[index],53265.58142):
      return False
    else:
      return False
  def adf1(index):
    if np.greater(x[index],34564.33495):
      return False
    else:
      return True
  def adf2(index):
    if np.less(x[index],70142.14522):
      return False
    else:
      return False
  def adf3(index):
    if np.less(x[index],16479.53455):
      return True
    else:
      return False
  def adf4(index):
    if np.greater(x[index],51222.37180):
      return True
    else:
      return True
  def adf5(index):
    if np.equal(x[index],14208.12314):
      return False
    else:
      return False
  def adf6(index):
    if np.equal(x[index],46468.77931):
      return False
    else:
      return True
  def adf7(index):
    if np.greater(x[index],02196.83006):
      return True
    else:
      return False
  def adf8(index):
    if np.greater(x[index],16802.52100):
      return True
    else:
      return True
  return multiple_operation([adf0(0)*-58.69, adf1(1)*-14.74, adf2(2)*+39.05, adf3(3)*+24.88, adf4(4)*+77.00, adf5(5)*-48.18, adf6(6)*+05.02, adf7(7)*-62.39, adf8(8)*-77.59], 01.05)
result=p(); 0.8157099697885196
IndLenGenome:339
IndGenome:[69, 30, 27, 89, 69, 50, 65, 68, 49, 49, 51, 72, 55, 20, 10, 39, 62, 75, 20, 80, 50, 96, 75, 83, 38, 90, 35, 72, 2, 78, 68, 79, 58, 96, 88, 77, 25, 47, 25, 86, 84, 74, 3, 53, 51, 29, 61, 64, 30, 37, 31, 38, 22, 5, 76, 80, 14, 22, 11, 96, 50, 91, 31, 62, 7, 82, 36, 57, 2, 64, 93, 70, 37, 19, 31, 54, 10, 30, 56, 54, 57, 25, 32, 48, 72, 94, 25, 63, 83, 62, 65, 81, 43, 67, 68, 27, 17, 72, 75, 30, 89, 34, 91, 51, 68, 75, 84, 15, 78, 53, 70, 67, 41, 52, 13, 51, 66, 93, 74, 48, 57, 33, 66, 89, 87, 69, 17, 62, 41, 79, 11, 76, 82, 80, 82, 18, 9, 79, 72, 64, 95, 58, 47, 69, 24, 81, 14, 52, 93, 42, 17, 58, 31, 42, 45, 18, 20, 34, 91, 64, 25, 89, 31, 25, 33, 90, 42, 78, 50, 76, 30, 78, 81, 96, 74, 15, 82, 51, 71, 40, 26, 12, 86, 83, 21, 69, 60, 14, 44, 65, 18, 2, 12, 84, 38, 53, 50, 44, 97, 97, 78, 5, 30, 53, 15, 43, 10, 72, 15, 70, 19, 90, 60, 39, 12, 61, 87, 45, 99, 96, 26, 93, 45, 85, 64, 64, 31, 78, 15, 56, 6, 61, 66, 33, 57, 59, 36, 33, 31, 4, 47, 31, 56, 76, 17, 58, 68, 5, 66, 26, 81, 24, 67, 72, 43, 8, 13, 94, 26, 17, 97, 49, 95, 95, 20, 43, 76, 73, 72, 97, 41, 19, 12, 2, 64, 98, 19, 70, 77, 80, 92, 73, 98, 61, 94, 97, 24, 21, 8, 7, 65, 6, 60, 29, 74, 10, 84, 24, 19, 33, 0, 5, 35, 7, 48, 20, 79, 2, 78, 87, 46, 96, 74, 42, 46, 85, 70, 54, 54, 52, 25, 20, 33, 24, 91, 38, 53, 4, 17, 33, 9, 7, 35, 11, 91, 48, 23, 32, 63]
last_save: 102

Gen:251
last_save: 102
Exit:FalseFalseTrue

Gen:1
TrainFitness:0.8066465256797583
TestFitness:0.8108108108108109
MaxGenLen:400
Individual: def p():
  def adf0(index):
    if np.less(x[index],42927.91513):
      return True
    else:
      return True
  def adf1(index):
    if np.greater(x[index],44034.27801):
      return True
    else:
      return False
  def adf2(index):
    if np.greater(x[index],34714.92895):
      return False
    else:
      return False
  def adf3(index):
    if np.less(x[index],31879.62126):
      return False
    else:
      return True
  def adf4(index):
    if np.greater(x[index],18722.40674):
      return False
    else:
      return True
  def adf5(index):
    if np.equal(x[index],82120.79382):
      return True
    else:
      return False
  def adf6(index):
    if np.greater(x[index],75315.94329):
      return False
    else:
      return True
  def adf7(index):
    if np.less(x[index],02679.42454):
      return False
    else:
      return True
  def adf8(index):
    if np.equal(x[index],58487.90518):
      return False
    else:
      return True
  return multiple_operation([adf0(0)*-54.08, adf1(1)*+93.04, adf2(2)*+05.43, adf3(3)*-46.32, adf4(4)*+84.71, adf5(5)*-95.68, adf6(6)*+58.41, adf7(7)*-75.33, adf8(8)*+06.74], 53.16)
result=p(); 0.8066465256797583
IndLenGenome:339
IndGenome:[35, 22, 65, 41, 92, 81, 80, 80, 18, 16, 28, 8, 70, 35, 8, 89, 34, 23, 29, 70, 93, 54, 65, 34, 90, 78, 58, 82, 48, 44, 8, 99, 40, 64, 55, 49, 13, 22, 46, 50, 93, 59, 63, 94, 22, 50, 57, 21, 13, 27, 81, 36, 17, 92, 75, 40, 21, 51, 22, 18, 25, 12, 24, 35, 80, 4, 41, 70, 5, 77, 18, 73, 14, 16, 82, 6, 40, 11, 22, 31, 53, 32, 72, 52, 54, 55, 87, 35, 22, 26, 46, 63, 79, 45, 89, 24, 27, 70, 11, 86, 14, 69, 69, 81, 69, 30, 25, 32, 90, 28, 48, 89, 37, 11, 48, 46, 72, 91, 34, 25, 42, 18, 78, 94, 45, 81, 54, 16, 70, 35, 77, 15, 74, 94, 94, 91, 30, 97, 58, 71, 44, 83, 97, 23, 37, 48, 14, 88, 75, 57, 33, 34, 30, 32, 37, 53, 79, 19, 29, 39, 85, 70, 76, 54, 78, 54, 13, 96, 96, 14, 43, 12, 30, 90, 74, 55, 65, 35, 66, 56, 7, 45, 74, 69, 89, 63, 28, 98, 70, 61, 47, 62, 83, 26, 69, 82, 52, 38, 39, 62, 97, 32, 30, 53, 36, 33, 71, 74, 24, 97, 78, 52, 94, 15, 13, 64, 21, 98, 94, 13, 65, 17, 77, 29, 35, 59, 3, 0, 98, 63, 60, 97, 61, 31, 66, 39, 91, 67, 46, 9, 63, 48, 22, 7, 96, 68, 3, 33, 68, 98, 91, 91, 4, 99, 51, 24, 86, 40, 55, 18, 52, 35, 32, 82, 1, 35, 64, 64, 48, 28, 77, 75, 16, 60, 100, 71, 93, 58, 46, 29, 72, 63, 53, 47, 4, 75, 97, 82, 98, 52, 18, 13, 5, 32, 95, 41, 88, 10, 35, 17, 51, 46, 96, 97, 2, 34, 54, 47, 59, 92, 93, 38, 76, 48, 62, 2, 54, 40, 97, 73, 95, 89, 55, 20, 16, 80, 75, 90, 100, 54, 70, 81, 89, 94, 6, 63, 30, 82, 32]
last_save: 102

Gen:251
last_save: 102
Exit:FalseFalseTrue

Gen:1
TrainFitness:0.8042168674698795
TestFitness:0.8055555555555556
MaxGenLen:400
Individual: def p():
  def adf0(index):
    if np.greater(x[index],48474.56271):
      return False
    else:
      return False
  def adf1(index):
    if np.equal(x[index],33207.80090):
      return True
    else:
      return False
  def adf2(index):
    if np.equal(x[index],24919.28148):
      return True
    else:
      return False
  def adf3(index):
    if np.greater(x[index],87632.16685):
      return False
    else:
      return False
  def adf4(index):
    if np.less(x[index],11722.51592):
      return True
    else:
      return False
  def adf5(index):
    if np.greater(x[index],90129.26774):
      return False
    else:
      return True
  def adf6(index):
    if np.less(x[index],23585.56259):
      return False
    else:
      return True
  def adf7(index):
    if np.less(x[index],45077.48784):
      return True
    else:
      return True
  def adf8(index):
    if np.equal(x[index],82644.49423):
      return True
    else:
      return False
  return multiple_operation([adf0(0)*-84.11, adf1(1)*+60.20, adf2(2)*-65.37, adf3(3)*+13.64, adf4(4)*+61.52, adf5(5)*+85.56, adf6(6)*+69.89, adf7(7)*-88.43, adf8(8)*+18.12], 03.43)
result=p(); 0.8042168674698795
IndLenGenome:339
IndGenome:[55, 84, 96, 1, 85, 40, 2, 4, 80, 25, 39, 25, 38, 82, 8, 9, 47, 40, 74, 69, 5, 56, 57, 92, 45, 85, 56, 60, 23, 20, 55, 49, 60, 33, 30, 31, 76, 98, 5, 33, 58, 83, 89, 73, 61, 59, 44, 83, 30, 82, 67, 29, 89, 23, 40, 3, 2, 74, 88, 63, 38, 57, 90, 57, 20, 98, 69, 85, 49, 52, 54, 70, 88, 73, 61, 32, 56, 87, 40, 19, 36, 54, 16, 36, 71, 15, 62, 55, 96, 25, 10, 61, 76, 67, 98, 44, 37, 78, 51, 91, 15, 80, 52, 3, 36, 35, 64, 48, 83, 57, 61, 42, 41, 2, 72, 46, 98, 73, 46, 14, 44, 62, 38, 89, 36, 64, 71, 16, 84, 69, 26, 47, 99, 18, 43, 68, 45, 54, 24, 54, 98, 94, 45, 72, 13, 94, 35, 16, 87, 30, 86, 21, 74, 47, 17, 7, 22, 71, 79, 65, 20, 99, 38, 21, 19, 36, 57, 22, 85, 19, 92, 12, 30, 23, 85, 6, 21, 41, 63, 85, 27, 82, 38, 44, 79, 64, 67, 88, 70, 96, 82, 12, 22, 48, 45, 83, 15, 95, 73, 97, 14, 96, 5, 38, 37, 75, 65, 88, 74, 31, 47, 11, 79, 16, 5, 64, 32, 29, 78, 58, 14, 11, 79, 41, 22, 84, 26, 23, 42, 51, 44, 90, 40, 33, 95, 40, 4, 26, 41, 67, 78, 22, 93, 9, 90, 1, 46, 10, 34, 68, 47, 47, 71, 71, 22, 31, 56, 45, 27, 29, 51, 52, 6, 3, 35, 67, 19, 6, 57, 48, 56, 57, 93, 69, 53, 81, 17, 21, 10, 82, 86, 63, 87, 62, 57, 13, 83, 44, 63, 1, 69, 70, 33, 67, 18, 76, 5, 64, 7, 62, 50, 57, 77, 62, 83, 87, 90, 17, 57, 27, 37, 26, 25, 21, 52, 15, 71, 4, 100, 34, 94, 36, 28, 6, 55, 2, 30, 69, 73, 59, 71, 46, 31, 81, 26, 94, 28, 4, 11]
last_save: 102

Gen:251
last_save: 102
Exit:FalseFalseTrue

Gen:1
TrainFitness:0.8042168674698795
TestFitness:0.8055555555555556
MaxGenLen:400
Individual: def p():
  def adf0(index):
    if np.equal(x[index],52269.07558):
      return True
    else:
      return False
  def adf1(index):
    if np.greater(x[index],20789.33215):
      return True
    else:
      return False
  def adf2(index):
    if np.greater(x[index],99570.64887):
      return False
    else:
      return False
  def adf3(index):
    if np.equal(x[index],76541.22564):
      return False
    else:
      return True
  def adf4(index):
    if np.less(x[index],69550.11631):
      return True
    else:
      return False
  def adf5(index):
    if np.less(x[index],61613.90833):
      return False
    else:
      return True
  def adf6(index):
    if np.equal(x[index],27261.67278):
      return True
    else:
      return True
  def adf7(index):
    if np.greater(x[index],78813.60230):
      return True
    else:
      return True
  def adf8(index):
    if np.equal(x[index],56836.94515):
      return False
    else:
      return True
  return multiple_operation([adf0(0)*+80.25, adf1(1)*+09.53, adf2(2)*+53.55, adf3(3)*+73.09, adf4(4)*-14.79, adf5(5)*+37.07, adf6(6)*-27.68, adf7(7)*-19.40, adf8(8)*+30.75], 05.40)
result=p(); 0.8042168674698795
IndLenGenome:339
IndGenome:[43, 94, 67, 55, 32, 35, 65, 18, 40, 92, 65, 79, 97, 92, 60, 40, 71, 87, 52, 34, 16, 49, 50, 91, 88, 35, 65, 95, 58, 48, 95, 76, 19, 80, 97, 82, 73, 20, 58, 11, 57, 12, 17, 6, 61, 2, 28, 11, 12, 45, 7, 79, 37, 44, 30, 50, 51, 32, 26, 73, 79, 47, 40, 56, 58, 82, 14, 86, 70, 19, 94, 66, 37, 53, 54, 93, 44, 2, 65, 70, 42, 30, 47, 96, 61, 25, 82, 91, 85, 87, 97, 90, 71, 56, 75, 70, 98, 21, 79, 32, 51, 29, 72, 16, 80, 15, 17, 58, 23, 23, 74, 82, 40, 2, 25, 76, 6, 85, 65, 90, 47, 47, 49, 93, 31, 93, 28, 35, 47, 58, 43, 87, 89, 45, 43, 86, 28, 47, 14, 99, 75, 51, 60, 23, 56, 28, 77, 46, 70, 90, 28, 40, 97, 42, 83, 47, 14, 29, 44, 78, 46, 17, 63, 11, 40, 56, 23, 19, 75, 69, 67, 93, 19, 11, 59, 68, 89, 45, 81, 93, 31, 47, 64, 35, 75, 24, 5, 31, 63, 33, 20, 86, 49, 68, 35, 95, 51, 50, 44, 76, 74, 25, 72, 45, 76, 56, 71, 67, 45, 94, 73, 58, 61, 73, 81, 77, 98, 91, 56, 13, 10, 36, 66, 12, 39, 16, 1, 6, 78, 13, 24, 34, 59, 17, 32, 42, 43, 86, 84, 82, 22, 49, 68, 71, 23, 45, 14, 41, 62, 34, 61, 98, 16, 30, 24, 100, 0, 51, 23, 51, 41, 27, 58, 6, 82, 47, 30, 47, 26, 18, 87, 35, 89, 42, 40, 97, 5, 10, 76, 59, 50, 4, 91, 70, 9, 72, 40, 26, 95, 67, 41, 82, 73, 97, 25, 91, 97, 14, 19, 47, 89, 62, 63, 67, 51, 46, 60, 72, 92, 26, 27, 50, 48, 13, 69, 80, 89, 31, 79, 75, 78, 68, 78, 46, 56, 29, 58, 70, 15, 71, 39, 68, 93, 31, 15, 77, 34, 75, 43]
last_save: 102

Gen:251
last_save: 102
Exit:FalseFalseTrue

Gen:1
TrainFitness:0.8042168674698795
TestFitness:0.8055555555555556
MaxGenLen:400
Individual: def p():
  def adf0(index):
    if np.equal(x[index],29521.97817):
      return False
    else:
      return False
  def adf1(index):
    if np.equal(x[index],71202.52356):
      return True
    else:
      return True
  def adf2(index):
    if np.equal(x[index],15325.76697):
      return True
    else:
      return True
  def adf3(index):
    if np.greater(x[index],02004.47575):
      return False
    else:
      return True
  def adf4(index):
    if np.less(x[index],86463.55193):
      return False
    else:
      return False
  def adf5(index):
    if np.equal(x[index],22251.73061):
      return False
    else:
      return False
  def adf6(index):
    if np.equal(x[index],45501.28440):
      return True
    else:
      return True
  def adf7(index):
    if np.greater(x[index],73011.73139):
      return True
    else:
      return True
  def adf8(index):
    if np.equal(x[index],30775.45922):
      return True
    else:
      return False
  return multiple_operation([adf0(0)*+85.77, adf1(1)*+97.89, adf2(2)*+18.50, adf3(3)*+89.60, adf4(4)*-36.76, adf5(5)*-05.33, adf6(6)*+02.21, adf7(7)*+92.28, adf8(8)*+95.67], 27.70)
result=p(); 0.8042168674698795
IndLenGenome:339
IndGenome:[88, 25, 51, 96, 38, 59, 55, 77, 97, 30, 50, 87, 25, 90, 60, 17, 55, 5, 83, 64, 53, 80, 68, 99, 76, 72, 87, 48, 42, 73, 76, 38, 52, 32, 85, 25, 8, 60, 70, 50, 72, 31, 26, 21, 82, 82, 33, 22, 26, 73, 23, 97, 52, 48, 70, 41, 42, 91, 30, 15, 44, 39, 33, 94, 61, 94, 10, 1, 5, 23, 97, 38, 59, 89, 95, 45, 5, 94, 80, 80, 89, 25, 15, 28, 69, 29, 81, 53, 76, 48, 19, 35, 37, 78, 26, 16, 13, 37, 30, 71, 85, 56, 72, 87, 82, 69, 81, 97, 98, 87, 27, 73, 46, 71, 20, 49, 19, 67, 71, 22, 80, 25, 57, 16, 47, 27, 20, 22, 92, 14, 25, 89, 52, 82, 64, 87, 56, 85, 48, 81, 62, 84, 53, 54, 99, 60, 73, 64, 80, 92, 11, 90, 45, 63, 18, 48, 41, 20, 64, 95, 44, 25, 25, 58, 51, 19, 53, 83, 78, 80, 59, 23, 85, 41, 62, 37, 82, 83, 63, 51, 67, 59, 57, 47, 50, 16, 50, 62, 49, 51, 21, 12, 21, 92, 85, 91, 80, 35, 36, 45, 97, 87, 55, 22, 86, 72, 52, 45, 58, 21, 71, 61, 56, 31, 14, 75, 10, 65, 30, 94, 32, 87, 60, 79, 35, 77, 18, 56, 12, 6, 91, 29, 84, 99, 52, 84, 84, 77, 18, 24, 54, 54, 21, 24, 19, 16, 5, 41, 24, 75, 76, 41, 44, 45, 98, 81, 94, 50, 36, 21, 91, 3, 5, 14, 71, 85, 60, 38, 30, 55, 54, 81, 75, 80, 29, 36, 99, 77, 97, 5, 33, 55, 63, 45, 66, 83, 59, 60, 69, 20, 16, 34, 34, 68, 41, 10, 38, 79, 52, 50, 100, 3, 4, 41, 53, 49, 43, 31, 61, 9, 37, 81, 34, 55, 7, 57, 0, 15, 63, 72, 60, 97, 98, 70, 55, 25, 79, 19, 70, 90, 55, 72, 21, 55, 48, 83, 45, 99, 45]
last_save: 102

Gen:251
last_save: 102
Exit:FalseFalseTrue

Gen:1
TrainFitness:0.8042168674698795
TestFitness:0.8055555555555556
MaxGenLen:400
Individual: def p():
  def adf0(index):
    if np.equal(x[index],25491.13718):
      return False
    else:
      return False
  def adf1(index):
    if np.equal(x[index],26818.69127):
      return True
    else:
      return False
  def adf2(index):
    if np.less(x[index],66851.92498):
      return True
    else:
      return True
  def adf3(index):
    if np.greater(x[index],22818.15462):
      return True
    else:
      return False
  def adf4(index):
    if np.greater(x[index],79686.05835):
      return True
    else:
      return True
  def adf5(index):
    if np.less(x[index],32905.57140):
      return True
    else:
      return True
  def adf6(index):
    if np.greater(x[index],60188.08842):
      return True
    else:
      return True
  def adf7(index):
    if np.greater(x[index],25119.81239):
      return True
    else:
      return False
  def adf8(index):
    if np.equal(x[index],39823.38962):
      return False
    else:
      return False
  return multiple_operation([adf0(0)*-13.61, adf1(1)*-55.61, adf2(2)*-74.29, adf3(3)*-35.25, adf4(4)*+81.99, adf5(5)*+50.22, adf6(6)*+45.78, adf7(7)*-21.35, adf8(8)*-43.73], 03.62)
result=p(); 0.8042168674698795
IndLenGenome:339
IndGenome:[80, 78, 27, 74, 44, 72, 44, 10, 58, 65, 41, 90, 75, 60, 25, 93, 89, 33, 86, 67, 90, 91, 90, 56, 30, 3, 3, 30, 67, 95, 74, 42, 91, 45, 101, 18, 45, 72, 71, 40, 59, 43, 32, 79, 28, 72, 83, 82, 99, 47, 87, 80, 93, 56, 75, 41, 18, 63, 49, 86, 60, 77, 33, 86, 42, 15, 98, 38, 52, 29, 92, 89, 82, 12, 71, 87, 9, 32, 69, 79, 17, 78, 61, 78, 37, 68, 61, 19, 12, 57, 11, 22, 95, 92, 34, 52, 7, 67, 79, 88, 95, 33, 74, 43, 97, 27, 64, 89, 18, 78, 42, 58, 79, 78, 55, 45, 83, 34, 15, 33, 20, 84, 60, 8, 90, 77, 32, 38, 21, 22, 51, 43, 46, 21, 15, 17, 34, 16, 6, 53, 34, 57, 82, 54, 10, 86, 54, 16, 73, 46, 65, 84, 30, 65, 98, 70, 36, 73, 73, 83, 88, 57, 11, 81, 95, 77, 19, 91, 99, 99, 69, 31, 82, 61, 78, 39, 21, 52, 22, 64, 52, 33, 21, 12, 10, 2, 50, 49, 21, 76, 98, 42, 99, 38, 93, 46, 48, 15, 17, 86, 41, 18, 85, 36, 15, 54, 62, 48, 48, 12, 51, 55, 58, 28, 52, 38, 48, 85, 28, 31, 20, 31, 76, 15, 75, 46, 33, 57, 62, 100, 74, 59, 11, 4, 83, 24, 73, 54, 96, 51, 82, 67, 24, 70, 76, 6, 26, 27, 70, 53, 90, 50, 45, 95, 41, 47, 98, 23, 81, 97, 66, 93, 38, 94, 42, 30, 41, 49, 6, 21, 63, 12, 44, 59, 78, 59, 7, 23, 93, 79, 26, 89, 84, 22, 64, 92, 73, 60, 84, 47, 2, 50, 6, 2, 11, 44, 89, 15, 7, 50, 12, 23, 39, 78, 73, 73, 61, 95, 82, 26, 87, 21, 77, 79, 17, 99, 7, 29, 61, 62, 84, 44, 98, 79, 24, 56, 58, 87, 47, 18, 26, 67, 52, 44, 10, 29, 91, 40, 93]
last_save: 102

Gen:80
TrainFitness:0.8072289156626506
TestFitness:0.8055555555555556
MaxGenLen:415
Individual: def p():
  def adf0(index):
    if np.equal(x[index],50555.54986):
      if np.equal(x[index],07604.21508):
        return False
      else:
        return True
    else:
      if np.less(x[index],45677.63626):
        return True
      else:
        return True
  def adf1(index):
    if np.greater(x[index],63604.15323):
      return True
    else:
      return False
  def adf2(index):
    if np.greater(x[index],84855.28142):
      if np.equal(x[index],88123.71511):
        if np.less(x[index],35088.46166):
          return True
        else:
          return False
      else:
        if np.greater(x[index],89473.48690):
          return True
        else:
          return True
    else:
      if np.less(x[index],62332.41684):
        if np.less(x[index],28142.02788):
          return True
        else:
          return True
      else:
        if np.less(x[index],51169.63608):
          return True
        else:
          return True
  def adf3(index):
    if np.less(x[index],97088.94734):
      if np.greater(x[index],04256.76782):
        return True
      else:
        return True
    else:
      if np.greater(x[index],16203.49388):
        return False
      else:
        return False
  def adf4(index):
    if np.less(x[index],80255.50597):
      return True
    else:
      return False
  def adf5(index):
    if np.equal(x[index],04445.11913):
      return True
    else:
      return True
  def adf6(index):
    if np.equal(x[index],40139.77070):
      return True
    else:
      return True
  def adf7(index):
    if np.less(x[index],02543.32248):
      if np.equal(x[index],31920.79650):
        return True
      else:
        return True
    else:
      if np.equal(x[index],09432.65222):
        return True
      else:
        return False
  def adf8(index):
    if np.equal(x[index],97649.02478):
      return False
    else:
      return True
  return multiple_operation([adf0(0)*-96.46, adf1(1)*+55.31, adf2(2)*+40.20, adf3(3)*-18.63, adf4(4)*+04.79, adf5(5)*+39.16, adf6(6)*+08.81, adf7(7)*+36.89, adf8(8)*+73.14], 52.45)
result=p(); 0.8072289156626506
IndLenGenome:396
IndGenome:[51, 58, 24, 31, 36, 38, 10, 65, 80, 95, 35, 45, 35, 34, 69, 38, 86, 42, 59, 95, 10, 7, 56, 40, 34, 92, 81, 25, 60, 8, 33, 72, 9, 76, 31, 64, 5, 76, 17, 7, 46, 33, 36, 12, 96, 36, 52, 65, 25, 91, 81, 67, 86, 93, 6, 30, 74, 21, 45, 23, 82, 23, 22, 93, 63, 52, 14, 81, 16, 68, 34, 48, 85, 85, 62, 58, 11, 74, 62, 10, 32, 57, 48, 68, 11, 32, 53, 97, 11, 35, 91, 61, 66, 19, 76, 23, 75, 90, 38, 48, 14, 96, 81, 76, 46, 74, 65, 27, 30, 68, 48, 39, 64, 47, 3, 94, 8, 36, 39, 10, 54, 62, 45, 16, 78, 76, 22, 93, 63, 52, 14, 81, 16, 68, 34, 48, 85, 85, 62, 58, 11, 74, 62, 10, 32, 57, 48, 68, 80, 32, 53, 97, 11, 35, 91, 61, 66, 19, 76, 23, 56, 90, 38, 48, 14, 96, 81, 76, 46, 74, 19, 27, 30, 68, 48, 39, 64, 47, 3, 94, 8, 36, 39, 10, 54, 62, 45, 16, 97, 76, 47, 38, 12, 70, 74, 15, 27, 66, 51, 66, 52, 70, 23, 64, 59, 43, 18, 98, 67, 97, 58, 80, 75, 10, 70, 18, 30, 62, 25, 55, 75, 90, 65, 89, 57, 80, 41, 80, 90, 46, 68, 13, 20, 4, 94, 54, 75, 41, 41, 29, 81, 33, 86, 34, 38, 80, 69, 20, 96, 74, 20, 31, 43, 69, 87, 37, 50, 57, 40, 62, 44, 79, 21, 42, 82, 25, 80, 82, 75, 34, 93, 33, 22, 92, 54, 8, 74, 80, 55, 23, 71, 99, 32, 60, 77, 59, 36, 95, 50, 60, 62, 98, 35, 10, 40, 9, 4, 73, 92, 66, 35, 2, 12, 72, 80, 81, 15, 100, 41, 80, 45, 79, 87, 66, 94, 39, 0, 92, 74, 67, 18, 71, 94, 23, 79, 40, 21, 14, 99, 56, 54, 36, 14, 64, 80, 85, 35, 93, 21, 91, 14, 3, 44, 90, 52, 100, 69, 45, 96, 11, 68, 26, 3, 50, 84, 92, 10, 34, 37, 79, 6, 6, 22, 73, 9, 11, 76, 21, 42, 11, 50, 98, 88, 51, 86, 36, 35, 53, 26, 38, 79, 20, 86, 16, 87, 73, 41, 74, 51, 15, 12, 24, 65, 22, 74, 88]
last_save: 102

Gen:86
TrainFitness:0.8132530120481928
TestFitness:0.8055555555555556
MaxGenLen:415
Individual: def p():
  def adf0(index):
    if np.equal(x[index],50555.54986):
      if np.equal(x[index],07604.21508):
        return False
      else:
        return True
    else:
      if np.less(x[index],45677.63626):
        return True
      else:
        return True
  def adf1(index):
    if np.greater(x[index],63604.15323):
      return True
    else:
      return False
  def adf2(index):
    if np.greater(x[index],84855.28142):
      if np.equal(x[index],88123.71511):
        if np.less(x[index],35088.46166):
          return True
        else:
          return False
      else:
        if np.greater(x[index],89473.48690):
          return True
        else:
          return True
    else:
      if np.less(x[index],62332.41684):
        if np.less(x[index],28142.02788):
          return True
        else:
          return True
      else:
        if np.less(x[index],51169.63608):
          return True
        else:
          return True
  def adf3(index):
    if np.less(x[index],97088.94734):
      if np.greater(x[index],04256.76782):
        return True
      else:
        return True
    else:
      if np.greater(x[index],16203.49388):
        return False
      else:
        return False
  def adf4(index):
    if np.less(x[index],80255.50597):
      return True
    else:
      return False
  def adf5(index):
    if np.equal(x[index],04448.11913):
      return True
    else:
      return True
  def adf6(index):
    if np.equal(x[index],40139.77070):
      return True
    else:
      return True
  def adf7(index):
    if np.less(x[index],02043.32248):
      if np.equal(x[index],31920.79650):
        return True
      else:
        return True
    else:
      if np.equal(x[index],09432.65221):
        return True
      else:
        return False
  def adf8(index):
    if np.equal(x[index],97649.02478):
      return False
    else:
      return True
  return multiple_operation([adf0(0)*-96.46, adf1(1)*+55.31, adf2(2)*+40.20, adf3(3)*-18.63, adf4(4)*+04.79, adf5(5)*+39.16, adf6(6)*+08.61, adf7(7)*+36.89, adf8(8)*+73.14], 52.45)
result=p(); 0.8132530120481928
IndLenGenome:396
IndGenome:[51, 58, 24, 31, 36, 38, 10, 65, 80, 95, 35, 45, 35, 34, 69, 38, 86, 42, 59, 95, 10, 7, 56, 40, 34, 92, 81, 25, 60, 8, 33, 72, 9, 76, 31, 64, 5, 76, 17, 7, 46, 33, 36, 12, 96, 36, 52, 65, 25, 91, 81, 67, 86, 93, 6, 30, 74, 21, 45, 23, 82, 23, 22, 93, 63, 52, 14, 81, 16, 68, 34, 48, 85, 85, 62, 58, 11, 74, 62, 10, 32, 57, 48, 68, 11, 32, 53, 97, 11, 35, 91, 61, 66, 19, 76, 23, 75, 90, 38, 48, 14, 96, 81, 76, 46, 74, 65, 27, 30, 68, 48, 39, 64, 47, 3, 94, 8, 36, 39, 10, 54, 62, 45, 16, 78, 76, 22, 93, 63, 52, 14, 81, 16, 68, 34, 48, 85, 85, 62, 58, 11, 74, 62, 10, 32, 57, 48, 68, 80, 32, 53, 97, 11, 35, 91, 61, 66, 19, 76, 23, 56, 90, 38, 48, 14, 96, 81, 76, 46, 74, 19, 27, 30, 68, 48, 39, 64, 47, 3, 94, 8, 36, 39, 10, 54, 62, 45, 16, 97, 76, 47, 38, 12, 70, 74, 15, 27, 66, 51, 66, 52, 70, 23, 64, 59, 43, 18, 98, 67, 97, 58, 80, 75, 10, 70, 18, 30, 62, 25, 55, 75, 90, 65, 89, 57, 80, 41, 80, 90, 46, 68, 13, 20, 4, 94, 54, 88, 41, 41, 29, 81, 33, 86, 34, 38, 80, 69, 20, 96, 74, 20, 31, 43, 69, 87, 37, 50, 57, 40, 62, 44, 79, 21, 42, 82, 25, 80, 82, 30, 34, 93, 33, 22, 92, 54, 8, 74, 80, 55, 23, 71, 99, 32, 60, 77, 59, 36, 95, 50, 60, 62, 98, 35, 10, 40, 9, 4, 73, 92, 66, 35, 2, 12, 31, 80, 81, 15, 100, 41, 80, 45, 79, 87, 66, 94, 39, 0, 92, 74, 67, 18, 71, 94, 23, 79, 40, 21, 14, 99, 56, 54, 36, 14, 64, 80, 85, 35, 93, 21, 91, 14, 3, 44, 90, 52, 100, 69, 45, 96, 11, 68, 26, 3, 50, 84, 92, 10, 34, 37, 79, 6, 6, 22, 73, 9, 11, 76, 21, 42, 11, 50, 98, 76, 51, 86, 36, 35, 53, 26, 38, 79, 20, 86, 16, 87, 73, 41, 74, 51, 15, 12, 24, 65, 22, 74, 88]
last_save: 102

Gen:336
last_save: 102
Exit:FalseFalseTrue