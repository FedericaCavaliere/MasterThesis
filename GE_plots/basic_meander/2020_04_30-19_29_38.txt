Dataset:Meander/new_Full.csv
FS:False
Seed:1234
Size:7

Gen:1
TrainFitness:0.8152866242038217
TestFitness:0.8333333333333334
MaxGenLen:400
Individual: def p():
  def adf0(index):
    if np.less(x[index],25809.58176):
      return False
    else:
      return False
  def adf1(index):
    if np.equal(x[index],13664.13300):
      return False
    else:
      return False
  def adf2(index):
    if np.less(x[index],87873.99343):
      return False
    else:
      return False
  def adf3(index):
    if np.equal(x[index],72115.55415):
      return True
    else:
      return True
  def adf4(index):
    if np.less(x[index],40012.91816):
      return True
    else:
      return False
  def adf5(index):
    if np.greater(x[index],63088.79716):
      return False
    else:
      return False
  def adf6(index):
    if np.less(x[index],53891.59784):
      return False
    else:
      return False
  def adf7(index):
    if np.less(x[index],01445.01091):
      return False
    else:
      return True
  def adf8(index):
    if np.greater(x[index],17044.60778):
      return False
    else:
      return True
  return multiple_operation([adf0(0)*+40.68, adf1(1)*+72.15, adf2(2)*+30.44, adf3(3)*+78.69, adf4(4)*-92.09, adf5(5)*+86.93, adf6(6)*+67.22, adf7(7)*-27.15, adf8(8)*+55.12], 23.69)
result=p(); 0.8152866242038217
IndLenGenome:339
IndGenome:[73, 63, 51, 77, 91, 11, 68, 5, 39, 29, 23, 91, 74, 10, 77, 3, 61, 79, 92, 37, 49, 55, 72, 98, 82, 70, 17, 66, 85, 56, 80, 18, 42, 89, 33, 49, 92, 16, 93, 7, 55, 59, 12, 59, 95, 48, 58, 26, 41, 73, 69, 81, 81, 64, 90, 60, 22, 91, 52, 81, 71, 19, 70, 58, 15, 88, 70, 81, 46, 51, 58, 37, 34, 10, 67, 76, 3, 81, 27, 69, 9, 62, 15, 53, 68, 69, 17, 25, 97, 69, 43, 28, 27, 59, 78, 17, 54, 94, 44, 43, 26, 50, 94, 50, 83, 77, 28, 68, 82, 39, 85, 98, 91, 73, 95, 46, 75, 65, 19, 93, 90, 63, 67, 62, 54, 47, 82, 38, 47, 78, 13, 80, 92, 97, 61, 46, 34, 59, 42, 64, 85, 59, 74, 80, 88, 65, 74, 93, 4, 80, 26, 83, 91, 47, 36, 33, 97, 15, 89, 81, 71, 59, 68, 28, 23, 85, 34, 90, 71, 81, 11, 38, 41, 83, 78, 81, 75, 51, 17, 62, 85, 75, 16, 51, 52, 52, 36, 70, 37, 45, 84, 34, 44, 90, 15, 14, 10, 22, 30, 83, 93, 33, 22, 19, 18, 81, 60, 75, 21, 89, 49, 56, 60, 10, 94, 68, 41, 81, 84, 27, 54, 40, 44, 17, 47, 50, 39, 61, 23, 61, 64, 25, 94, 19, 88, 33, 41, 84, 5, 40, 54, 61, 5, 74, 73, 69, 50, 84, 8, 26, 62, 96, 7, 79, 99, 3, 30, 63, 19, 89, 9, 26, 30, 88, 45, 83, 70, 15, 61, 12, 77, 32, 36, 81, 99, 76, 35, 17, 10, 25, 97, 100, 69, 59, 8, 87, 33, 37, 33, 95, 50, 73, 10, 26, 48, 49, 51, 97, 29, 56, 3, 42, 52, 100, 63, 32, 92, 43, 93, 32, 25, 77, 30, 6, 67, 73, 71, 29, 96, 70, 76, 46, 77, 43, 74, 64, 64, 96, 46, 9, 73, 46, 54, 18, 46, 29, 89, 36, 71]
last_save: 70

Gen:251
last_save: 70
Exit:FalseFalseTrue

Gen:1
TrainFitness:0.8057324840764332
TestFitness:0.7962962962962963
MaxGenLen:400
Individual: def p():
  def adf0(index):
    if np.less(x[index],32197.25076):
      return False
    else:
      return False
  def adf1(index):
    if np.greater(x[index],82600.95638):
      return True
    else:
      return False
  def adf2(index):
    if np.greater(x[index],91550.87488):
      return True
    else:
      return False
  def adf3(index):
    if np.less(x[index],47366.82816):
      return True
    else:
      return True
  def adf4(index):
    if np.equal(x[index],20668.24397):
      return True
    else:
      return False
  def adf5(index):
    if np.greater(x[index],83746.73178):
      return True
    else:
      return True
  def adf6(index):
    if np.equal(x[index],03580.46622):
      return True
    else:
      return True
  def adf7(index):
    if np.equal(x[index],74145.30694):
      return True
    else:
      return False
  def adf8(index):
    if np.greater(x[index],53367.04044):
      return True
    else:
      return False
  return multiple_operation([adf0(0)*-66.31, adf1(1)*+11.45, adf2(2)*+07.43, adf3(3)*+31.24, adf4(4)*-26.48, adf5(5)*+14.11, adf6(6)*+79.09, adf7(7)*+16.98, adf8(8)*+13.96], 14.32)
result=p(); 0.8057324840764332
IndLenGenome:339
IndGenome:[70, 61, 4, 40, 55, 67, 55, 84, 84, 98, 55, 86, 47, 44, 14, 82, 10, 77, 41, 23, 4, 30, 30, 36, 10, 55, 88, 55, 86, 2, 17, 58, 35, 76, 8, 84, 7, 68, 38, 45, 36, 52, 25, 24, 54, 84, 86, 23, 40, 37, 69, 98, 29, 96, 77, 77, 25, 80, 72, 71, 42, 61, 56, 25, 78, 63, 76, 94, 73, 78, 29, 94, 98, 27, 26, 35, 39, 79, 80, 34, 11, 21, 61, 88, 33, 70, 66, 39, 35, 82, 99, 84, 98, 68, 17, 26, 24, 80, 81, 10, 25, 61, 36, 62, 71, 90, 43, 43, 72, 5, 46, 34, 92, 12, 65, 55, 75, 76, 24, 76, 15, 49, 56, 43, 90, 79, 77, 21, 26, 90, 47, 88, 56, 86, 72, 20, 78, 25, 69, 10, 30, 29, 34, 92, 14, 94, 64, 59, 32, 31, 74, 76, 92, 57, 32, 63, 49, 58, 77, 67, 94, 78, 86, 64, 93, 54, 42, 36, 83, 87, 10, 83, 31, 3, 19, 31, 66, 86, 10, 75, 92, 67, 85, 33, 62, 62, 14, 23, 74, 73, 88, 41, 64, 40, 41, 44, 90, 27, 60, 81, 76, 63, 20, 70, 91, 38, 54, 55, 29, 21, 66, 51, 13, 84, 22, 39, 54, 21, 47, 56, 84, 23, 44, 60, 29, 75, 22, 64, 37, 73, 46, 36, 87, 24, 77, 2, 16, 11, 82, 64, 42, 2, 78, 69, 7, 51, 80, 46, 40, 67, 26, 7, 3, 58, 1, 56, 96, 44, 92, 72, 4, 62, 78, 40, 95, 4, 29, 13, 73, 58, 39, 41, 56, 91, 55, 73, 75, 26, 51, 97, 95, 42, 71, 73, 53, 59, 33, 78, 92, 58, 19, 96, 31, 3, 48, 18, 51, 46, 61, 26, 88, 62, 47, 3, 16, 37, 95, 5, 62, 74, 10, 47, 65, 15, 43, 15, 99, 94, 8, 97, 89, 23, 72, 92, 66, 77, 28, 21, 65, 14, 57, 85, 74, 3, 35, 14, 3, 60, 25]
last_save: 70

Gen:194
TrainFitness:0.8121019108280255
TestFitness:0.7962962962962963
MaxGenLen:445
Individual: def p():
  def adf0(index):
    if np.greater(x[index],30255.02175):
      return True
    else:
      return False
  def adf1(index):
    if np.less(x[index],40806.33730):
      return False
    else:
      return True
  def adf2(index):
    if np.equal(x[index],22506.75819):
      if np.greater(x[index],50291.16515):
        if np.equal(x[index],19048.96117):
          return True
        else:
          return True
      else:
        if np.greater(x[index],82209.87023):
          return True
        else:
          return False
    else:
      if np.less(x[index],50953.32699):
        if np.equal(x[index],18366.50889):
          return True
        else:
          return False
      else:
        if np.less(x[index],78199.65149):
          return True
        else:
          return False
  def adf3(index):
    if np.equal(x[index],19974.07405):
      if np.equal(x[index],98621.64029):
        return True
      else:
        return False
    else:
      if np.equal(x[index],71801.87217):
        return True
      else:
        return False
  def adf4(index):
    if np.equal(x[index],85546.54341):
      return True
    else:
      return True
  def adf5(index):
    if np.equal(x[index],65583.10054):
      return True
    else:
      return True
  def adf6(index):
    if np.equal(x[index],11801.87922):
      return False
    else:
      return False
  def adf7(index):
    if np.greater(x[index],63885.65905):
      if np.less(x[index],23452.69701):
        if np.less(x[index],80248.00405):
          return False
        else:
          return False
      else:
        if np.greater(x[index],69030.07773):
          return True
        else:
          return True
    else:
      if np.greater(x[index],37822.13771):
        if np.less(x[index],26412.69251):
          return False
        else:
          return False
      else:
        if np.less(x[index],01665.81332):
          return False
        else:
          return True
  def adf8(index):
    if np.equal(x[index],73169.16306):
      return True
    else:
      return False
  return multiple_operation([adf0(0)*+97.20, adf1(1)*+19.24, adf2(2)*+72.46, adf3(3)*+12.46, adf4(4)*+03.11, adf5(5)*+78.37, adf6(6)*+66.54, adf7(7)*-60.44, adf8(8)*-36.23], 58.54)
result=p(); 0.8121019108280255
IndLenGenome:442
IndGenome:[56, 62, 20, 15, 43, 75, 65, 53, 40, 62, 5, 65, 40, 42, 71, 7, 85, 50, 85, 89, 40, 26, 85, 74, 14, 90, 28, 10, 76, 33, 93, 77, 63, 70, 87, 26, 15, 77, 96, 35, 5, 82, 12, 5, 80, 16, 27, 15, 68, 61, 49, 84, 75, 41, 75, 50, 42, 69, 31, 81, 26, 85, 91, 5, 74, 29, 50, 1, 99, 60, 74, 48, 89, 76, 91, 61, 87, 48, 72, 25, 18, 19, 38, 42, 22, 90, 99, 8, 37, 10, 42, 83, 86, 59, 37, 88, 58, 75, 30, 49, 5, 93, 73, 12, 56, 49, 39, 77, 50, 90, 61, 68, 33, 16, 16, 95, 80, 38, 18, 89, 80, 49, 38, 58, 76, 27, 18, 41, 49, 39, 96, 15, 31, 94, 89, 36, 65, 71, 16, 91, 20, 86, 91, 19, 19, 27, 44, 40, 17, 74, 80, 55, 25, 20, 62, 69, 88, 96, 2, 91, 56, 74, 50, 12, 89, 98, 29, 75, 65, 95, 87, 31, 78, 100, 11, 98, 57, 22, 81, 97, 14, 69, 27, 15, 69, 92, 36, 68, 75, 75, 84, 46, 65, 94, 73, 74, 31, 18, 66, 22, 60, 28, 80, 83, 76, 95, 25, 38, 73, 91, 50, 30, 95, 84, 98, 62, 50, 50, 12, 71, 35, 81, 91, 98, 30, 41, 28, 87, 49, 72, 92, 75, 95, 42, 82, 10, 48, 59, 16, 33, 28, 78, 55, 86, 45, 19, 10, 55, 51, 85, 42, 32, 3, 44, 75, 72, 96, 79, 27, 70, 21, 14, 31, 26, 68, 90, 42, 74, 48, 80, 60, 24, 10, 35, 99, 99, 28, 48, 58, 36, 89, 50, 63, 30, 10, 17, 27, 57, 83, 20, 78, 49, 39, 16, 13, 17, 88, 22, 22, 21, 63, 67, 27, 91, 97, 7, 79, 62, 96, 24, 91, 82, 66, 29, 32, 45, 11, 93, 65, 36, 70, 38, 100, 31, 36, 86, 85, 38, 61, 63, 93, 72, 31, 98, 42, 15, 98, 26, 90, 97, 13, 61, 26, 89, 71, 56, 23, 70, 56, 32, 1, 58, 51, 19, 72, 31, 99, 77, 22, 10, 89, 30, 13, 11, 49, 2, 34, 92, 34, 69, 87, 82, 14, 86, 63, 20, 69, 1, 82, 14, 86, 63, 8, 33, 60, 33, 31, 31, 81, 70, 46, 47, 38, 63, 47, 76, 34, 44, 96, 26, 65, 54, 21, 97, 60, 36, 10, 94, 64, 27, 81, 50, 93, 26, 82, 53, 6, 65, 98, 5, 4, 17, 96, 67, 20, 93, 16, 74, 32, 71, 62, 13, 18, 27, 100, 90, 86, 84, 89, 59, 56, 56]
last_save: 70

Gen:200
TrainFitness:0.8184713375796179
TestFitness:0.7962962962962963
MaxGenLen:445
Individual: def p():
  def adf0(index):
    if np.greater(x[index],30255.02175):
      return True
    else:
      return False
  def adf1(index):
    if np.less(x[index],40846.33730):
      return False
    else:
      return True
  def adf2(index):
    if np.equal(x[index],22506.75819):
      if np.greater(x[index],50291.16515):
        if np.equal(x[index],19048.96117):
          return True
        else:
          return True
      else:
        if np.greater(x[index],82209.87023):
          return True
        else:
          return False
    else:
      if np.less(x[index],50953.32699):
        if np.equal(x[index],18366.50889):
          return True
        else:
          return False
      else:
        if np.less(x[index],78199.65149):
          return True
        else:
          return False
  def adf3(index):
    if np.equal(x[index],19974.07405):
      if np.equal(x[index],98620.64029):
        return True
      else:
        return False
    else:
      if np.equal(x[index],71801.87217):
        return True
      else:
        return False
  def adf4(index):
    if np.equal(x[index],85544.54341):
      return True
    else:
      return True
  def adf5(index):
    if np.equal(x[index],65593.10054):
      return True
    else:
      return True
  def adf6(index):
    if np.equal(x[index],11801.87922):
      return False
    else:
      return False
  def adf7(index):
    if np.greater(x[index],63885.65905):
      if np.less(x[index],23452.69701):
        if np.less(x[index],80248.00405):
          return False
        else:
          return False
      else:
        if np.greater(x[index],69030.07773):
          return True
        else:
          return True
    else:
      if np.greater(x[index],37822.13771):
        if np.less(x[index],26412.69251):
          return False
        else:
          return False
      else:
        if np.less(x[index],01665.81332):
          return False
        else:
          return True
  def adf8(index):
    if np.equal(x[index],73169.16306):
      return True
    else:
      return False
  return multiple_operation([adf0(0)*+97.20, adf1(1)*+19.24, adf2(2)*+22.46, adf3(3)*+12.46, adf4(4)*+03.11, adf5(5)*+78.37, adf6(6)*+66.54, adf7(7)*-60.44, adf8(8)*-36.23], 58.54)
result=p(); 0.8184713375796179
IndLenGenome:442
IndGenome:[56, 62, 20, 15, 43, 75, 65, 53, 40, 62, 5, 65, 40, 42, 71, 7, 85, 50, 85, 89, 40, 26, 85, 74, 14, 90, 28, 64, 76, 33, 93, 77, 63, 70, 87, 26, 15, 77, 96, 35, 5, 82, 12, 5, 80, 16, 27, 15, 68, 61, 49, 84, 75, 41, 75, 50, 42, 69, 31, 81, 26, 85, 91, 5, 74, 29, 50, 1, 99, 60, 74, 48, 89, 76, 91, 61, 87, 48, 72, 25, 18, 19, 38, 42, 22, 90, 99, 8, 37, 10, 42, 83, 86, 59, 37, 88, 58, 75, 30, 49, 5, 93, 73, 12, 56, 49, 39, 77, 50, 90, 61, 68, 33, 16, 16, 95, 80, 38, 18, 89, 80, 49, 38, 58, 76, 7, 18, 41, 49, 39, 96, 15, 31, 94, 89, 36, 65, 71, 16, 91, 20, 86, 91, 19, 19, 27, 44, 40, 17, 74, 80, 55, 25, 20, 62, 69, 88, 96, 2, 20, 56, 74, 50, 12, 89, 98, 29, 75, 65, 95, 87, 31, 78, 100, 11, 98, 57, 22, 81, 97, 14, 69, 27, 15, 69, 92, 36, 68, 75, 75, 84, 54, 65, 94, 73, 74, 31, 18, 66, 22, 60, 28, 80, 83, 76, 95, 25, 89, 73, 91, 50, 30, 95, 84, 98, 62, 50, 50, 12, 71, 35, 81, 91, 98, 30, 41, 28, 87, 49, 72, 92, 75, 95, 42, 82, 10, 48, 59, 16, 33, 28, 78, 55, 86, 45, 19, 10, 55, 51, 85, 42, 32, 3, 44, 75, 72, 96, 79, 27, 70, 21, 14, 31, 26, 68, 90, 42, 74, 48, 80, 60, 24, 10, 35, 99, 99, 28, 48, 58, 36, 89, 50, 63, 30, 10, 17, 27, 57, 83, 20, 78, 49, 39, 16, 13, 17, 88, 22, 22, 21, 63, 67, 27, 91, 97, 7, 79, 62, 96, 24, 91, 82, 66, 29, 32, 45, 11, 93, 65, 36, 70, 38, 100, 31, 36, 86, 85, 38, 61, 63, 93, 72, 31, 98, 42, 15, 98, 26, 90, 97, 13, 61, 26, 89, 71, 56, 23, 70, 56, 32, 1, 58, 51, 19, 72, 31, 99, 77, 22, 10, 89, 30, 13, 11, 49, 2, 34, 92, 34, 69, 22, 82, 14, 86, 63, 20, 69, 1, 82, 14, 86, 63, 8, 33, 60, 33, 31, 31, 81, 70, 46, 47, 38, 63, 47, 76, 34, 44, 96, 26, 65, 54, 21, 97, 60, 36, 10, 94, 64, 27, 81, 50, 93, 26, 82, 53, 6, 65, 98, 5, 4, 17, 96, 67, 20, 93, 16, 74, 32, 71, 62, 13, 18, 27, 100, 90, 86, 84, 89, 59, 56, 56]
last_save: 70

Gen:204
TrainFitness:0.821656050955414
TestFitness:0.7962962962962963
MaxGenLen:445
Individual: def p():
  def adf0(index):
    if np.greater(x[index],30255.02175):
      return True
    else:
      return False
  def adf1(index):
    if np.less(x[index],40806.33730):
      return False
    else:
      return True
  def adf2(index):
    if np.equal(x[index],22506.75819):
      if np.greater(x[index],50291.16515):
        if np.equal(x[index],19048.96112):
          return True
        else:
          return True
      else:
        if np.greater(x[index],82209.87023):
          return True
        else:
          return False
    else:
      if np.less(x[index],50953.32699):
        if np.equal(x[index],18366.50889):
          return True
        else:
          return False
      else:
        if np.less(x[index],78199.65149):
          return True
        else:
          return False
  def adf3(index):
    if np.equal(x[index],19974.07405):
      if np.equal(x[index],98621.64029):
        return True
      else:
        return False
    else:
      if np.equal(x[index],71801.87017):
        return True
      else:
        return False
  def adf4(index):
    if np.less(x[index],85544.54341):
      return True
    else:
      return True
  def adf5(index):
    if np.equal(x[index],65583.10054):
      return True
    else:
      return True
  def adf6(index):
    if np.equal(x[index],11801.87922):
      return False
    else:
      return False
  def adf7(index):
    if np.greater(x[index],63885.65905):
      if np.less(x[index],23452.69701):
        if np.less(x[index],80248.00405):
          return False
        else:
          return False
      else:
        if np.greater(x[index],69030.07773):
          return True
        else:
          return True
    else:
      if np.greater(x[index],37822.13711):
        if np.less(x[index],26432.69251):
          return False
        else:
          return False
      else:
        if np.less(x[index],01465.81332):
          return False
        else:
          return True
  def adf8(index):
    if np.equal(x[index],73119.16306):
      return True
    else:
      return False
  return multiple_operation([adf0(0)*+97.20, adf1(1)*+19.24, adf2(2)*+22.46, adf3(3)*+12.46, adf4(4)*+03.11, adf5(5)*+78.47, adf6(6)*+66.54, adf7(7)*-60.44, adf8(8)*-36.23], 58.54)
result=p(); 0.821656050955414
IndLenGenome:442
IndGenome:[56, 62, 20, 15, 43, 75, 65, 53, 40, 62, 5, 65, 40, 42, 71, 7, 85, 50, 85, 89, 40, 26, 85, 74, 14, 90, 28, 10, 76, 33, 93, 77, 63, 70, 87, 26, 15, 77, 96, 35, 5, 82, 12, 5, 80, 16, 27, 15, 68, 61, 49, 84, 75, 41, 75, 50, 42, 69, 31, 81, 26, 85, 91, 5, 74, 29, 50, 1, 99, 60, 74, 48, 89, 76, 91, 61, 42, 48, 72, 25, 18, 19, 38, 42, 22, 90, 99, 8, 37, 10, 42, 83, 86, 59, 37, 88, 58, 75, 30, 49, 5, 93, 73, 12, 56, 49, 39, 77, 50, 90, 61, 68, 33, 16, 16, 95, 80, 38, 18, 89, 80, 49, 38, 58, 76, 27, 18, 41, 49, 39, 96, 15, 31, 94, 89, 36, 65, 16, 16, 91, 20, 86, 91, 19, 19, 27, 44, 40, 17, 74, 80, 55, 41, 20, 62, 69, 88, 96, 2, 91, 56, 74, 50, 12, 89, 98, 29, 75, 65, 95, 87, 31, 68, 100, 11, 98, 57, 10, 81, 97, 14, 69, 27, 15, 69, 91, 36, 68, 75, 75, 84, 34, 65, 94, 73, 74, 31, 18, 66, 22, 60, 96, 80, 83, 76, 95, 25, 38, 73, 91, 50, 30, 95, 84, 98, 62, 50, 50, 12, 71, 35, 81, 91, 98, 30, 41, 28, 87, 49, 72, 92, 75, 95, 42, 82, 10, 48, 59, 16, 33, 28, 78, 55, 86, 45, 19, 10, 55, 51, 85, 42, 32, 3, 44, 75, 72, 96, 79, 27, 70, 21, 14, 31, 26, 68, 90, 42, 74, 48, 80, 60, 24, 10, 35, 99, 99, 28, 9, 58, 36, 89, 50, 63, 30, 10, 17, 27, 57, 83, 20, 78, 49, 39, 16, 13, 17, 88, 22, 22, 21, 63, 67, 61, 91, 97, 7, 79, 62, 96, 24, 53, 82, 66, 29, 32, 45, 11, 93, 65, 36, 70, 38, 100, 31, 64, 86, 85, 38, 61, 63, 93, 72, 31, 98, 42, 15, 98, 26, 90, 97, 13, 61, 91, 89, 71, 56, 23, 70, 56, 32, 17, 58, 51, 19, 72, 31, 99, 77, 22, 10, 89, 22, 13, 11, 49, 2, 34, 92, 34, 69, 22, 82, 14, 86, 63, 20, 69, 1, 82, 14, 86, 63, 8, 33, 60, 33, 31, 31, 81, 70, 46, 47, 38, 44, 47, 76, 34, 44, 96, 26, 65, 54, 21, 97, 60, 36, 10, 94, 64, 27, 81, 50, 93, 26, 82, 53, 6, 65, 98, 5, 4, 17, 96, 67, 20, 93, 16, 74, 32, 71, 62, 13, 18, 27, 100, 90, 86, 84, 89, 59, 56, 56]
last_save: 70

Gen:454
last_save: 70
Exit:FalseFalseTrue

Gen:1
TrainFitness:0.819620253164557
TestFitness:0.7692307692307693
MaxGenLen:400
Individual: def p():
  def adf0(index):
    if np.equal(x[index],91357.41698):
      if np.less(x[index],09063.34137):
        return True
      else:
        return True
    else:
      if np.greater(x[index],02903.61784):
        return True
      else:
        return False
  def adf1(index):
    if np.equal(x[index],46289.49008):
      if np.equal(x[index],61538.85095):
        return True
      else:
        return False
    else:
      if np.greater(x[index],42317.62625):
        return True
      else:
        return False
  def adf2(index):
    if np.greater(x[index],90991.90533):
      if np.equal(x[index],57967.93940):
        return False
      else:
        return False
    else:
      if np.greater(x[index],01237.06732):
        return False
      else:
        return False
  def adf3(index):
    if np.less(x[index],41089.63367):
      if np.greater(x[index],16481.46948):
        return False
      else:
        return True
    else:
      if np.less(x[index],60015.08732):
        return False
      else:
        return True
  def adf4(index):
    if np.less(x[index],17790.23276):
      if np.greater(x[index],71093.35060):
        return True
      else:
        return False
    else:
      if np.greater(x[index],32546.39511):
        return False
      else:
        return True
  def adf5(index):
    if np.less(x[index],35517.69319):
      if np.less(x[index],05084.35670):
        return True
      else:
        return False
    else:
      if np.greater(x[index],82543.82745):
        return True
      else:
        return False
  def adf6(index):
    if np.greater(x[index],98587.51087):
      if np.equal(x[index],43041.50490):
        return False
      else:
        return False
    else:
      if np.greater(x[index],90492.78985):
        return True
      else:
        return True
  def adf7(index):
    if np.greater(x[index],80977.93810):
      if np.less(x[index],38615.68338):
        return False
      else:
        return False
    else:
      if np.equal(x[index],10987.38820):
        return False
      else:
        return True
  def adf8(index):
    if np.greater(x[index],55733.06995):
      if np.greater(x[index],43876.80994):
        return True
      else:
        return True
    else:
      if np.greater(x[index],93449.87352):
        return False
      else:
        return False
  return multiple_operation([adf0(0)*+32.50, adf1(1)*+89.02, adf2(2)*+23.07, adf3(3)*-21.15, adf4(4)*+15.68, adf5(5)*-92.06, adf6(6)*+88.07, adf7(7)*+56.62, adf8(8)*+46.81], 43.59)
result=p(); 0.819620253164557
IndLenGenome:717
IndGenome:[56, 3, 18, 24, 47, 70, 35, 41, 41, 41, 14, 66, 21, 46, 77, 44, 79, 33, 49, 7, 12, 8, 52, 40, 95, 52, 8, 14, 97, 54, 57, 65, 50, 86, 76, 36, 21, 27, 66, 9, 93, 14, 26, 66, 52, 43, 35, 97, 45, 49, 89, 66, 47, 100, 22, 68, 20, 55, 86, 19, 82, 58, 52, 43, 25, 3, 85, 77, 56, 66, 76, 79, 63, 65, 41, 63, 48, 12, 14, 83, 72, 18, 30, 37, 5, 96, 90, 68, 73, 3, 91, 89, 69, 12, 52, 30, 57, 86, 12, 51, 74, 66, 33, 83, 24, 65, 50, 59, 54, 46, 46, 26, 30, 36, 71, 73, 45, 70, 59, 89, 86, 13, 4, 54, 97, 48, 5, 62, 88, 65, 81, 93, 58, 76, 36, 56, 88, 32, 7, 52, 13, 80, 88, 93, 61, 48, 27, 71, 27, 11, 13, 88, 19, 26, 89, 29, 48, 49, 68, 85, 45, 43, 58, 80, 31, 72, 95, 96, 29, 65, 83, 21, 40, 87, 75, 82, 31, 29, 99, 89, 98, 11, 6, 45, 11, 15, 34, 97, 40, 60, 13, 11, 20, 28, 53, 74, 29, 83, 5, 30, 75, 64, 29, 21, 28, 22, 48, 59, 93, 15, 90, 86, 79, 32, 90, 96, 41, 19, 15, 52, 73, 64, 53, 57, 52, 61, 32, 91, 83, 43, 80, 75, 91, 70, 54, 6, 52, 88, 69, 85, 71, 25, 80, 54, 60, 55, 2, 49, 77, 78, 33, 62, 82, 97, 53, 27, 69, 18, 24, 74, 29, 76, 84, 81, 41, 25, 36, 59, 14, 63, 99, 25, 20, 81, 63, 10, 12, 18, 53, 67, 65, 56, 68, 60, 82, 66, 25, 62, 64, 37, 11, 97, 88, 34, 95, 51, 27, 87, 84, 23, 38, 88, 34, 77, 53, 59, 96, 44, 90, 91, 54, 46, 53, 31, 90, 84, 90, 31, 88, 87, 15, 21, 52, 63, 75, 75, 24, 77, 36, 36, 48, 50, 83, 22, 29, 90, 74, 96, 48, 87, 16, 79, 98, 24, 3, 79, 51, 64, 39, 24, 80, 10, 79, 67, 52, 25, 97, 77, 22, 53, 30, 71, 48, 97, 70, 38, 47, 82, 18, 13, 77, 46, 24, 29, 29, 50, 69, 37, 24, 19, 43, 15, 16, 18, 49, 52, 97, 31, 84, 61, 60, 80, 87, 34, 12, 55, 79, 57, 92, 78, 67, 17, 19, 72, 28, 56, 83, 20, 77, 58, 89, 93, 30, 79, 92, 50, 17, 70, 64, 73, 93, 48, 48, 19, 90, 45, 20, 52, 54, 20, 81, 89, 48, 48, 40, 41, 62, 85, 19, 56, 67, 85, 19, 83, 36, 57, 91, 58, 80, 54, 80, 71, 25, 68, 59, 88, 74, 83, 21, 70, 88, 25, 40, 26, 57, 19, 68, 40, 91, 47, 44, 25, 33, 53, 75, 19, 16, 95, 7, 66, 30, 21, 71, 16, 49, 56, 5, 42, 10, 74, 6, 73, 9, 8, 9, 16, 25, 32, 52, 83, 8, 83, 23, 32, 38, 83, 57, 37, 87, 92, 91, 39, 73, 91, 95, 18, 81, 84, 77, 63, 83, 100, 92, 89, 50, 81, 19, 9, 100, 89, 91, 37, 100, 24, 81, 29, 2, 22, 36, 24, 38, 72, 1, 14, 45, 90, 75, 37, 14, 94, 39, 46, 92, 90, 23, 49, 80, 7, 76, 22, 97, 37, 47, 2, 61, 46, 87, 48, 60, 72, 88, 8, 61, 59, 16, 88, 31, 74, 43, 77, 13, 45, 32, 20, 75, 81, 22, 13, 79, 82, 77, 96, 14, 36, 86, 70, 86, 5, 27, 51, 0, 3, 71, 86, 70, 76, 32, 62, 12, 68, 63, 74, 78, 1, 26, 70, 72, 33, 50, 20, 80, 51, 50, 48, 1, 56, 21, 5, 92, 42, 23, 100, 60, 88, 26, 5, 8, 58, 33, 57, 81, 10, 53, 30, 84, 97, 10, 76, 68, 11, 53, 31, 12, 14, 56, 20, 75, 98, 97, 47, 89, 41, 63, 2, 27, 58, 80, 81, 20, 48, 50, 58, 81, 30, 3, 95, 7, 15, 51, 6, 36, 60, 39, 38, 12, 76, 43, 90, 48, 65, 30, 23, 27, 68, 12, 45, 77, 34, 52, 48, 10, 25, 26, 62, 79, 55, 38, 92, 56, 98, 17, 87, 47, 70, 34, 20, 55]
last_save: 70

Gen:251
last_save: 70
Exit:FalseFalseTrue

Gen:1
TrainFitness:0.8037974683544303
TestFitness:0.8076923076923077
MaxGenLen:400
Individual: def p():
  def adf0(index):
    if np.greater(x[index],94337.44109):
      return False
    else:
      return False
  def adf1(index):
    if np.less(x[index],41870.20176):
      return False
    else:
      return True
  def adf2(index):
    if np.greater(x[index],84757.79701):
      return False
    else:
      return True
  def adf3(index):
    if np.equal(x[index],14279.00917):
      return False
    else:
      return False
  def adf4(index):
    if np.greater(x[index],79800.55376):
      return True
    else:
      return True
  def adf5(index):
    if np.less(x[index],04753.33029):
      return False
    else:
      return True
  def adf6(index):
    if np.equal(x[index],03437.77422):
      return False
    else:
      return False
  def adf7(index):
    if np.less(x[index],19355.97317):
      return True
    else:
      return False
  def adf8(index):
    if np.greater(x[index],18595.77906):
      return True
    else:
      return False
  return multiple_operation([adf0(0)*+06.48, adf1(1)*+49.07, adf2(2)*-28.88, adf3(3)*-81.68, adf4(4)*+31.61, adf5(5)*-73.25, adf6(6)*+02.35, adf7(7)*+98.57, adf8(8)*-44.35], 65.21)
result=p(); 0.8037974683544303
IndLenGenome:339
IndGenome:[52, 88, 48, 29, 4, 37, 70, 40, 65, 21, 82, 98, 56, 70, 63, 81, 43, 84, 12, 77, 28, 85, 84, 33, 40, 20, 65, 91, 66, 43, 80, 20, 48, 30, 85, 48, 75, 60, 96, 94, 74, 61, 15, 21, 21, 70, 53, 70, 75, 77, 47, 52, 57, 6, 81, 98, 80, 95, 22, 20, 68, 62, 14, 80, 2, 16, 36, 11, 49, 98, 43, 20, 57, 20, 80, 37, 75, 93, 28, 66, 49, 34, 36, 17, 45, 68, 84, 30, 94, 99, 86, 63, 48, 53, 41, 59, 33, 47, 19, 80, 61, 62, 27, 45, 65, 44, 35, 53, 2, 61, 35, 21, 15, 28, 48, 76, 53, 79, 23, 29, 88, 99, 37, 68, 52, 24, 57, 41, 74, 70, 98, 77, 30, 84, 89, 70, 61, 20, 21, 34, 67, 91, 83, 69, 20, 64, 39, 27, 82, 78, 86, 85, 83, 19, 56, 53, 19, 60, 71, 40, 71, 40, 25, 83, 27, 60, 39, 55, 50, 14, 68, 61, 67, 38, 8, 80, 16, 81, 99, 27, 16, 67, 19, 55, 39, 14, 13, 43, 65, 20, 85, 91, 62, 63, 48, 47, 99, 71, 44, 45, 9, 91, 35, 87, 84, 79, 26, 57, 33, 94, 67, 97, 54, 30, 52, 92, 37, 89, 95, 33, 68, 97, 77, 41, 67, 40, 84, 56, 6, 74, 40, 19, 59, 18, 20, 58, 51, 14, 98, 77, 99, 13, 66, 58, 48, 23, 80, 3, 80, 89, 79, 43, 39, 64, 81, 7, 60, 26, 35, 86, 6, 32, 27, 38, 39, 45, 59, 70, 30, 96, 58, 24, 20, 63, 5, 80, 26, 68, 87, 60, 38, 92, 82, 5, 97, 54, 79, 79, 34, 42, 65, 77, 10, 58, 50, 70, 26, 88, 80, 60, 69, 15, 86, 47, 5, 18, 13, 43, 21, 57, 95, 67, 41, 21, 60, 97, 72, 33, 99, 99, 23, 65, 28, 53, 73, 59, 46, 52, 65, 77, 96, 32, 14, 49, 34, 27, 43, 62, 81]
last_save: 70

Gen:251
last_save: 70
Exit:FalseFalseTrue

Gen:1
TrainFitness:0.8069620253164557
TestFitness:0.8076923076923077
MaxGenLen:400
Individual: def p():
  def adf0(index):
    if np.equal(x[index],48084.58266):
      return True
    else:
      return False
  def adf1(index):
    if np.less(x[index],10685.58382):
      return True
    else:
      return False
  def adf2(index):
    if np.equal(x[index],41514.40141):
      return True
    else:
      return True
  def adf3(index):
    if np.equal(x[index],25922.35170):
      return False
    else:
      return False
  def adf4(index):
    if np.less(x[index],76804.82954):
      return False
    else:
      return False
  def adf5(index):
    if np.less(x[index],86208.98613):
      return True
    else:
      return False
  def adf6(index):
    if np.greater(x[index],89292.47823):
      return False
    else:
      return False
  def adf7(index):
    if np.less(x[index],54868.62204):
      return True
    else:
      return False
  def adf8(index):
    if np.equal(x[index],27944.17541):
      return False
    else:
      return False
  return multiple_operation([adf0(0)*-51.41, adf1(1)*+97.01, adf2(2)*+36.89, adf3(3)*-26.32, adf4(4)*-48.19, adf5(5)*-81.46, adf6(6)*+12.05, adf7(7)*+74.33, adf8(8)*-31.51], 72.43)
result=p(); 0.8069620253164557
IndLenGenome:339
IndGenome:[98, 73, 27, 58, 97, 57, 45, 35, 42, 40, 45, 44, 19, 95, 35, 60, 85, 90, 19, 86, 7, 81, 10, 70, 60, 77, 51, 91, 37, 88, 93, 84, 71, 95, 53, 57, 83, 84, 35, 21, 19, 81, 89, 50, 6, 70, 71, 95, 82, 56, 20, 59, 61, 83, 70, 81, 76, 18, 92, 14, 38, 84, 23, 60, 59, 54, 5, 57, 92, 62, 17, 89, 4, 94, 41, 68, 96, 94, 23, 68, 25, 33, 31, 35, 88, 61, 35, 94, 13, 18, 83, 3, 84, 23, 82, 65, 10, 13, 19, 98, 73, 63, 11, 52, 31, 41, 23, 78, 46, 25, 15, 92, 48, 45, 16, 79, 2, 40, 82, 79, 16, 34, 76, 62, 95, 27, 28, 62, 53, 59, 14, 94, 96, 79, 49, 85, 83, 71, 81, 91, 60, 24, 98, 36, 61, 97, 55, 38, 59, 51, 27, 30, 12, 73, 24, 38, 66, 47, 84, 69, 47, 46, 92, 87, 27, 47, 64, 16, 97, 87, 28, 24, 65, 32, 19, 20, 89, 7, 39, 71, 78, 23, 70, 41, 55, 86, 30, 67, 85, 72, 46, 98, 23, 19, 12, 14, 15, 51, 82, 54, 79, 68, 70, 82, 36, 34, 48, 55, 39, 28, 35, 68, 81, 83, 16, 71, 13, 55, 86, 19, 62, 52, 88, 20, 34, 88, 16, 68, 43, 87, 96, 85, 55, 85, 43, 57, 62, 64, 19, 90, 56, 15, 77, 42, 38, 90, 34, 50, 80, 76, 66, 93, 63, 28, 38, 95, 48, 33, 2, 97, 8, 46, 70, 57, 40, 92, 23, 79, 77, 54, 35, 3, 42, 75, 54, 75, 98, 69, 14, 73, 32, 72, 89, 95, 85, 12, 64, 2, 74, 61, 21, 16, 66, 48, 71, 24, 60, 36, 99, 100, 7, 96, 38, 44, 1, 47, 8, 48, 37, 47, 41, 4, 88, 56, 83, 88, 71, 43, 57, 28, 65, 86, 61, 58, 60, 21, 55, 83, 50, 46, 71, 44, 13, 71, 33, 28, 87, 59, 97]
last_save: 70

Gen:251
last_save: 70
Exit:FalseFalseTrue

Gen:1
TrainFitness:0.8037974683544303
TestFitness:0.8076923076923077
MaxGenLen:400
Individual: def p():
  def adf0(index):
    if np.equal(x[index],31251.54583):
      return False
    else:
      return False
  def adf1(index):
    if np.less(x[index],74534.27865):
      return True
    else:
      return False
  def adf2(index):
    if np.less(x[index],67439.43964):
      return False
    else:
      return False
  def adf3(index):
    if np.less(x[index],36182.32072):
      return False
    else:
      return False
  def adf4(index):
    if np.less(x[index],55278.62736):
      return True
    else:
      return True
  def adf5(index):
    if np.less(x[index],81100.35836):
      return True
    else:
      return False
  def adf6(index):
    if np.equal(x[index],83975.66141):
      return False
    else:
      return True
  def adf7(index):
    if np.greater(x[index],21592.61781):
      return False
    else:
      return False
  def adf8(index):
    if np.greater(x[index],93131.71332):
      return True
    else:
      return False
  return multiple_operation([adf0(0)*+43.26, adf1(1)*-36.93, adf2(2)*-75.36, adf3(3)*+48.21, adf4(4)*+97.41, adf5(5)*+95.54, adf6(6)*-85.97, adf7(7)*-90.38, adf8(8)*+48.92], 27.23)
result=p(); 0.8037974683544303
IndLenGenome:339
IndGenome:[6, 26, 84, 83, 55, 73, 90, 37, 40, 15, 20, 25, 50, 14, 37, 70, 10, 81, 3, 22, 78, 86, 59, 80, 38, 78, 75, 60, 45, 63, 73, 36, 80, 13, 11, 87, 49, 51, 51, 5, 59, 19, 35, 53, 44, 14, 6, 93, 53, 48, 79, 19, 74, 44, 54, 66, 81, 6, 93, 46, 19, 73, 86, 66, 51, 14, 67, 59, 37, 30, 56, 22, 26, 31, 65, 67, 25, 91, 92, 78, 25, 15, 11, 56, 87, 19, 79, 52, 35, 14, 99, 13, 97, 51, 20, 51, 94, 99, 11, 87, 22, 34, 84, 53, 79, 18, 79, 35, 63, 64, 25, 97, 98, 52, 95, 31, 91, 53, 51, 38, 33, 18, 75, 25, 22, 73, 81, 81, 32, 89, 96, 11, 67, 49, 20, 82, 6, 78, 93, 84, 47, 23, 47, 15, 79, 15, 83, 52, 42, 41, 61, 21, 59, 85, 67, 39, 90, 66, 83, 83, 85, 76, 73, 28, 43, 13, 12, 38, 35, 86, 74, 87, 33, 25, 19, 23, 47, 42, 15, 58, 14, 81, 20, 64, 78, 45, 81, 79, 37, 33, 60, 34, 92, 88, 92, 32, 82, 89, 56, 83, 16, 77, 45, 35, 32, 99, 94, 27, 77, 93, 11, 86, 92, 44, 65, 88, 65, 28, 31, 85, 51, 82, 93, 74, 33, 74, 52, 76, 18, 96, 64, 41, 51, 5, 22, 37, 97, 55, 28, 91, 6, 2, 35, 63, 15, 65, 9, 27, 48, 17, 8, 60, 72, 49, 51, 84, 42, 29, 95, 90, 75, 7, 17, 27, 61, 53, 29, 38, 84, 20, 36, 94, 62, 29, 58, 72, 65, 75, 81, 90, 0, 78, 90, 21, 70, 29, 68, 70, 89, 35, 22, 95, 45, 38, 67, 25, 70, 29, 36, 24, 77, 36, 92, 39, 13, 77, 7, 5, 75, 69, 72, 84, 77, 72, 65, 87, 82, 25, 84, 20, 26, 94, 4, 21, 88, 32, 9, 90, 61, 76, 31, 75, 94, 35, 81, 93, 34, 18, 32]
last_save: 70

Gen:99
TrainFitness:0.8069620253164557
TestFitness:0.8076923076923077
MaxGenLen:415
Individual: def p():
  def adf0(index):
    if np.greater(x[index],56264.96850):
      return True
    else:
      return False
  def adf1(index):
    if np.less(x[index],35368.02574):
      if np.greater(x[index],05381.66745):
        return False
      else:
        return False
    else:
      if np.equal(x[index],88255.57678):
        return True
      else:
        return False
  def adf2(index):
    if np.greater(x[index],66996.85903):
      return False
    else:
      return True
  def adf3(index):
    if np.equal(x[index],35202.52405):
      if np.equal(x[index],38766.78551):
        return False
      else:
        return False
    else:
      if np.greater(x[index],29517.57843):
        return False
      else:
        return True
  def adf4(index):
    if np.equal(x[index],12068.80936):
      if np.less(x[index],35654.85320):
        return False
      else:
        return False
    else:
      if np.greater(x[index],83300.99601):
        return False
      else:
        return False
  def adf5(index):
    if np.equal(x[index],70289.98739):
      if np.less(x[index],79268.80949):
        return False
      else:
        return True
    else:
      if np.greater(x[index],50491.07339):
        return False
      else:
        return True
  def adf6(index):
    if np.equal(x[index],03941.61978):
      return True
    else:
      return True
  def adf7(index):
    if np.less(x[index],02942.56902):
      return False
    else:
      return True
  def adf8(index):
    if np.less(x[index],60710.78700):
      return True
    else:
      return True
  return multiple_operation([adf0(0)*+73.38, adf1(1)*-96.57, adf2(2)*-52.50, adf3(3)*+29.12, adf4(4)*-86.07, adf5(5)*+43.25, adf6(6)*-28.57, adf7(7)*-86.03, adf8(8)*+36.59], 06.35)
result=p(); 0.8069620253164557
IndLenGenome:371
IndGenome:[66, 90, 16, 45, 35, 45, 40, 5, 36, 42, 46, 4, 59, 46, 8, 35, 50, 60, 95, 64, 26, 86, 61, 93, 83, 25, 43, 96, 78, 20, 32, 15, 57, 54, 40, 21, 35, 60, 65, 83, 88, 51, 76, 56, 37, 54, 5, 45, 31, 73, 11, 75, 58, 18, 22, 5, 35, 95, 67, 26, 67, 28, 94, 51, 35, 45, 21, 72, 97, 96, 46, 19, 59, 46, 8, 35, 89, 60, 3, 77, 26, 71, 56, 93, 83, 25, 43, 75, 32, 20, 32, 15, 42, 54, 40, 55, 35, 14, 65, 83, 88, 47, 76, 56, 37, 38, 5, 45, 31, 73, 11, 75, 72, 18, 22, 59, 35, 11, 67, 85, 67, 28, 94, 23, 9, 26, 32, 71, 95, 26, 94, 71, 32, 20, 96, 88, 88, 90, 99, 33, 66, 72, 61, 67, 83, 65, 66, 85, 64, 48, 75, 43, 62, 30, 29, 27, 14, 90, 59, 78, 83, 13, 10, 70, 49, 29, 96, 40, 91, 31, 43, 2, 16, 75, 71, 63, 27, 60, 52, 78, 19, 39, 78, 67, 43, 59, 42, 85, 70, 87, 9, 82, 96, 18, 98, 30, 39, 84, 29, 47, 4, 79, 51, 14, 75, 10, 24, 19, 61, 40, 37, 83, 43, 29, 31, 14, 95, 95, 21, 29, 25, 30, 63, 39, 94, 31, 16, 41, 29, 17, 98, 46, 16, 83, 75, 55, 25, 46, 60, 92, 29, 74, 42, 85, 36, 59, 20, 42, 89, 10, 43, 80, 98, 55, 77, 36, 80, 97, 31, 0, 17, 68, 7, 30, 20, 100, 72, 50, 9, 42, 64, 24, 57, 13, 3, 48, 0, 93, 25, 89, 56, 65, 47, 9, 25, 74, 75, 62, 5, 30, 95, 38, 52, 12, 29, 21, 62, 61, 99, 91, 18, 66, 20, 77, 31, 80, 16, 54, 23, 92, 95, 98, 49, 12, 2, 8, 75, 97, 17, 99, 73, 88, 76, 60, 23, 27, 100, 41, 73, 16, 55, 9, 80, 0, 76, 23, 55, 24, 98, 90, 82, 22, 73, 64, 93, 89, 18, 55, 52, 53, 68, 15, 96, 98, 87, 2, 91, 45, 37, 15, 94, 90, 52, 39, 88, 22, 11, 38, 89, 97, 78]
last_save: 70

Gen:107
TrainFitness:0.810126582278481
TestFitness:0.8269230769230769
MaxGenLen:415
Individual: def p():
  def adf0(index):
    if np.greater(x[index],56264.93853):
      return True
    else:
      return False
  def adf1(index):
    if np.greater(x[index],35368.02574):
      if np.greater(x[index],05381.66045):
        return False
      else:
        return False
    else:
      if np.equal(x[index],88255.57678):
        return True
      else:
        return False
  def adf2(index):
    if np.greater(x[index],66996.85903):
      return False
    else:
      return True
  def adf3(index):
    if np.equal(x[index],35202.52495):
      if np.equal(x[index],38766.78551):
        return False
      else:
        return False
    else:
      if np.greater(x[index],29517.57843):
        return False
      else:
        return True
  def adf4(index):
    if np.equal(x[index],12068.80936):
      if np.less(x[index],35654.85320):
        return False
      else:
        return False
    else:
      if np.greater(x[index],83300.99631):
        return False
      else:
        return False
  def adf5(index):
    if np.equal(x[index],70289.98739):
      if np.less(x[index],79268.80949):
        return False
      else:
        return True
    else:
      if np.greater(x[index],50491.07339):
        return False
      else:
        return True
  def adf6(index):
    if np.equal(x[index],03941.61978):
      return True
    else:
      return True
  def adf7(index):
    if np.less(x[index],02242.56902):
      return False
    else:
      return True
  def adf8(index):
    if np.less(x[index],60710.78700):
      return True
    else:
      return True
  return multiple_operation([adf0(0)*+73.38, adf1(1)*-96.57, adf2(2)*-52.50, adf3(3)*+29.12, adf4(4)*-86.07, adf5(5)*+43.25, adf6(6)*-28.57, adf7(7)*-86.03, adf8(8)*+36.59], 06.35)
result=p(); 0.810126582278481
IndLenGenome:371
IndGenome:[66, 90, 16, 45, 35, 45, 40, 5, 36, 42, 46, 4, 59, 53, 8, 35, 63, 60, 95, 64, 26, 86, 87, 93, 83, 25, 43, 96, 78, 20, 32, 15, 57, 54, 40, 21, 35, 60, 65, 83, 88, 51, 76, 56, 50, 54, 5, 45, 31, 73, 11, 75, 58, 18, 22, 5, 35, 95, 67, 26, 67, 28, 94, 51, 35, 45, 21, 72, 97, 96, 46, 19, 59, 46, 8, 35, 89, 60, 3, 77, 26, 71, 56, 93, 83, 25, 43, 75, 32, 20, 32, 15, 42, 54, 79, 55, 35, 14, 65, 83, 88, 47, 76, 56, 37, 38, 5, 45, 31, 73, 11, 75, 72, 18, 22, 59, 35, 11, 67, 85, 67, 28, 94, 23, 9, 26, 32, 71, 95, 26, 94, 71, 32, 20, 96, 88, 88, 90, 99, 33, 66, 72, 61, 67, 83, 65, 66, 85, 64, 48, 75, 43, 62, 30, 29, 27, 14, 90, 59, 78, 83, 13, 10, 70, 49, 29, 96, 83, 91, 31, 43, 33, 16, 75, 71, 63, 27, 60, 52, 78, 19, 39, 78, 67, 43, 59, 42, 85, 70, 87, 9, 82, 96, 18, 98, 30, 39, 84, 29, 47, 4, 79, 51, 14, 75, 10, 24, 19, 61, 40, 37, 83, 43, 29, 31, 14, 95, 95, 21, 29, 25, 30, 63, 39, 94, 31, 16, 41, 29, 17, 98, 46, 16, 83, 75, 55, 25, 46, 60, 92, 42, 74, 42, 85, 36, 59, 20, 42, 89, 10, 43, 80, 98, 55, 77, 36, 80, 97, 31, 0, 17, 68, 7, 30, 20, 100, 72, 50, 9, 42, 64, 24, 57, 13, 3, 48, 0, 93, 25, 89, 56, 65, 47, 9, 25, 74, 75, 62, 5, 30, 95, 38, 52, 12, 29, 21, 62, 61, 99, 91, 18, 66, 20, 77, 31, 80, 89, 54, 23, 92, 95, 98, 49, 12, 2, 8, 75, 97, 17, 99, 73, 88, 76, 60, 23, 27, 100, 77, 73, 16, 55, 9, 80, 0, 76, 23, 55, 24, 98, 90, 82, 22, 73, 64, 93, 89, 18, 55, 52, 53, 68, 15, 96, 98, 87, 2, 91, 45, 37, 15, 94, 90, 52, 39, 88, 22, 11, 38, 89, 97, 78]
last_save: 70

Gen:126
TrainFitness:0.8132911392405063
TestFitness:0.8076923076923077
MaxGenLen:415
Individual: def p():
  def adf0(index):
    if np.greater(x[index],56264.93853):
      return True
    else:
      return False
  def adf1(index):
    if np.greater(x[index],35368.02574):
      if np.greater(x[index],05381.66045):
        return False
      else:
        return False
    else:
      if np.equal(x[index],58255.57678):
        return True
      else:
        return False
  def adf2(index):
    if np.greater(x[index],66923.85903):
      return False
    else:
      return True
  def adf3(index):
    if np.equal(x[index],35202.52495):
      if np.equal(x[index],38766.78551):
        return False
      else:
        return False
    else:
      if np.greater(x[index],29517.57843):
        return False
      else:
        return True
  def adf4(index):
    if np.equal(x[index],12068.80936):
      if np.less(x[index],35654.85320):
        return False
      else:
        return False
    else:
      if np.greater(x[index],83300.99631):
        return False
      else:
        return False
  def adf5(index):
    if np.equal(x[index],70289.98739):
      if np.less(x[index],79268.80949):
        return False
      else:
        return True
    else:
      if np.greater(x[index],80491.17329):
        return False
      else:
        return True
  def adf6(index):
    if np.equal(x[index],03941.61978):
      return True
    else:
      return True
  def adf7(index):
    if np.less(x[index],01342.56902):
      return False
    else:
      return True
  def adf8(index):
    if np.less(x[index],60710.78700):
      return True
    else:
      return True
  return multiple_operation([adf0(0)*+73.38, adf1(1)*-96.57, adf2(2)*-52.50, adf3(3)*+29.12, adf4(4)*-86.07, adf5(5)*+43.25, adf6(6)*-28.59, adf7(7)*-86.03, adf8(8)*+36.09], 06.35)
result=p(); 0.8132911392405063
IndLenGenome:371
IndGenome:[66, 90, 16, 45, 50, 45, 40, 5, 36, 42, 46, 4, 59, 53, 8, 35, 63, 60, 95, 64, 26, 86, 87, 93, 83, 25, 43, 96, 78, 20, 32, 15, 57, 54, 40, 21, 35, 60, 65, 83, 88, 51, 76, 56, 50, 54, 5, 45, 31, 73, 11, 75, 85, 18, 22, 5, 35, 95, 67, 26, 67, 28, 94, 51, 35, 45, 21, 72, 97, 96, 46, 19, 42, 43, 8, 35, 89, 60, 3, 77, 26, 71, 56, 93, 83, 25, 43, 75, 32, 20, 32, 15, 42, 54, 79, 55, 35, 14, 65, 83, 88, 47, 76, 56, 37, 38, 5, 45, 31, 73, 11, 75, 72, 18, 22, 59, 35, 11, 67, 85, 67, 28, 94, 23, 9, 26, 32, 71, 95, 26, 94, 71, 22, 20, 96, 88, 88, 90, 99, 33, 66, 72, 61, 67, 83, 65, 66, 85, 64, 48, 75, 43, 62, 30, 29, 27, 14, 90, 59, 78, 83, 13, 10, 70, 49, 29, 96, 83, 91, 31, 43, 24, 16, 75, 71, 75, 27, 60, 52, 78, 19, 39, 78, 67, 43, 59, 42, 85, 70, 87, 9, 82, 96, 18, 98, 30, 39, 84, 29, 47, 4, 79, 51, 14, 38, 10, 24, 19, 61, 71, 37, 83, 42, 29, 31, 14, 95, 95, 21, 29, 25, 30, 63, 39, 94, 31, 16, 41, 29, 17, 98, 46, 16, 83, 75, 55, 25, 46, 60, 31, 83, 74, 42, 85, 36, 59, 20, 42, 89, 10, 43, 80, 98, 55, 77, 36, 80, 97, 31, 0, 17, 68, 7, 30, 20, 100, 72, 50, 9, 42, 64, 24, 57, 13, 3, 48, 0, 93, 25, 89, 56, 65, 47, 9, 25, 74, 75, 62, 5, 30, 95, 38, 52, 12, 29, 21, 62, 61, 99, 91, 18, 66, 20, 77, 31, 80, 89, 54, 23, 92, 95, 98, 49, 12, 2, 8, 75, 49, 17, 99, 73, 88, 76, 60, 23, 67, 100, 77, 73, 16, 60, 9, 80, 0, 76, 23, 55, 24, 98, 90, 82, 22, 73, 64, 93, 89, 18, 55, 52, 53, 68, 15, 96, 98, 87, 2, 91, 45, 37, 15, 94, 90, 52, 39, 88, 22, 11, 38, 89, 97, 78]
last_save: 70

Gen:134
TrainFitness:0.8164556962025317
TestFitness:0.8269230769230769
MaxGenLen:415
Individual: def p():
  def adf0(index):
    if np.greater(x[index],56264.93853):
      return True
    else:
      return False
  def adf1(index):
    if np.greater(x[index],35368.02574):
      if np.greater(x[index],05381.66045):
        return False
      else:
        return False
    else:
      if np.equal(x[index],58255.57678):
        return True
      else:
        return False
  def adf2(index):
    if np.greater(x[index],66923.85903):
      return False
    else:
      return True
  def adf3(index):
    if np.equal(x[index],35202.52495):
      if np.equal(x[index],38766.78551):
        return False
      else:
        return False
    else:
      if np.greater(x[index],29517.57843):
        return False
      else:
        return True
  def adf4(index):
    if np.equal(x[index],12068.80936):
      if np.less(x[index],35654.85320):
        return False
      else:
        return False
    else:
      if np.greater(x[index],83300.99631):
        return False
      else:
        return False
  def adf5(index):
    if np.equal(x[index],70289.98739):
      if np.less(x[index],79268.80949):
        return False
      else:
        return True
    else:
      if np.greater(x[index],80491.17329):
        return False
      else:
        return True
  def adf6(index):
    if np.equal(x[index],03941.61978):
      return True
    else:
      return True
  def adf7(index):
    if np.less(x[index],01542.56902):
      return False
    else:
      return True
  def adf8(index):
    if np.less(x[index],60710.78700):
      return True
    else:
      return True
  return multiple_operation([adf0(0)*+73.38, adf1(1)*-96.57, adf2(2)*-52.50, adf3(3)*+29.12, adf4(4)*-86.07, adf5(5)*+43.25, adf6(6)*-28.59, adf7(7)*-86.03, adf8(8)*+36.09], 06.35)
result=p(); 0.8164556962025317
IndLenGenome:371
IndGenome:[66, 90, 16, 45, 50, 45, 40, 5, 36, 42, 46, 4, 59, 53, 8, 35, 63, 60, 95, 64, 26, 86, 87, 93, 83, 25, 43, 96, 78, 20, 32, 15, 57, 54, 40, 21, 35, 60, 65, 83, 88, 51, 76, 56, 50, 54, 5, 45, 31, 73, 11, 75, 85, 18, 22, 5, 35, 95, 67, 26, 67, 28, 94, 51, 35, 45, 21, 72, 97, 96, 46, 19, 42, 43, 8, 35, 89, 60, 3, 77, 26, 71, 56, 93, 83, 25, 43, 75, 32, 20, 32, 15, 42, 54, 79, 55, 35, 14, 65, 83, 88, 47, 76, 56, 37, 38, 5, 45, 31, 73, 11, 75, 72, 18, 22, 59, 35, 11, 67, 85, 67, 28, 94, 23, 9, 26, 32, 71, 95, 26, 94, 71, 22, 20, 96, 88, 88, 90, 99, 33, 66, 72, 61, 67, 83, 65, 66, 85, 64, 48, 75, 43, 62, 30, 29, 27, 14, 90, 59, 78, 83, 13, 10, 70, 49, 29, 96, 83, 91, 31, 43, 24, 16, 75, 71, 75, 27, 60, 52, 78, 19, 39, 78, 67, 43, 59, 42, 85, 70, 87, 9, 82, 96, 18, 98, 30, 39, 84, 29, 47, 4, 79, 51, 14, 38, 10, 24, 19, 61, 71, 37, 83, 42, 29, 31, 14, 95, 95, 21, 29, 25, 30, 63, 39, 94, 31, 16, 41, 29, 17, 98, 46, 16, 83, 75, 55, 25, 46, 60, 31, 15, 74, 42, 85, 36, 59, 20, 42, 89, 10, 43, 80, 98, 55, 77, 36, 80, 97, 31, 0, 17, 68, 7, 30, 20, 100, 72, 50, 22, 42, 64, 24, 57, 13, 3, 48, 0, 93, 25, 89, 56, 65, 47, 9, 25, 74, 75, 62, 5, 30, 95, 38, 52, 12, 29, 21, 62, 61, 99, 91, 18, 66, 20, 77, 31, 80, 89, 54, 23, 92, 95, 98, 49, 12, 2, 8, 75, 49, 17, 99, 73, 88, 76, 60, 23, 67, 100, 77, 73, 16, 60, 9, 80, 0, 76, 23, 55, 24, 98, 90, 82, 22, 73, 64, 93, 89, 18, 55, 52, 53, 68, 15, 96, 98, 87, 2, 91, 45, 37, 15, 94, 90, 52, 39, 88, 22, 11, 38, 89, 97, 78]
last_save: 70

Gen:384
last_save: 70
Exit:FalseFalseTrue

Gen:1
TrainFitness:0.8037974683544303
TestFitness:0.8076923076923077
MaxGenLen:400
Individual: def p():
  def adf0(index):
    if np.less(x[index],45328.97648):
      return True
    else:
      return False
  def adf1(index):
    if np.less(x[index],21103.35853):
      return False
    else:
      return False
  def adf2(index):
    if np.less(x[index],30573.04490):
      return True
    else:
      return True
  def adf3(index):
    if np.greater(x[index],54479.24465):
      return False
    else:
      return True
  def adf4(index):
    if np.less(x[index],65253.02284):
      return False
    else:
      return True
  def adf5(index):
    if np.greater(x[index],90304.40117):
      return False
    else:
      return False
  def adf6(index):
    if np.less(x[index],21316.89154):
      return False
    else:
      return False
  def adf7(index):
    if np.less(x[index],03254.76923):
      return True
    else:
      return True
  def adf8(index):
    if np.less(x[index],77602.25769):
      return True
    else:
      return False
  return multiple_operation([adf0(0)*-18.29, adf1(1)*-67.47, adf2(2)*+44.32, adf3(3)*+60.94, adf4(4)*-92.97, adf5(5)*-42.67, adf6(6)*-21.31, adf7(7)*+76.31, adf8(8)*+29.71], 83.36)
result=p(); 0.8037974683544303
IndLenGenome:339
IndGenome:[38, 78, 69, 93, 71, 68, 54, 70, 81, 29, 79, 53, 13, 40, 95, 60, 95, 86, 87, 10, 53, 5, 47, 11, 27, 50, 88, 90, 63, 62, 56, 35, 89, 11, 95, 86, 18, 45, 95, 10, 89, 98, 32, 20, 95, 96, 34, 88, 32, 57, 5, 79, 93, 95, 84, 93, 19, 45, 7, 9, 6, 70, 61, 22, 88, 53, 12, 75, 17, 15, 20, 37, 60, 87, 84, 56, 47, 14, 17, 97, 73, 30, 74, 24, 82, 46, 66, 82, 23, 39, 17, 30, 43, 23, 78, 44, 15, 42, 16, 42, 31, 57, 13, 12, 36, 29, 90, 85, 44, 44, 51, 82, 35, 93, 49, 69, 82, 17, 9, 46, 48, 81, 12, 66, 12, 51, 10, 54, 13, 45, 20, 83, 21, 29, 89, 42, 23, 90, 71, 80, 19, 11, 43, 46, 84, 58, 83, 95, 21, 39, 16, 93, 32, 17, 13, 12, 64, 20, 85, 23, 66, 38, 12, 61, 37, 54, 99, 16, 16, 85, 19, 64, 12, 16, 91, 71, 39, 86, 13, 57, 94, 18, 14, 74, 55, 57, 87, 22, 90, 55, 25, 55, 13, 87, 66, 66, 67, 10, 78, 24, 42, 49, 72, 45, 29, 52, 84, 11, 12, 56, 31, 67, 65, 56, 34, 51, 34, 67, 50, 95, 40, 20, 54, 53, 99, 93, 6, 6, 4, 86, 100, 89, 57, 95, 18, 20, 46, 29, 11, 95, 73, 71, 83, 14, 21, 22, 65, 69, 47, 13, 9, 69, 31, 35, 53, 76, 93, 71, 83, 3, 29, 75, 71, 41, 28, 74, 91, 100, 89, 53, 89, 8, 7, 26, 61, 8, 28, 71, 57, 65, 77, 96, 23, 3, 47, 54, 31, 99, 22, 38, 74, 59, 82, 37, 35, 67, 38, 23, 17, 40, 98, 93, 67, 0, 12, 42, 39, 51, 74, 14, 37, 56, 28, 1, 27, 7, 27, 58, 38, 97, 1, 29, 28, 57, 37, 0, 80, 56, 96, 29, 78, 33, 100, 31, 26, 6, 6, 88, 61]
last_save: 70

Gen:251
last_save: 70
Exit:FalseFalseTrue