Dataset:Meander/new_Full.csv
FS:False
Seed:1235
Size:7

Gen:1
TrainFitness:0.8089171974522293
TestFitness:0.7962962962962963
MaxGenLen:400
Individual: def p():
  def adf0(index):
    if np.equal(x[index],69074.30580):
      if np.greater(x[index],03006.31765):
        return True
      else:
        return True
    else:
      if np.greater(x[index],02299.22765):
        return True
      else:
        return False
  def adf1(index):
    if np.equal(x[index],70034.65570):
      if np.equal(x[index],36110.86153):
        return True
      else:
        return False
    else:
      if np.equal(x[index],05711.23910):
        return True
      else:
        return False
  def adf2(index):
    if np.greater(x[index],12525.18298):
      if np.less(x[index],45155.84565):
        return True
      else:
        return True
    else:
      if np.equal(x[index],51090.88364):
        return False
      else:
        return True
  def adf3(index):
    if np.equal(x[index],16743.08439):
      if np.equal(x[index],24329.70832):
        return True
      else:
        return True
    else:
      if np.less(x[index],82323.44478):
        return True
      else:
        return True
  def adf4(index):
    if np.greater(x[index],34802.88569):
      if np.equal(x[index],57461.14996):
        return True
      else:
        return True
    else:
      if np.equal(x[index],80157.50485):
        return False
      else:
        return True
  def adf5(index):
    if np.equal(x[index],29570.05050):
      if np.equal(x[index],83081.02809):
        return True
      else:
        return True
    else:
      if np.less(x[index],37254.26698):
        return False
      else:
        return False
  def adf6(index):
    if np.less(x[index],80138.90875):
      if np.equal(x[index],03796.08147):
        return True
      else:
        return True
    else:
      if np.equal(x[index],22614.39397):
        return True
      else:
        return False
  def adf7(index):
    if np.greater(x[index],96994.85981):
      if np.greater(x[index],18596.48066):
        return True
      else:
        return True
    else:
      if np.less(x[index],89355.77657):
        return False
      else:
        return True
  def adf8(index):
    if np.greater(x[index],27877.89676):
      if np.greater(x[index],26673.69273):
        return False
      else:
        return False
    else:
      if np.less(x[index],44900.28421):
        return False
      else:
        return True
  return multiple_operation([adf0(0)*+90.03, adf1(1)*-70.72, adf2(2)*-58.39, adf3(3)*-88.41, adf4(4)*+62.33, adf5(5)*-32.09, adf6(6)*+20.56, adf7(7)*+08.77, adf8(8)*-79.49], 13.63)
result=p(); 0.8089171974522293
IndLenGenome:717
IndGenome:[52, 87, 3, 71, 29, 61, 28, 23, 16, 66, 89, 25, 87, 16, 91, 73, 90, 66, 56, 20, 35, 81, 92, 11, 91, 6, 84, 28, 77, 64, 72, 53, 8, 96, 79, 53, 37, 97, 65, 81, 12, 77, 25, 59, 56, 83, 25, 11, 94, 31, 75, 63, 66, 35, 45, 18, 80, 38, 2, 13, 68, 57, 89, 48, 63, 69, 44, 99, 58, 86, 15, 61, 12, 20, 99, 61, 98, 76, 40, 28, 18, 39, 57, 99, 10, 79, 66, 38, 65, 49, 84, 75, 62, 89, 37, 64, 32, 17, 58, 69, 74, 9, 34, 86, 40, 31, 33, 89, 31, 34, 16, 66, 6, 99, 71, 42, 43, 74, 95, 9, 31, 36, 65, 71, 78, 25, 96, 75, 50, 4, 48, 94, 101, 94, 19, 26, 46, 95, 33, 14, 84, 47, 87, 26, 19, 52, 3, 77, 92, 15, 75, 98, 60, 55, 40, 24, 95, 73, 88, 39, 61, 80, 30, 64, 82, 18, 60, 93, 80, 84, 33, 19, 95, 22, 73, 42, 32, 64, 94, 91, 56, 95, 96, 88, 13, 57, 51, 34, 98, 30, 71, 32, 70, 29, 80, 33, 29, 18, 49, 54, 20, 36, 16, 84, 56, 29, 92, 42, 51, 77, 49, 76, 77, 80, 75, 28, 49, 24, 90, 67, 78, 48, 67, 48, 63, 10, 59, 11, 67, 56, 44, 60, 93, 29, 70, 51, 21, 15, 50, 67, 49, 36, 20, 77, 26, 78, 67, 75, 77, 73, 72, 75, 11, 67, 75, 90, 25, 9, 70, 16, 23, 41, 81, 59, 96, 18, 68, 17, 26, 80, 89, 73, 67, 72, 18, 86, 31, 47, 96, 48, 21, 11, 89, 68, 65, 94, 27, 74, 43, 48, 63, 56, 16, 45, 62, 74, 76, 75, 6, 87, 10, 45, 74, 47, 94, 50, 45, 38, 57, 17, 12, 59, 52, 94, 70, 20, 93, 44, 16, 39, 90, 38, 15, 15, 19, 31, 13, 68, 16, 66, 27, 16, 35, 65, 46, 30, 85, 21, 74, 40, 69, 73, 36, 66, 19, 17, 58, 50, 25, 28, 97, 53, 10, 91, 38, 73, 52, 90, 23, 93, 36, 12, 92, 30, 29, 68, 78, 90, 27, 30, 78, 49, 27, 88, 84, 31, 22, 10, 93, 11, 10, 42, 3, 93, 67, 43, 28, 80, 74, 15, 86, 16, 51, 76, 73, 78, 62, 91, 94, 15, 45, 93, 64, 31, 21, 59, 22, 12, 34, 50, 44, 74, 38, 52, 35, 54, 88, 91, 36, 93, 48, 44, 64, 72, 78, 52, 99, 55, 14, 42, 30, 10, 38, 86, 43, 45, 57, 56, 53, 60, 67, 31, 17, 69, 32, 20, 18, 65, 46, 66, 64, 82, 13, 60, 20, 70, 73, 70, 29, 25, 18, 65, 43, 60, 39, 12, 58, 62, 70, 37, 49, 45, 72, 12, 59, 62, 36, 59, 41, 35, 25, 35, 84, 46, 17, 90, 18, 55, 80, 50, 89, 11, 77, 19, 79, 62, 33, 5, 33, 5, 58, 54, 50, 77, 5, 68, 48, 98, 67, 48, 49, 89, 18, 98, 45, 76, 11, 33, 41, 45, 90, 80, 39, 40, 97, 43, 87, 35, 87, 55, 66, 71, 61, 93, 61, 97, 58, 36, 71, 97, 34, 90, 97, 20, 3, 54, 4, 61, 22, 87, 18, 91, 12, 80, 32, 50, 45, 55, 35, 69, 37, 88, 3, 90, 87, 34, 68, 24, 73, 66, 90, 17, 75, 7, 76, 28, 29, 42, 66, 43, 7, 55, 85, 57, 26, 14, 73, 78, 2, 83, 82, 100, 79, 58, 37, 79, 61, 52, 98, 73, 3, 31, 11, 72, 64, 78, 44, 92, 59, 53, 9, 47, 55, 81, 19, 88, 16, 56, 72, 29, 37, 44, 5, 61, 89, 73, 26, 78, 75, 71, 62, 10, 2, 76, 8, 98, 76, 7, 63, 9, 95, 43, 74, 63, 6, 96, 78, 4, 24, 84, 90, 25, 80, 82, 51, 64, 83, 95, 86, 82, 70, 16, 11, 4, 59, 54, 1, 89, 4, 60, 4, 5, 87, 38, 30, 77, 21, 42, 5, 36, 90, 36, 82, 94, 98, 84, 40, 48, 13, 51, 54, 64, 100, 43, 1, 28, 82, 70, 30, 85, 93, 33, 71, 13, 16, 66, 1, 54, 29, 31, 93, 95, 5, 51, 63, 20, 29]
last_save: 71

Gen:251
last_save: 71
Exit:FalseFalseTrue

Gen:1
TrainFitness:0.8089171974522293
TestFitness:0.7962962962962963
MaxGenLen:400
Individual: def p():
  def adf0(index):
    if np.less(x[index],02781.60331):
      if np.greater(x[index],48018.41391):
        return True
      else:
        return True
    else:
      if np.equal(x[index],04954.05122):
        return True
      else:
        return True
  def adf1(index):
    if np.less(x[index],10314.47770):
      if np.less(x[index],33465.79644):
        return True
      else:
        return False
    else:
      if np.equal(x[index],12332.74811):
        return True
      else:
        return False
  def adf2(index):
    if np.greater(x[index],24886.04673):
      if np.greater(x[index],82621.32262):
        return False
      else:
        return False
    else:
      if np.greater(x[index],13467.85605):
        return False
      else:
        return False
  def adf3(index):
    if np.less(x[index],62875.49178):
      if np.equal(x[index],88665.33951):
        return True
      else:
        return False
    else:
      if np.equal(x[index],05616.31229):
        return True
      else:
        return False
  def adf4(index):
    if np.equal(x[index],20539.59735):
      if np.greater(x[index],18244.79578):
        return True
      else:
        return False
    else:
      if np.equal(x[index],52121.52987):
        return True
      else:
        return True
  def adf5(index):
    if np.equal(x[index],48895.01132):
      if np.equal(x[index],25157.58864):
        return True
      else:
        return False
    else:
      if np.greater(x[index],91904.61441):
        return True
      else:
        return True
  def adf6(index):
    if np.less(x[index],75499.69216):
      if np.equal(x[index],70252.07506):
        return True
      else:
        return True
    else:
      if np.less(x[index],48772.32993):
        return True
      else:
        return False
  def adf7(index):
    if np.greater(x[index],35509.23009):
      if np.greater(x[index],24024.94722):
        return False
      else:
        return True
    else:
      if np.equal(x[index],61071.33667):
        return False
      else:
        return True
  def adf8(index):
    if np.less(x[index],71450.17045):
      if np.equal(x[index],86453.15645):
        return True
      else:
        return True
    else:
      if np.less(x[index],37496.44093):
        return True
      else:
        return False
  return multiple_operation([adf0(0)*+55.37, adf1(1)*+99.93, adf2(2)*-51.90, adf3(3)*+01.06, adf4(4)*-43.30, adf5(5)*+46.34, adf6(6)*-46.14, adf7(7)*+16.37, adf8(8)*-64.15], 53.35)
result=p(); 0.8089171974522293
IndLenGenome:717
IndGenome:[6, 11, 72, 19, 69, 93, 11, 91, 33, 67, 1, 8, 90, 24, 76, 24, 54, 60, 38, 57, 56, 44, 94, 93, 92, 36, 95, 35, 50, 73, 21, 26, 25, 76, 17, 67, 23, 56, 34, 73, 75, 61, 89, 97, 95, 40, 60, 75, 72, 33, 60, 39, 32, 6, 8, 6, 30, 96, 55, 89, 89, 67, 45, 68, 77, 76, 82, 74, 55, 69, 91, 89, 61, 47, 91, 3, 62, 4, 18, 43, 82, 80, 58, 101, 98, 93, 59, 42, 67, 59, 92, 14, 53, 77, 91, 66, 34, 70, 49, 48, 57, 82, 4, 77, 95, 51, 75, 4, 13, 83, 75, 80, 96, 34, 40, 95, 51, 79, 70, 50, 83, 51, 18, 74, 92, 86, 31, 63, 66, 55, 89, 92, 55, 22, 96, 33, 86, 94, 33, 80, 25, 14, 33, 74, 38, 13, 94, 43, 79, 90, 27, 20, 4, 62, 53, 64, 91, 13, 35, 32, 37, 98, 63, 74, 19, 26, 28, 19, 86, 77, 20, 78, 55, 84, 51, 60, 58, 90, 60, 20, 86, 101, 97, 33, 86, 13, 81, 35, 85, 46, 90, 18, 44, 19, 81, 46, 77, 64, 34, 65, 77, 14, 86, 35, 34, 74, 36, 74, 32, 99, 44, 86, 9, 44, 62, 32, 52, 78, 71, 20, 99, 98, 76, 23, 67, 92, 97, 39, 31, 48, 81, 99, 72, 62, 99, 93, 26, 43, 14, 31, 77, 11, 93, 38, 64, 45, 74, 76, 32, 78, 24, 91, 58, 32, 35, 92, 10, 54, 85, 57, 67, 86, 30, 51, 29, 48, 67, 96, 49, 56, 71, 42, 68, 57, 35, 26, 15, 45, 72, 55, 53, 95, 4, 19, 96, 32, 72, 47, 37, 98, 96, 84, 26, 42, 18, 94, 10, 21, 77, 97, 93, 49, 41, 33, 67, 70, 72, 91, 16, 71, 32, 60, 12, 18, 19, 61, 46, 65, 11, 76, 83, 19, 71, 44, 33, 34, 78, 11, 88, 32, 86, 95, 10, 27, 84, 48, 53, 35, 80, 23, 85, 81, 43, 61, 46, 91, 88, 79, 84, 35, 44, 34, 80, 59, 43, 29, 25, 41, 23, 58, 25, 13, 88, 42, 72, 54, 84, 91, 93, 47, 81, 57, 67, 72, 17, 31, 40, 80, 39, 64, 23, 3, 25, 88, 22, 49, 82, 66, 47, 93, 27, 83, 14, 36, 95, 95, 82, 80, 86, 74, 25, 73, 61, 57, 91, 31, 76, 42, 58, 20, 89, 69, 51, 31, 14, 34, 41, 81, 77, 20, 28, 54, 51, 27, 71, 61, 5, 30, 34, 65, 22, 44, 96, 66, 42, 24, 31, 84, 81, 39, 48, 77, 83, 79, 52, 34, 50, 15, 37, 54, 72, 70, 62, 91, 64, 62, 90, 22, 63, 95, 64, 70, 87, 37, 39, 86, 19, 10, 27, 26, 83, 75, 99, 24, 84, 53, 13, 54, 57, 50, 73, 65, 0, 31, 59, 59, 75, 19, 73, 92, 74, 89, 10, 63, 38, 84, 39, 74, 43, 48, 19, 32, 70, 48, 40, 32, 99, 55, 28, 2, 31, 73, 96, 13, 18, 0, 20, 60, 76, 31, 4, 66, 35, 85, 87, 60, 62, 42, 27, 33, 34, 85, 29, 34, 80, 40, 88, 81, 87, 99, 21, 34, 33, 63, 88, 13, 5, 40, 7, 98, 94, 37, 19, 53, 22, 61, 95, 85, 94, 1, 1, 15, 64, 52, 93, 68, 24, 52, 35, 18, 41, 46, 27, 74, 53, 64, 68, 93, 32, 11, 100, 36, 20, 61, 42, 58, 18, 81, 83, 1, 24, 1, 68, 87, 86, 31, 18, 18, 63, 62, 35, 85, 55, 20, 56, 86, 99, 24, 69, 9, 91, 73, 69, 89, 23, 64, 11, 75, 81, 27, 65, 17, 66, 64, 99, 21, 81, 36, 10, 86, 99, 46, 100, 79, 19, 91, 43, 72, 4, 55, 83, 58, 88, 44, 52, 19, 25, 54, 46, 75, 52, 69, 54, 43, 12, 46, 49, 49, 50, 75, 81, 13, 43, 41, 17, 1, 31, 85, 9, 17, 68, 98, 74, 14, 81, 79, 45, 6, 6, 55, 4, 65, 16, 47, 95, 11, 74, 23, 29, 22, 58, 15, 74, 90, 79, 93, 4, 74, 34, 4, 41, 33, 11, 45, 31, 24, 24, 49, 51, 55, 96, 9, 24, 33, 44, 39, 37]
last_save: 71

Gen:130
TrainFitness:0.8121019108280255
TestFitness:0.7962962962962963
MaxGenLen:430
Individual: def p():
  def adf0(index):
    if np.greater(x[index],75408.55561):
      return False
    else:
      return False
  def adf1(index):
    if np.greater(x[index],10563.55710):
      if np.greater(x[index],91400.03339):
        return True
      else:
        return False
    else:
      if np.greater(x[index],40536.16696):
        return False
      else:
        return True
  def adf2(index):
    if np.equal(x[index],88997.91059):
      return False
    else:
      return False
  def adf3(index):
    if np.less(x[index],21553.77503):
      if np.greater(x[index],87614.79393):
        return True
      else:
        return False
    else:
      if np.greater(x[index],10351.58403):
        return False
      else:
        return True
  def adf4(index):
    if np.less(x[index],11701.69317):
      return True
    else:
      return True
  def adf5(index):
    if np.equal(x[index],60368.14277):
      return True
    else:
      return True
  def adf6(index):
    if np.equal(x[index],79823.15028):
      return True
    else:
      return False
  def adf7(index):
    if np.equal(x[index],31840.78665):
      if np.equal(x[index],68739.92217):
        if np.greater(x[index],06828.15886):
          return False
        else:
          return False
      else:
        if np.greater(x[index],44485.44099):
          return False
        else:
          return True
    else:
      if np.equal(x[index],60459.06221):
        if np.equal(x[index],09606.19836):
          return True
        else:
          return True
      else:
        if np.greater(x[index],48614.23185):
          return False
        else:
          return True
  def adf8(index):
    if np.less(x[index],29386.83878):
      if np.equal(x[index],22974.02222):
        return False
      else:
        return False
    else:
      if np.less(x[index],27730.57712):
        return True
      else:
        return False
  return multiple_operation([adf0(0)*+18.51, adf1(1)*+48.99, adf2(2)*+33.67, adf3(3)*+18.01, adf4(4)*+62.31, adf5(5)*-50.15, adf6(6)*-10.42, adf7(7)*+31.02, adf8(8)*-29.17], 57.53)
result=p(); 0.8121019108280255
IndLenGenome:427
IndGenome:[11, 3, 11, 75, 1, 30, 39, 57, 35, 54, 50, 28, 35, 75, 45, 56, 11, 63, 13, 77, 6, 25, 15, 58, 81, 40, 45, 46, 53, 45, 95, 47, 41, 10, 92, 63, 0, 29, 91, 84, 80, 90, 10, 53, 73, 83, 39, 70, 95, 61, 66, 7, 94, 70, 45, 53, 26, 21, 6, 36, 29, 26, 19, 30, 35, 90, 68, 71, 37, 58, 68, 19, 69, 17, 49, 21, 10, 15, 59, 11, 79, 51, 61, 21, 88, 10, 12, 81, 15, 25, 13, 37, 47, 35, 40, 83, 21, 21, 76, 48, 87, 66, 21, 64, 57, 39, 13, 69, 33, 60, 37, 83, 99, 72, 31, 70, 23, 75, 21, 85, 8, 34, 30, 23, 11, 98, 74, 90, 59, 58, 10, 51, 11, 7, 20, 91, 96, 89, 73, 61, 97, 2, 64, 5, 50, 72, 80, 54, 76, 80, 73, 6, 18, 81, 54, 82, 47, 17, 50, 94, 96, 30, 34, 35, 28, 57, 69, 38, 82, 3, 41, 55, 90, 52, 78, 72, 63, 53, 12, 87, 92, 90, 13, 21, 18, 14, 60, 37, 18, 66, 26, 25, 72, 26, 86, 36, 68, 7, 33, 19, 49, 32, 32, 51, 97, 63, 99, 74, 70, 26, 48, 22, 78, 81, 35, 28, 58, 56, 45, 17, 41, 99, 60, 94, 54, 84, 48, 45, 84, 94, 50, 29, 9, 53, 18, 63, 53, 69, 96, 10, 24, 65, 59, 50, 16, 42, 32, 51, 80, 11, 86, 70, 79, 26, 30, 36, 11, 99, 28, 33, 46, 52, 84, 52, 3, 15, 14, 78, 26, 81, 64, 22, 33, 91, 18, 95, 39, 50, 95, 76, 50, 55, 23, 72, 69, 83, 98, 86, 28, 53, 18, 87, 88, 77, 68, 72, 92, 62, 59, 77, 84, 50, 22, 92, 32, 92, 73, 79, 99, 79, 87, 42, 87, 97, 33, 10, 55, 87, 87, 21, 2, 30, 81, 52, 42, 57, 88, 64, 31, 18, 45, 91, 75, 58, 72, 54, 8, 99, 49, 49, 4, 69, 43, 93, 46, 97, 37, 56, 67, 31, 98, 10, 31, 92, 32, 79, 86, 12, 93, 31, 64, 65, 95, 85, 80, 21, 65, 26, 43, 4, 61, 30, 34, 82, 37, 62, 28, 33, 61, 90, 62, 93, 93, 38, 82, 99, 61, 97, 6, 85, 7, 25, 23, 4, 46, 95, 67, 90, 41, 53, 74, 66, 56, 31, 45, 48, 6, 41, 77, 92, 70, 15, 75, 74, 20, 87, 52, 30, 22, 4, 67, 72, 61, 58, 17, 84, 19]
last_save: 71

Gen:380
last_save: 71
Exit:FalseFalseTrue

Gen:1
TrainFitness:0.8069620253164557
TestFitness:0.8076923076923077
MaxGenLen:400
Individual: def p():
  def adf0(index):
    if np.less(x[index],10872.06110):
      return False
    else:
      return False
  def adf1(index):
    if np.greater(x[index],77153.90966):
      return False
    else:
      return False
  def adf2(index):
    if np.less(x[index],76651.16430):
      return False
    else:
      return False
  def adf3(index):
    if np.equal(x[index],29725.14665):
      return False
    else:
      return False
  def adf4(index):
    if np.greater(x[index],39445.45843):
      return False
    else:
      return True
  def adf5(index):
    if np.greater(x[index],24452.89603):
      return False
    else:
      return True
  def adf6(index):
    if np.less(x[index],09643.40940):
      return True
    else:
      return True
  def adf7(index):
    if np.less(x[index],02380.63077):
      return True
    else:
      return False
  def adf8(index):
    if np.less(x[index],13443.92828):
      return True
    else:
      return True
  return multiple_operation([adf0(0)*-09.22, adf1(1)*+52.24, adf2(2)*-36.32, adf3(3)*+74.44, adf4(4)*-84.86, adf5(5)*+88.20, adf6(6)*-29.14, adf7(7)*+34.82, adf8(8)*+54.47], 34.59)
result=p(); 0.8069620253164557
IndLenGenome:339
IndGenome:[18, 40, 8, 17, 48, 36, 83, 86, 81, 95, 54, 35, 45, 40, 40, 70, 75, 60, 25, 65, 13, 48, 7, 62, 86, 78, 31, 98, 70, 34, 29, 71, 44, 16, 44, 12, 30, 68, 11, 25, 18, 28, 33, 36, 28, 10, 35, 88, 75, 61, 47, 96, 75, 37, 21, 93, 74, 61, 6, 56, 79, 68, 2, 86, 47, 4, 95, 98, 33, 82, 68, 67, 11, 85, 32, 54, 47, 73, 99, 33, 98, 60, 49, 37, 32, 51, 39, 32, 20, 42, 27, 54, 66, 52, 73, 66, 85, 70, 90, 27, 38, 18, 55, 94, 79, 65, 79, 94, 64, 51, 74, 84, 90, 26, 78, 43, 93, 79, 51, 83, 12, 46, 62, 34, 96, 88, 54, 47, 60, 35, 73, 40, 90, 54, 80, 44, 80, 19, 43, 69, 24, 43, 48, 31, 2, 22, 24, 36, 20, 24, 88, 10, 59, 51, 95, 53, 54, 76, 72, 83, 33, 52, 69, 48, 93, 13, 52, 49, 94, 74, 74, 74, 43, 70, 67, 94, 94, 82, 36, 29, 74, 83, 93, 15, 13, 92, 54, 62, 48, 79, 19, 25, 16, 67, 65, 81, 66, 15, 17, 45, 57, 26, 95, 84, 34, 91, 22, 49, 53, 20, 72, 67, 96, 78, 46, 10, 20, 42, 91, 21, 21, 17, 60, 56, 16, 24, 54, 35, 36, 4, 49, 66, 30, 58, 1, 22, 11, 33, 87, 58, 77, 58, 10, 1, 42, 47, 7, 6, 1, 28, 28, 58, 35, 24, 19, 43, 57, 40, 28, 90, 82, 54, 32, 14, 0, 80, 36, 18, 52, 97, 10, 37, 45, 87, 30, 48, 24, 27, 52, 57, 100, 74, 23, 87, 68, 100, 67, 47, 58, 3, 61, 73, 33, 59, 70, 82, 63, 100, 39, 97, 94, 48, 37, 74, 90, 70, 47, 34, 43, 95, 2, 66, 100, 57, 61, 68, 84, 46, 83, 52, 74, 19, 39, 67, 51, 36, 58, 66, 30, 10, 35, 34, 7, 61, 46, 67, 69, 2, 90]
last_save: 71

Gen:251
last_save: 71
Exit:FalseFalseTrue

Gen:1
TrainFitness:0.8132911392405063
TestFitness:0.8076923076923077
MaxGenLen:400
Individual: def p():
  def adf0(index):
    if np.less(x[index],65207.67343):
      if np.less(x[index],27472.04135):
        return True
      else:
        return False
    else:
      if np.greater(x[index],56559.97143):
        return False
      else:
        return True
  def adf1(index):
    if np.less(x[index],27670.51276):
      if np.less(x[index],33677.69790):
        return False
      else:
        return True
    else:
      if np.less(x[index],05643.73190):
        return True
      else:
        return True
  def adf2(index):
    if np.greater(x[index],01436.41246):
      if np.equal(x[index],76118.90474):
        return True
      else:
        return False
    else:
      if np.equal(x[index],49035.10650):
        return False
      else:
        return True
  def adf3(index):
    if np.less(x[index],45546.64755):
      if np.greater(x[index],29516.65556):
        return True
      else:
        return False
    else:
      if np.equal(x[index],61355.47894):
        return False
      else:
        return True
  def adf4(index):
    if np.greater(x[index],63408.19873):
      if np.less(x[index],88121.85328):
        return True
      else:
        return True
    else:
      if np.equal(x[index],04208.51883):
        return False
      else:
        return False
  def adf5(index):
    if np.equal(x[index],33577.91201):
      if np.less(x[index],06091.07151):
        return True
      else:
        return False
    else:
      if np.equal(x[index],15636.02246):
        return True
      else:
        return False
  def adf6(index):
    if np.greater(x[index],01769.27670):
      if np.less(x[index],82448.23696):
        return True
      else:
        return False
    else:
      if np.less(x[index],43624.22381):
        return False
      else:
        return True
  def adf7(index):
    if np.equal(x[index],44878.02829):
      if np.less(x[index],54350.34517):
        return False
      else:
        return False
    else:
      if np.greater(x[index],02130.82500):
        return False
      else:
        return True
  def adf8(index):
    if np.less(x[index],52394.49317):
      if np.greater(x[index],74608.74035):
        return False
      else:
        return True
    else:
      if np.less(x[index],96560.69538):
        return False
      else:
        return True
  return multiple_operation([adf0(0)*+59.21, adf1(1)*+17.53, adf2(2)*+93.79, adf3(3)*+59.45, adf4(4)*+03.08, adf5(5)*-97.45, adf6(6)*-95.38, adf7(7)*+99.00, adf8(8)*-10.95], 71.46)
result=p(); 0.8132911392405063
IndLenGenome:717
IndGenome:[91, 52, 14, 49, 98, 44, 35, 20, 17, 82, 41, 46, 3, 86, 16, 97, 96, 41, 84, 56, 29, 67, 66, 15, 28, 75, 46, 65, 2, 86, 18, 74, 20, 84, 51, 97, 10, 93, 55, 71, 46, 64, 69, 47, 21, 98, 89, 32, 81, 89, 27, 96, 20, 31, 41, 69, 93, 8, 63, 37, 35, 58, 59, 99, 68, 76, 72, 77, 87, 25, 62, 16, 43, 50, 73, 86, 47, 63, 97, 31, 10, 95, 53, 57, 46, 41, 43, 34, 21, 17, 60, 12, 33, 24, 88, 93, 91, 54, 41, 10, 57, 94, 54, 97, 60, 72, 71, 14, 61, 83, 98, 30, 52, 55, 10, 19, 54, 91, 30, 44, 30, 21, 76, 77, 43, 93, 85, 49, 97, 95, 61, 14, 40, 81, 90, 101, 49, 94, 70, 52, 16, 43, 19, 50, 88, 47, 74, 30, 60, 50, 29, 30, 55, 13, 96, 79, 27, 63, 60, 18, 92, 76, 45, 58, 96, 55, 33, 97, 85, 12, 86, 44, 65, 51, 66, 43, 65, 25, 93, 28, 15, 99, 35, 32, 60, 101, 10, 55, 25, 15, 99, 85, 30, 65, 59, 47, 2, 44, 86, 10, 88, 32, 97, 86, 25, 82, 91, 77, 92, 94, 13, 92, 14, 47, 84, 24, 47, 45, 47, 84, 42, 55, 67, 92, 11, 54, 51, 54, 31, 11, 26, 28, 49, 43, 86, 10, 56, 68, 28, 27, 18, 87, 87, 56, 20, 83, 47, 46, 33, 58, 70, 79, 88, 65, 65, 49, 72, 24, 37, 75, 54, 10, 34, 92, 19, 38, 88, 27, 73, 41, 51, 72, 89, 67, 91, 37, 65, 26, 77, 33, 71, 11, 84, 50, 48, 94, 96, 12, 31, 66, 30, 3, 71, 32, 53, 98, 26, 16, 26, 20, 46, 39, 59, 17, 95, 86, 81, 91, 76, 21, 79, 81, 91, 90, 11, 35, 86, 22, 95, 62, 46, 77, 59, 95, 13, 58, 13, 11, 89, 73, 43, 17, 72, 59, 93, 19, 58, 69, 67, 45, 55, 85, 93, 10, 89, 53, 92, 99, 34, 98, 65, 60, 13, 23, 95, 22, 88, 97, 69, 86, 93, 97, 55, 30, 41, 51, 31, 96, 86, 95, 73, 7, 46, 26, 55, 84, 74, 37, 57, 12, 10, 46, 52, 20, 29, 75, 84, 86, 52, 24, 69, 36, 32, 70, 37, 16, 96, 60, 50, 73, 67, 28, 85, 34, 84, 82, 26, 29, 89, 40, 76, 33, 90, 99, 94, 30, 48, 11, 18, 82, 96, 82, 85, 78, 69, 47, 36, 43, 32, 21, 24, 95, 85, 78, 67, 54, 65, 84, 29, 55, 47, 85, 24, 74, 39, 62, 48, 24, 86, 60, 38, 76, 88, 60, 43, 65, 14, 38, 10, 88, 30, 35, 95, 83, 95, 43, 50, 23, 20, 30, 85, 61, 46, 52, 70, 82, 72, 28, 86, 52, 83, 83, 29, 17, 5, 68, 99, 28, 87, 30, 91, 63, 78, 75, 74, 20, 32, 15, 13, 57, 8, 77, 67, 3, 2, 56, 40, 19, 36, 97, 54, 24, 68, 84, 90, 14, 95, 23, 84, 53, 49, 85, 25, 88, 19, 85, 86, 31, 21, 42, 86, 20, 87, 63, 9, 48, 89, 23, 5, 67, 19, 60, 88, 73, 93, 60, 70, 40, 13, 42, 10, 99, 71, 28, 42, 58, 2, 50, 39, 14, 62, 81, 54, 48, 45, 28, 48, 37, 25, 26, 85, 5, 44, 35, 30, 59, 16, 61, 55, 91, 12, 68, 40, 16, 57, 95, 8, 14, 31, 84, 92, 29, 57, 54, 33, 64, 25, 82, 36, 37, 26, 6, 44, 41, 24, 40, 88, 52, 77, 58, 49, 86, 14, 53, 5, 65, 92, 83, 93, 24, 34, 21, 67, 34, 34, 14, 9, 80, 86, 9, 74, 37, 49, 36, 84, 28, 74, 85, 96, 35, 7, 41, 74, 43, 90, 87, 83, 28, 21, 64, 67, 25, 43, 82, 41, 84, 12, 49, 16, 38, 33, 51, 96, 89, 8, 12, 53, 52, 4, 15, 35, 74, 65, 86, 89, 60, 69, 89, 47, 71, 48, 82, 66, 41, 5, 13, 36, 61, 59, 83, 13, 85, 24, 49, 74, 96, 41, 78, 7, 28, 13, 45, 87, 1, 92, 23, 21, 85, 33, 78, 88, 57, 22, 54, 6, 18, 16]
last_save: 71

Gen:251
last_save: 71
Exit:FalseFalseTrue

Gen:1
TrainFitness:0.8037974683544303
TestFitness:0.8076923076923077
MaxGenLen:400
Individual: def p():
  def adf0(index):
    if np.less(x[index],75772.75878):
      return True
    else:
      return True
  def adf1(index):
    if np.equal(x[index],20116.27520):
      return False
    else:
      return False
  def adf2(index):
    if np.less(x[index],14051.49910):
      return True
    else:
      return False
  def adf3(index):
    if np.greater(x[index],18552.34762):
      return False
    else:
      return False
  def adf4(index):
    if np.equal(x[index],50484.39542):
      return False
    else:
      return True
  def adf5(index):
    if np.greater(x[index],72488.03690):
      return False
    else:
      return False
  def adf6(index):
    if np.less(x[index],13738.50257):
      return True
    else:
      return True
  def adf7(index):
    if np.less(x[index],24243.42340):
      return False
    else:
      return True
  def adf8(index):
    if np.greater(x[index],22299.47143):
      return True
    else:
      return False
  return multiple_operation([adf0(0)*+56.44, adf1(1)*-06.85, adf2(2)*+08.42, adf3(3)*-03.19, adf4(4)*+89.55, adf5(5)*+65.88, adf6(6)*+23.41, adf7(7)*-80.47, adf8(8)*+59.15], 44.90)
result=p(); 0.8037974683544303
IndLenGenome:339
IndGenome:[64, 14, 55, 38, 91, 69, 11, 86, 37, 24, 38, 85, 80, 44, 65, 48, 57, 30, 24, 26, 60, 97, 31, 38, 19, 7, 19, 75, 75, 30, 37, 24, 60, 14, 89, 48, 88, 37, 25, 13, 83, 30, 22, 74, 10, 11, 47, 31, 64, 36, 71, 74, 70, 93, 15, 92, 18, 55, 32, 67, 49, 71, 92, 48, 55, 53, 81, 59, 54, 32, 72, 60, 20, 73, 87, 27, 38, 55, 98, 29, 42, 86, 63, 87, 44, 52, 41, 25, 50, 59, 70, 36, 47, 56, 71, 21, 5, 77, 25, 40, 1, 63, 62, 81, 67, 58, 96, 58, 52, 53, 40, 79, 48, 22, 67, 59, 30, 20, 45, 13, 61, 34, 91, 32, 98, 76, 44, 92, 97, 98, 34, 3, 35, 84, 25, 53, 40, 98, 25, 15, 94, 47, 58, 32, 46, 58, 60, 49, 75, 35, 44, 34, 30, 70, 56, 58, 34, 84, 20, 14, 76, 84, 69, 61, 12, 29, 78, 39, 17, 73, 34, 68, 85, 14, 61, 75, 51, 84, 75, 97, 20, 88, 73, 44, 72, 77, 17, 61, 52, 12, 47, 35, 45, 40, 25, 24, 31, 35, 48, 14, 79, 59, 12, 82, 44, 24, 73, 47, 73, 15, 34, 99, 34, 24, 67, 58, 11, 69, 72, 96, 45, 98, 46, 53, 52, 72, 98, 90, 79, 53, 93, 36, 41, 98, 83, 3, 84, 34, 50, 87, 45, 75, 40, 83, 27, 75, 91, 74, 63, 17, 61, 58, 38, 10, 85, 3, 38, 6, 51, 11, 97, 27, 90, 73, 39, 57, 33, 65, 59, 63, 45, 92, 72, 2, 78, 85, 17, 30, 71, 45, 9, 36, 67, 9, 68, 51, 47, 53, 93, 86, 51, 45, 87, 57, 71, 89, 95, 99, 91, 26, 95, 76, 23, 54, 53, 20, 20, 72, 83, 94, 99, 38, 15, 21, 50, 92, 1, 0, 49, 0, 41, 33, 95, 97, 98, 67, 38, 86, 42, 44, 74, 47, 52, 28, 16, 77, 34, 72, 24]
last_save: 71

Gen:251
last_save: 71
Exit:FalseFalseTrue

Gen:1
TrainFitness:0.8037974683544303
TestFitness:0.8076923076923077
MaxGenLen:400
Individual: def p():
  def adf0(index):
    if np.equal(x[index],20322.94609):
      return True
    else:
      return True
  def adf1(index):
    if np.less(x[index],40235.18266):
      return False
    else:
      return True
  def adf2(index):
    if np.equal(x[index],63542.54254):
      return False
    else:
      return True
  def adf3(index):
    if np.equal(x[index],44084.60530):
      return False
    else:
      return False
  def adf4(index):
    if np.greater(x[index],17382.90666):
      return False
    else:
      return True
  def adf5(index):
    if np.greater(x[index],05377.77783):
      return False
    else:
      return False
  def adf6(index):
    if np.equal(x[index],71084.32060):
      return True
    else:
      return False
  def adf7(index):
    if np.greater(x[index],45719.95666):
      return True
    else:
      return True
  def adf8(index):
    if np.greater(x[index],68312.07640):
      return True
    else:
      return False
  return multiple_operation([adf0(0)*+81.26, adf1(1)*-03.65, adf2(2)*+92.29, adf3(3)*+00.06, adf4(4)*+03.58, adf5(5)*-94.66, adf6(6)*-86.64, adf7(7)*-80.74, adf8(8)*-33.95], 24.14)
result=p(); 0.8037974683544303
IndLenGenome:339
IndGenome:[25, 20, 88, 43, 83, 24, 70, 29, 85, 38, 80, 40, 40, 85, 53, 20, 26, 3, 81, 67, 41, 92, 16, 80, 34, 26, 84, 39, 60, 84, 47, 60, 44, 42, 71, 24, 35, 67, 39, 16, 10, 99, 79, 65, 61, 50, 90, 31, 46, 32, 17, 52, 39, 90, 4, 60, 93, 85, 92, 23, 41, 75, 50, 65, 89, 67, 96, 28, 73, 43, 19, 36, 66, 23, 26, 14, 66, 12, 83, 76, 43, 78, 60, 94, 74, 41, 85, 20, 32, 51, 93, 10, 75, 84, 71, 27, 69, 60, 16, 61, 86, 50, 64, 13, 16, 12, 70, 16, 61, 98, 27, 83, 97, 16, 82, 30, 53, 22, 84, 74, 52, 78, 22, 46, 55, 79, 8, 43, 55, 60, 34, 66, 14, 30, 32, 19, 76, 33, 2, 49, 90, 36, 40, 74, 11, 65, 35, 26, 16, 32, 69, 46, 88, 89, 56, 65, 44, 86, 68, 94, 79, 83, 66, 66, 96, 73, 80, 52, 53, 64, 61, 20, 98, 88, 55, 42, 72, 87, 15, 56, 35, 22, 4, 24, 44, 57, 33, 95, 65, 10, 38, 90, 90, 10, 20, 47, 60, 64, 81, 14, 30, 76, 85, 58, 17, 30, 48, 43, 34, 50, 66, 95, 77, 77, 27, 54, 10, 82, 73, 18, 75, 93, 97, 40, 67, 63, 53, 15, 86, 48, 9, 5, 9, 0, 55, 20, 82, 24, 49, 78, 15, 22, 50, 10, 27, 15, 29, 13, 30, 35, 38, 91, 17, 27, 37, 95, 53, 83, 65, 83, 22, 51, 29, 76, 2, 45, 25, 92, 87, 88, 89, 84, 78, 51, 32, 77, 68, 80, 12, 4, 36, 60, 84, 99, 44, 84, 84, 69, 23, 72, 75, 35, 83, 99, 69, 63, 16, 59, 35, 44, 93, 13, 98, 82, 77, 67, 76, 28, 58, 86, 38, 16, 20, 88, 56, 84, 68, 8, 34, 92, 91, 55, 100, 24, 9, 48, 2, 36, 20, 40, 35, 28, 51, 79, 30, 17, 50, 16, 88]
last_save: 71

Gen:87
TrainFitness:0.8069620253164557
TestFitness:0.8269230769230769
MaxGenLen:415
Individual: def p():
  def adf0(index):
    if np.less(x[index],83086.20720):
      return False
    else:
      return True
  def adf1(index):
    if np.equal(x[index],57005.80577):
      return True
    else:
      return True
  def adf2(index):
    if np.equal(x[index],26784.12561):
      return True
    else:
      return False
  def adf3(index):
    if np.equal(x[index],09521.10760):
      return False
    else:
      return False
  def adf4(index):
    if np.equal(x[index],16400.53413):
      if np.equal(x[index],79008.40954):
        return True
      else:
        return False
    else:
      if np.less(x[index],01126.39513):
        return True
      else:
        return True
  def adf5(index):
    if np.less(x[index],35775.08611):
      return False
    else:
      return True
  def adf6(index):
    if np.greater(x[index],55398.75443):
      return False
    else:
      return False
  def adf7(index):
    if np.less(x[index],02109.21553):
      if np.greater(x[index],54439.83674):
        return False
      else:
        return False
    else:
      if np.less(x[index],66893.71105):
        return True
      else:
        return True
  def adf8(index):
    if np.equal(x[index],88371.20776):
      if np.equal(x[index],23833.18208):
        if np.greater(x[index],53944.05977):
          return True
        else:
          return True
      else:
        if np.equal(x[index],34756.80858):
          return False
        else:
          return False
    else:
      if np.less(x[index],95059.20725):
        if np.greater(x[index],97017.95669):
          return True
        else:
          return True
      else:
        if np.less(x[index],79828.17882):
          return False
        else:
          return True
  return multiple_operation([adf0(0)*+28.47, adf1(1)*+46.65, adf2(2)*+78.51, adf3(3)*-81.61, adf4(4)*+56.04, adf5(5)*+83.36, adf6(6)*+01.20, adf7(7)*-92.41, adf8(8)*+28.07], 93.70)
result=p(); 0.8069620253164557
IndLenGenome:414
IndGenome:[7, 6, 93, 55, 96, 4, 45, 98, 93, 40, 78, 6, 22, 30, 37, 52, 10, 39, 44, 23, 60, 11, 89, 77, 55, 87, 70, 10, 15, 48, 60, 85, 37, 67, 40, 36, 18, 100, 100, 47, 66, 52, 86, 97, 58, 14, 51, 72, 55, 66, 71, 76, 87, 69, 80, 90, 47, 54, 40, 29, 5, 12, 41, 91, 20, 97, 76, 70, 61, 21, 92, 66, 63, 29, 5, 51, 86, 84, 50, 50, 5, 93, 34, 31, 23, 66, 71, 76, 87, 69, 80, 90, 38, 54, 40, 29, 5, 14, 96, 91, 20, 97, 76, 70, 61, 21, 92, 66, 63, 29, 5, 51, 93, 84, 50, 50, 30, 93, 34, 31, 23, 75, 67, 17, 85, 70, 78, 36, 71, 61, 93, 52, 71, 90, 89, 42, 41, 75, 55, 93, 59, 68, 17, 85, 24, 14, 93, 61, 69, 53, 61, 93, 52, 85, 90, 52, 71, 90, 89, 42, 41, 75, 55, 93, 59, 60, 17, 85, 24, 14, 93, 79, 68, 53, 96, 27, 44, 25, 47, 21, 61, 66, 86, 96, 18, 79, 93, 97, 31, 91, 80, 45, 18, 76, 63, 52, 66, 62, 27, 58, 58, 93, 97, 81, 32, 10, 97, 67, 66, 40, 80, 79, 32, 93, 8, 23, 43, 31, 98, 42, 50, 28, 30, 96, 24, 35, 53, 89, 54, 34, 90, 35, 39, 97, 77, 80, 10, 55, 8, 73, 33, 54, 27, 15, 86, 98, 70, 88, 25, 38, 63, 83, 81, 16, 89, 39, 45, 10, 45, 99, 72, 40, 77, 22, 25, 43, 12, 5, 99, 57, 90, 21, 67, 39, 85, 16, 26, 19, 46, 32, 93, 79, 60, 77, 19, 48, 2, 38, 51, 67, 8, 78, 42, 31, 90, 68, 0, 7, 80, 61, 92, 58, 24, 37, 30, 8, 49, 4, 76, 66, 45, 87, 94, 9, 67, 68, 35, 51, 54, 33, 50, 18, 21, 76, 31, 23, 26, 95, 95, 86, 50, 84, 50, 10, 44, 38, 33, 33, 36, 87, 24, 77, 90, 61, 82, 90, 54, 97, 61, 29, 42, 54, 21, 64, 8, 32, 22, 78, 20, 57, 49, 99, 3, 37, 30, 75, 92, 41, 70, 34, 26, 85, 89, 89, 80, 60, 35, 7, 36, 91, 77, 92, 55, 70, 34, 2, 85, 50, 89, 80, 60, 11, 7, 36, 91, 77, 27, 82, 3, 65, 3, 29, 88, 18, 71, 8, 98, 82, 47, 100, 26, 85, 50, 100]
last_save: 71

Gen:94
TrainFitness:0.810126582278481
TestFitness:0.8269230769230769
MaxGenLen:415
Individual: def p():
  def adf0(index):
    if np.less(x[index],83086.20720):
      return False
    else:
      return True
  def adf1(index):
    if np.equal(x[index],57005.80577):
      return True
    else:
      return True
  def adf2(index):
    if np.equal(x[index],26784.12561):
      return True
    else:
      return False
  def adf3(index):
    if np.equal(x[index],09521.10760):
      return False
    else:
      return False
  def adf4(index):
    if np.equal(x[index],16400.53413):
      if np.equal(x[index],79008.40954):
        return True
      else:
        return False
    else:
      if np.less(x[index],01126.39513):
        return True
      else:
        return True
  def adf5(index):
    if np.less(x[index],35775.08611):
      return False
    else:
      return True
  def adf6(index):
    if np.greater(x[index],55398.75443):
      return False
    else:
      return False
  def adf7(index):
    if np.less(x[index],02009.22553):
      if np.greater(x[index],54439.83674):
        return False
      else:
        return False
    else:
      if np.less(x[index],66893.71105):
        return True
      else:
        return True
  def adf8(index):
    if np.equal(x[index],88371.20776):
      if np.equal(x[index],23833.18208):
        if np.greater(x[index],53944.05973):
          return True
        else:
          return True
      else:
        if np.equal(x[index],34756.80858):
          return False
        else:
          return False
    else:
      if np.less(x[index],95059.90725):
        if np.greater(x[index],99017.95669):
          return True
        else:
          return True
      else:
        if np.less(x[index],79828.17882):
          return False
        else:
          return True
  return multiple_operation([adf0(0)*+28.47, adf1(1)*+46.65, adf2(2)*+78.51, adf3(3)*-81.61, adf4(4)*+56.04, adf5(5)*+83.36, adf6(6)*+01.20, adf7(7)*-92.41, adf8(8)*+28.07], 93.70)
result=p(); 0.810126582278481
IndLenGenome:414
IndGenome:[7, 6, 93, 55, 96, 4, 45, 98, 93, 40, 78, 6, 22, 30, 37, 52, 10, 39, 44, 23, 60, 11, 89, 77, 55, 87, 70, 10, 15, 48, 60, 85, 37, 67, 40, 36, 18, 100, 100, 47, 66, 52, 86, 97, 58, 14, 51, 72, 55, 66, 71, 76, 87, 69, 80, 90, 47, 54, 40, 29, 5, 12, 41, 91, 20, 97, 76, 70, 61, 21, 92, 66, 63, 29, 5, 51, 86, 84, 50, 50, 5, 93, 34, 31, 23, 66, 71, 76, 87, 69, 80, 90, 38, 54, 40, 29, 5, 14, 96, 91, 20, 97, 76, 70, 61, 21, 92, 66, 63, 29, 5, 51, 93, 84, 50, 50, 30, 93, 34, 31, 23, 75, 67, 17, 85, 70, 78, 36, 71, 61, 93, 52, 11, 90, 89, 42, 41, 75, 55, 93, 59, 68, 17, 85, 24, 14, 93, 61, 69, 53, 61, 93, 52, 85, 90, 52, 20, 90, 89, 42, 52, 75, 55, 93, 59, 60, 17, 85, 24, 14, 93, 79, 68, 53, 96, 27, 44, 25, 47, 21, 61, 66, 86, 96, 18, 79, 93, 97, 31, 91, 80, 45, 18, 76, 63, 52, 66, 62, 27, 58, 58, 93, 97, 81, 32, 10, 97, 67, 66, 40, 80, 79, 32, 93, 8, 23, 43, 31, 98, 42, 50, 28, 30, 96, 24, 35, 53, 89, 54, 34, 90, 35, 39, 97, 73, 80, 10, 55, 8, 73, 33, 54, 27, 15, 86, 98, 70, 88, 25, 38, 63, 83, 81, 16, 89, 39, 45, 10, 45, 99, 59, 40, 77, 22, 25, 43, 12, 5, 99, 69, 90, 21, 67, 39, 85, 16, 26, 19, 46, 32, 93, 79, 60, 77, 19, 48, 2, 38, 51, 67, 8, 78, 42, 31, 90, 68, 0, 7, 80, 61, 92, 58, 24, 37, 30, 8, 49, 4, 76, 66, 45, 87, 94, 9, 67, 68, 35, 51, 54, 33, 50, 18, 21, 76, 31, 23, 26, 95, 95, 86, 50, 84, 50, 10, 44, 38, 33, 33, 36, 87, 24, 77, 90, 61, 82, 90, 54, 97, 61, 29, 42, 54, 21, 64, 8, 32, 22, 78, 20, 57, 49, 99, 3, 37, 30, 75, 92, 41, 70, 34, 26, 85, 89, 89, 80, 60, 35, 7, 36, 91, 77, 92, 55, 70, 34, 2, 85, 50, 89, 80, 60, 11, 7, 36, 91, 77, 27, 82, 3, 65, 3, 29, 88, 18, 71, 8, 98, 82, 47, 100, 26, 85, 50, 100]
last_save: 71

Gen:344
last_save: 71
Exit:FalseFalseTrue

Gen:1
TrainFitness:0.8037974683544303
TestFitness:0.8076923076923077
MaxGenLen:400
Individual: def p():
  def adf0(index):
    if np.greater(x[index],30944.38025):
      return True
    else:
      return False
  def adf1(index):
    if np.greater(x[index],80152.69270):
      return True
    else:
      return False
  def adf2(index):
    if np.less(x[index],18226.54266):
      return True
    else:
      return True
  def adf3(index):
    if np.greater(x[index],44062.43386):
      return False
    else:
      return False
  def adf4(index):
    if np.greater(x[index],85884.10069):
      return True
    else:
      return False
  def adf5(index):
    if np.equal(x[index],95305.97551):
      return True
    else:
      return True
  def adf6(index):
    if np.less(x[index],04452.16735):
      return False
    else:
      return True
  def adf7(index):
    if np.less(x[index],73493.53463):
      return True
    else:
      return False
  def adf8(index):
    if np.equal(x[index],36117.23262):
      return True
    else:
      return True
  return multiple_operation([adf0(0)*-19.27, adf1(1)*-81.64, adf2(2)*-97.54, adf3(3)*-52.38, adf4(4)*-64.45, adf5(5)*+58.10, adf6(6)*+16.92, adf7(7)*+99.20, adf8(8)*+69.41], 08.47)
result=p(); 0.8037974683544303
IndLenGenome:339
IndGenome:[27, 18, 60, 8, 38, 90, 32, 98, 90, 75, 15, 30, 82, 30, 95, 15, 96, 27, 4, 88, 85, 67, 50, 56, 60, 54, 84, 25, 83, 16, 50, 23, 58, 37, 68, 18, 74, 62, 85, 72, 36, 66, 14, 32, 58, 12, 99, 98, 64, 30, 97, 49, 24, 97, 17, 60, 66, 78, 74, 99, 19, 58, 78, 33, 23, 74, 39, 52, 84, 18, 15, 55, 5, 7, 37, 23, 65, 87, 55, 40, 15, 70, 14, 48, 45, 90, 10, 45, 75, 57, 86, 58, 25, 89, 88, 60, 84, 38, 14, 70, 25, 79, 81, 59, 69, 3, 83, 10, 53, 31, 14, 60, 87, 32, 71, 81, 16, 59, 63, 25, 60, 66, 92, 95, 48, 30, 98, 40, 75, 42, 42, 94, 97, 96, 63, 93, 61, 49, 26, 48, 73, 47, 18, 67, 90, 18, 16, 22, 19, 3, 61, 12, 99, 32, 79, 11, 36, 44, 94, 19, 61, 65, 39, 76, 95, 73, 88, 34, 17, 67, 76, 36, 91, 43, 19, 55, 61, 75, 92, 41, 19, 37, 13, 81, 64, 8, 84, 18, 44, 62, 47, 55, 76, 49, 66, 92, 10, 24, 80, 73, 52, 85, 53, 30, 36, 37, 39, 80, 75, 74, 35, 15, 82, 25, 82, 85, 66, 52, 14, 18, 53, 54, 56, 72, 54, 71, 88, 96, 49, 26, 79, 69, 86, 40, 48, 8, 81, 82, 78, 69, 99, 36, 5, 74, 85, 64, 38, 59, 76, 80, 69, 52, 66, 4, 13, 89, 14, 77, 50, 2, 75, 42, 25, 44, 81, 21, 86, 16, 89, 87, 96, 51, 23, 0, 50, 79, 40, 95, 18, 56, 76, 38, 1, 7, 28, 14, 28, 79, 96, 89, 59, 86, 42, 45, 27, 48, 50, 21, 84, 99, 57, 5, 36, 76, 65, 24, 15, 20, 73, 46, 34, 38, 88, 15, 12, 83, 19, 91, 50, 93, 6, 75, 59, 39, 5, 53, 69, 10, 99, 31, 51, 98, 9, 82, 4, 65, 100, 75, 94]
last_save: 71

Gen:251
last_save: 71
Exit:FalseFalseTrue