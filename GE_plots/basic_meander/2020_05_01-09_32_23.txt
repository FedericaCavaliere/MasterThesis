Dataset:Meander/new_Full.csv
FS:False
Seed:1236
Size:7

Gen:1
TrainFitness:0.8057324840764332
TestFitness:0.7962962962962963
MaxGenLen:400
Individual: def p():
  def adf0(index):
    if np.greater(x[index],35065.34496):
      return False
    else:
      return True
  def adf1(index):
    if np.less(x[index],52464.68929):
      return False
    else:
      return False
  def adf2(index):
    if np.equal(x[index],82282.37754):
      return True
    else:
      return False
  def adf3(index):
    if np.equal(x[index],49240.90315):
      return True
    else:
      return True
  def adf4(index):
    if np.less(x[index],01770.61557):
      return True
    else:
      return False
  def adf5(index):
    if np.greater(x[index],81961.92912):
      return True
    else:
      return True
  def adf6(index):
    if np.equal(x[index],64679.95723):
      return True
    else:
      return True
  def adf7(index):
    if np.greater(x[index],89104.05335):
      return False
    else:
      return False
  def adf8(index):
    if np.less(x[index],97999.69023):
      return False
    else:
      return True
  return multiple_operation([adf0(0)*-19.13, adf1(1)*+32.39, adf2(2)*+97.78, adf3(3)*+66.33, adf4(4)*+30.00, adf5(5)*+14.32, adf6(6)*+07.33, adf7(7)*+94.74, adf8(8)*-90.17], 07.16)
result=p(); 0.8057324840764332
IndLenGenome:339
IndGenome:[48, 34, 18, 4, 8, 77, 85, 22, 10, 65, 57, 50, 79, 6, 50, 2, 22, 23, 49, 55, 58, 96, 43, 97, 10, 44, 25, 97, 95, 44, 97, 84, 52, 76, 68, 39, 42, 32, 60, 40, 80, 90, 11, 29, 6, 30, 40, 41, 76, 22, 48, 81, 93, 4, 15, 92, 84, 88, 99, 10, 63, 10, 8, 18, 54, 58, 44, 40, 42, 65, 11, 48, 48, 67, 89, 64, 67, 21, 40, 97, 94, 12, 23, 63, 31, 87, 25, 42, 35, 81, 89, 41, 47, 94, 62, 16, 22, 42, 39, 15, 52, 15, 26, 53, 51, 83, 99, 10, 67, 20, 29, 99, 93, 64, 69, 14, 59, 17, 60, 87, 59, 49, 74, 80, 5, 77, 38, 12, 24, 99, 3, 70, 44, 78, 12, 92, 42, 73, 41, 86, 56, 89, 56, 22, 36, 47, 97, 82, 26, 15, 66, 83, 32, 83, 43, 90, 71, 16, 36, 51, 17, 56, 73, 44, 19, 13, 75, 93, 79, 12, 31, 13, 94, 90, 98, 89, 60, 35, 45, 32, 69, 64, 64, 67, 49, 53, 54, 72, 83, 80, 89, 89, 76, 83, 34, 98, 55, 19, 47, 38, 96, 46, 12, 65, 73, 80, 96, 50, 74, 57, 90, 24, 80, 51, 43, 87, 17, 49, 81, 91, 25, 25, 41, 13, 46, 55, 79, 57, 49, 63, 1, 15, 85, 35, 62, 96, 23, 49, 18, 73, 15, 96, 57, 91, 27, 22, 3, 96, 81, 43, 37, 53, 35, 18, 87, 79, 14, 74, 13, 37, 39, 55, 14, 96, 43, 42, 89, 38, 18, 35, 3, 97, 83, 95, 2, 8, 86, 66, 36, 27, 38, 7, 7, 46, 73, 76, 62, 97, 40, 50, 2, 44, 45, 58, 23, 77, 48, 31, 69, 90, 82, 70, 55, 60, 16, 48, 14, 19, 22, 41, 54, 36, 86, 76, 12, 96, 75, 0, 40, 50, 59, 16, 76, 16, 41, 18, 73, 37, 4, 46, 4, 48, 45, 97, 48, 30, 34, 73, 15]
last_save: 72

Gen:251
last_save: 72
Exit:FalseFalseTrue

Gen:1
TrainFitness:0.8089171974522293
TestFitness:0.7777777777777778
MaxGenLen:400
Individual: def p():
  def adf0(index):
    if np.greater(x[index],01898.38673):
      if np.greater(x[index],62116.22520):
        return False
      else:
        return True
    else:
      if np.less(x[index],39400.52891):
        return False
      else:
        return False
  def adf1(index):
    if np.greater(x[index],89177.04691):
      if np.less(x[index],84880.14788):
        return True
      else:
        return True
    else:
      if np.less(x[index],22078.83881):
        return False
      else:
        return True
  def adf2(index):
    if np.equal(x[index],65418.67108):
      if np.greater(x[index],50869.08779):
        return True
      else:
        return False
    else:
      if np.greater(x[index],52677.48213):
        return False
      else:
        return True
  def adf3(index):
    if np.less(x[index],99682.41568):
      if np.greater(x[index],61812.66104):
        return False
      else:
        return False
    else:
      if np.greater(x[index],88651.79230):
        return False
      else:
        return True
  def adf4(index):
    if np.less(x[index],32342.98451):
      if np.less(x[index],11827.90516):
        return False
      else:
        return True
    else:
      if np.greater(x[index],28121.03277):
        return False
      else:
        return False
  def adf5(index):
    if np.greater(x[index],19429.38934):
      if np.equal(x[index],28480.57019):
        return True
      else:
        return True
    else:
      if np.less(x[index],43211.24233):
        return False
      else:
        return False
  def adf6(index):
    if np.greater(x[index],05049.10549):
      if np.greater(x[index],67775.61334):
        return False
      else:
        return True
    else:
      if np.less(x[index],90898.69107):
        return False
      else:
        return True
  def adf7(index):
    if np.equal(x[index],04836.83825):
      if np.greater(x[index],63524.52010):
        return True
      else:
        return True
    else:
      if np.equal(x[index],14001.33307):
        return False
      else:
        return True
  def adf8(index):
    if np.equal(x[index],16618.53989):
      if np.less(x[index],29564.93123):
        return True
      else:
        return False
    else:
      if np.less(x[index],71812.25291):
        return False
      else:
        return False
  return multiple_operation([adf0(0)*+89.71, adf1(1)*-57.13, adf2(2)*-40.27, adf3(3)*+43.97, adf4(4)*-54.72, adf5(5)*-80.97, adf6(6)*-69.64, adf7(7)*+24.21, adf8(8)*-97.92], 38.95)
result=p(); 0.8089171974522293
IndLenGenome:717
IndGenome:[52, 33, 70, 37, 85, 45, 91, 11, 21, 59, 21, 26, 70, 46, 31, 85, 30, 40, 63, 96, 31, 41, 65, 41, 76, 32, 57, 45, 28, 6, 85, 46, 85, 44, 41, 32, 75, 36, 4, 62, 68, 83, 69, 12, 92, 15, 77, 39, 8, 56, 38, 54, 10, 18, 46, 76, 21, 70, 36, 72, 95, 31, 79, 10, 16, 73, 52, 64, 16, 31, 12, 30, 61, 61, 17, 9, 59, 23, 100, 41, 79, 90, 70, 28, 25, 6, 58, 99, 81, 73, 69, 64, 28, 84, 74, 54, 75, 2, 73, 11, 39, 85, 82, 79, 97, 80, 59, 5, 56, 70, 67, 35, 51, 34, 12, 3, 18, 86, 98, 71, 39, 51, 61, 87, 3, 55, 71, 45, 42, 75, 75, 78, 30, 43, 38, 31, 17, 23, 29, 11, 42, 58, 92, 13, 30, 72, 84, 58, 72, 20, 99, 31, 19, 13, 55, 90, 82, 97, 73, 48, 33, 90, 59, 39, 10, 21, 64, 81, 33, 53, 73, 58, 30, 16, 62, 34, 39, 92, 34, 67, 72, 96, 67, 28, 72, 73, 8, 31, 61, 41, 45, 61, 38, 75, 42, 94, 81, 71, 81, 30, 97, 56, 76, 52, 25, 59, 72, 44, 85, 44, 6, 9, 31, 74, 51, 46, 62, 64, 19, 30, 52, 60, 32, 39, 18, 89, 98, 54, 6, 72, 92, 71, 28, 24, 59, 96, 43, 93, 16, 30, 12, 78, 90, 10, 62, 51, 66, 87, 67, 77, 34, 80, 93, 61, 17, 83, 84, 64, 95, 45, 23, 60, 97, 19, 2, 73, 57, 64, 72, 75, 4, 61, 19, 44, 84, 23, 53, 73, 28, 11, 28, 22, 86, 41, 70, 99, 19, 95, 77, 38, 58, 67, 50, 38, 64, 92, 48, 57, 89, 61, 24, 51, 65, 16, 22, 18, 80, 32, 8, 22, 56, 41, 83, 9, 45, 89, 60, 15, 69, 55, 21, 74, 60, 49, 80, 73, 28, 22, 21, 15, 88, 69, 59, 29, 99, 62, 76, 43, 37, 44, 41, 80, 10, 49, 28, 28, 45, 65, 33, 61, 47, 71, 97, 72, 18, 95, 10, 89, 62, 20, 54, 23, 87, 68, 99, 88, 78, 75, 50, 79, 73, 59, 81, 59, 51, 34, 28, 84, 83, 10, 31, 12, 58, 60, 88, 67, 21, 49, 29, 24, 95, 61, 49, 20, 66, 52, 15, 21, 61, 40, 46, 27, 69, 34, 87, 57, 31, 10, 64, 78, 20, 88, 30, 37, 89, 27, 64, 14, 63, 66, 13, 9, 10, 54, 15, 31, 38, 94, 48, 77, 96, 48, 69, 26, 82, 28, 76, 96, 77, 59, 98, 49, 97, 53, 83, 32, 36, 12, 32, 41, 95, 48, 30, 62, 21, 97, 37, 63, 13, 10, 20, 82, 86, 32, 11, 12, 72, 86, 45, 73, 94, 27, 28, 27, 52, 61, 81, 12, 91, 15, 32, 81, 65, 60, 37, 91, 51, 1, 38, 47, 65, 35, 28, 24, 18, 99, 41, 6, 43, 45, 9, 40, 79, 66, 5, 23, 69, 61, 3, 74, 76, 11, 38, 41, 54, 40, 13, 19, 38, 42, 17, 98, 22, 75, 84, 29, 44, 34, 74, 25, 12, 23, 92, 42, 96, 3, 63, 24, 28, 28, 55, 12, 59, 34, 45, 12, 43, 73, 93, 90, 62, 7, 47, 36, 12, 13, 7, 10, 47, 31, 76, 23, 44, 44, 1, 33, 7, 86, 70, 14, 1, 43, 16, 65, 61, 97, 9, 25, 33, 77, 80, 38, 78, 63, 77, 10, 42, 7, 99, 100, 87, 24, 21, 28, 47, 39, 94, 61, 83, 53, 14, 16, 59, 22, 92, 75, 72, 63, 66, 76, 78, 31, 2, 32, 99, 3, 59, 24, 51, 2, 86, 100, 59, 87, 63, 82, 95, 78, 12, 85, 22, 98, 83, 92, 49, 43, 17, 85, 35, 100, 18, 53, 52, 41, 65, 78, 19, 61, 34, 65, 4, 37, 97, 18, 60, 58, 48, 47, 41, 44, 42, 34, 76, 45, 91, 26, 4, 30, 88, 89, 15, 1, 83, 90, 25, 9, 13, 56, 12, 86, 86, 84, 71, 90, 31, 84, 40, 59, 29, 77, 33, 81, 53, 45, 74, 12, 29, 19, 15, 66, 68, 24, 83, 45, 28, 68, 80, 21, 34, 55, 98, 9, 60, 81, 86, 28, 87]
last_save: 72

Gen:52
TrainFitness:0.8152866242038217
TestFitness:0.7962962962962963
MaxGenLen:415
Individual: def p():
  def adf0(index):
    if np.equal(x[index],91690.85527):
      return False
    else:
      return True
  def adf1(index):
    if np.equal(x[index],83090.21333):
      return True
    else:
      return True
  def adf2(index):
    if np.greater(x[index],95773.74436):
      if np.equal(x[index],18609.27071):
        return True
      else:
        return False
    else:
      if np.less(x[index],02473.68434):
        return False
      else:
        return True
  def adf3(index):
    if np.less(x[index],06655.84615):
      if np.greater(x[index],20638.87144):
        return False
      else:
        return False
    else:
      if np.less(x[index],12957.99387):
        return True
      else:
        return False
  def adf4(index):
    if np.less(x[index],05810.16835):
      return False
    else:
      return True
  def adf5(index):
    if np.equal(x[index],01369.38326):
      if np.equal(x[index],21164.60333):
        return True
      else:
        return True
    else:
      if np.greater(x[index],56901.09942):
        return False
      else:
        return True
  def adf6(index):
    if np.greater(x[index],08285.17837):
      return False
    else:
      return False
  def adf7(index):
    if np.less(x[index],02032.13445):
      return True
    else:
      return False
  def adf8(index):
    if np.greater(x[index],42724.03670):
      if np.less(x[index],54644.83751):
        return True
      else:
        return False
    else:
      if np.less(x[index],64656.57543):
        return True
      else:
        return True
  return multiple_operation([adf0(0)*-20.80, adf1(1)*+94.22, adf2(2)*+10.21, adf3(3)*+46.98, adf4(4)*+06.48, adf5(5)*+55.72, adf6(6)*-72.20, adf7(7)*+82.49, adf8(8)*-85.90], 75.54)
result=p(); 0.8152866242038217
IndLenGenome:397
IndGenome:[8, 92, 15, 55, 22, 80, 53, 39, 1, 6, 59, 10, 58, 55, 55, 82, 87, 25, 26, 72, 20, 10, 71, 35, 88, 83, 20, 69, 60, 42, 51, 73, 63, 83, 34, 88, 80, 11, 59, 69, 5, 59, 85, 97, 77, 23, 57, 54, 94, 83, 56, 96, 98, 94, 21, 98, 56, 10, 69, 42, 17, 10, 97, 31, 76, 35, 65, 43, 93, 90, 32, 24, 77, 53, 56, 48, 14, 43, 24, 51, 14, 76, 51, 56, 55, 49, 10, 76, 66, 85, 35, 88, 74, 56, 41, 25, 85, 72, 72, 72, 40, 86, 23, 88, 98, 67, 61, 54, 74, 27, 59, 7, 10, 91, 61, 32, 49, 85, 37, 79, 19, 93, 48, 47, 22, 43, 75, 15, 14, 25, 69, 90, 85, 88, 91, 80, 11, 16, 98, 63, 35, 29, 90, 45, 31, 11, 44, 99, 50, 41, 43, 36, 19, 13, 88, 13, 92, 96, 27, 32, 44, 12, 91, 81, 56, 64, 96, 90, 73, 83, 93, 22, 92, 57, 54, 44, 95, 86, 39, 70, 51, 30, 39, 19, 94, 32, 67, 2, 43, 20, 53, 36, 17, 90, 98, 52, 18, 55, 1, 97, 88, 43, 77, 65, 91, 44, 20, 56, 46, 69, 90, 52, 50, 93, 22, 11, 73, 54, 44, 95, 86, 39, 70, 51, 30, 39, 80, 94, 32, 67, 2, 84, 20, 53, 36, 17, 90, 98, 52, 77, 55, 54, 56, 54, 4, 88, 43, 77, 65, 91, 44, 75, 49, 13, 73, 76, 54, 86, 35, 56, 45, 47, 75, 14, 13, 92, 80, 89, 90, 21, 71, 39, 2, 40, 48, 50, 79, 34, 56, 59, 74, 12, 32, 87, 10, 60, 71, 0, 2, 41, 23, 50, 63, 34, 56, 59, 38, 12, 32, 32, 10, 26, 74, 18, 51, 36, 82, 55, 95, 27, 22, 46, 15, 53, 47, 2, 52, 20, 91, 56, 16, 28, 92, 74, 49, 46, 29, 7, 78, 55, 69, 90, 49, 97, 35, 85, 94, 69, 85, 52, 56, 87, 83, 16, 90, 6, 60, 70, 19, 15, 60, 76, 44, 81, 51, 74, 47, 74, 74, 39, 66, 9, 81, 54, 63, 80, 80, 88, 44, 62, 66, 40, 0, 61, 91, 97, 40, 31, 77, 20, 82, 78, 13, 42, 32, 96, 32, 96, 30, 17, 86, 59, 52, 77, 84, 17, 48]
last_save: 72

Gen:302
last_save: 72
Exit:FalseFalseTrue

Gen:1
TrainFitness:0.8037974683544303
TestFitness:0.8076923076923077
MaxGenLen:400
Individual: def p():
  def adf0(index):
    if np.equal(x[index],95137.58718):
      return False
    else:
      return False
  def adf1(index):
    if np.less(x[index],95353.46675):
      return True
    else:
      return True
  def adf2(index):
    if np.less(x[index],76917.03299):
      return True
    else:
      return False
  def adf3(index):
    if np.less(x[index],74413.93911):
      return True
    else:
      return True
  def adf4(index):
    if np.greater(x[index],24687.53611):
      return True
    else:
      return True
  def adf5(index):
    if np.equal(x[index],63306.95178):
      return False
    else:
      return False
  def adf6(index):
    if np.greater(x[index],43168.47256):
      return False
    else:
      return False
  def adf7(index):
    if np.greater(x[index],08812.51043):
      return False
    else:
      return True
  def adf8(index):
    if np.less(x[index],87985.99949):
      return True
    else:
      return False
  return multiple_operation([adf0(0)*+97.28, adf1(1)*+42.58, adf2(2)*-67.42, adf3(3)*+67.82, adf4(4)*+18.23, adf5(5)*+46.91, adf6(6)*-71.61, adf7(7)*+88.46, adf8(8)*+69.18], 01.41)
result=p(); 0.8037974683544303
IndLenGenome:339
IndGenome:[64, 87, 51, 37, 35, 77, 65, 30, 75, 53, 93, 2, 48, 37, 28, 93, 12, 69, 44, 61, 92, 75, 17, 18, 79, 88, 50, 2, 24, 19, 16, 69, 8, 26, 67, 46, 13, 61, 20, 89, 62, 2, 43, 95, 88, 76, 61, 15, 101, 97, 78, 13, 61, 16, 34, 8, 12, 50, 97, 16, 56, 2, 51, 89, 51, 51, 60, 87, 4, 8, 88, 88, 94, 30, 18, 30, 59, 12, 77, 52, 30, 23, 44, 3, 17, 28, 25, 6, 65, 51, 41, 5, 70, 99, 54, 65, 91, 89, 31, 70, 38, 78, 31, 57, 83, 55, 47, 26, 84, 54, 58, 11, 16, 33, 31, 47, 42, 88, 45, 76, 88, 46, 80, 47, 96, 89, 47, 89, 88, 59, 71, 94, 84, 91, 70, 60, 81, 78, 32, 49, 28, 47, 64, 39, 95, 19, 77, 59, 7, 97, 73, 87, 34, 99, 36, 94, 35, 68, 61, 25, 81, 41, 25, 66, 29, 57, 21, 79, 66, 67, 59, 94, 12, 49, 77, 38, 54, 57, 15, 32, 95, 96, 29, 90, 63, 57, 96, 41, 69, 36, 46, 56, 97, 57, 64, 12, 43, 86, 68, 55, 73, 51, 53, 73, 28, 93, 51, 30, 22, 38, 28, 89, 43, 36, 96, 55, 31, 29, 30, 85, 41, 88, 87, 44, 50, 33, 77, 47, 35, 97, 61, 31, 7, 9, 1, 50, 99, 49, 68, 16, 29, 34, 33, 38, 47, 99, 56, 99, 99, 50, 72, 13, 70, 9, 34, 16, 93, 96, 12, 2, 2, 7, 27, 28, 44, 39, 60, 31, 90, 8, 43, 22, 45, 94, 54, 39, 45, 61, 28, 62, 15, 22, 55, 89, 56, 98, 13, 53, 67, 14, 4, 19, 25, 3, 73, 33, 94, 88, 77, 70, 9, 65, 54, 51, 78, 34, 48, 97, 98, 24, 34, 70, 73, 8, 13, 42, 13, 49, 17, 31, 72, 80, 78, 82, 41, 83, 73, 32, 74, 57, 54, 97, 82, 30, 7, 75, 60, 81, 14]
last_save: 72

Gen:135
TrainFitness:0.810126582278481
TestFitness:0.8076923076923077
MaxGenLen:430
Individual: def p():
  def adf0(index):
    if np.equal(x[index],01274.10448):
      return True
    else:
      return True
  def adf1(index):
    if np.less(x[index],77436.67089):
      if np.less(x[index],29405.46759):
        return True
      else:
        return True
    else:
      if np.less(x[index],45052.51276):
        return True
      else:
        return True
  def adf2(index):
    if np.equal(x[index],18864.73266):
      if np.equal(x[index],38528.05801):
        return False
      else:
        return True
    else:
      if np.equal(x[index],25770.48801):
        return False
      else:
        return False
  def adf3(index):
    if np.equal(x[index],00392.14485):
      if np.greater(x[index],43679.81387):
        return True
      else:
        return True
    else:
      if np.equal(x[index],51090.14952):
        return True
      else:
        return False
  def adf4(index):
    if np.greater(x[index],62080.34412):
      if np.equal(x[index],91180.72035):
        return True
      else:
        return True
    else:
      if np.greater(x[index],83066.57446):
        return False
      else:
        return True
  def adf5(index):
    if np.equal(x[index],73957.12036):
      return False
    else:
      return False
  def adf6(index):
    if np.less(x[index],22794.19497):
      return False
    else:
      return False
  def adf7(index):
    if np.less(x[index],43151.30539):
      if np.greater(x[index],01303.65082):
        return True
      else:
        return False
    else:
      if np.equal(x[index],59413.76523):
        return True
      else:
        return False
  def adf8(index):
    if np.greater(x[index],53975.38578):
      if np.less(x[index],41901.69825):
        return False
      else:
        return False
    else:
      if np.equal(x[index],67688.26332):
        return False
      else:
        return True
  return multiple_operation([adf0(0)*+81.02, adf1(1)*-31.64, adf2(2)*-00.41, adf3(3)*+64.09, adf4(4)*+03.81, adf5(5)*+16.41, adf6(6)*+26.56, adf7(7)*-88.08, adf8(8)*+85.46], 90.92)
result=p(); 0.810126582278481
IndLenGenome:418
IndGenome:[78, 40, 26, 25, 16, 41, 24, 20, 11, 12, 97, 34, 11, 90, 4, 4, 18, 64, 90, 41, 51, 36, 82, 98, 77, 47, 84, 33, 6, 66, 77, 50, 28, 49, 51, 28, 22, 72, 9, 54, 0, 85, 14, 6, 17, 55, 29, 74, 70, 4, 61, 17, 84, 85, 40, 35, 32, 55, 21, 72, 47, 26, 86, 88, 89, 16, 56, 17, 43, 31, 78, 88, 26, 94, 47, 13, 32, 56, 96, 85, 41, 96, 43, 88, 85, 42, 58, 60, 55, 38, 10, 11, 31, 70, 76, 38, 71, 42, 15, 7, 37, 60, 94, 28, 38, 60, 91, 99, 85, 34, 16, 33, 5, 54, 40, 30, 63, 19, 92, 41, 44, 44, 38, 35, 32, 36, 50, 74, 23, 26, 17, 59, 88, 31, 63, 58, 47, 92, 96, 69, 98, 67, 25, 11, 60, 39, 90, 51, 34, 59, 5, 62, 68, 43, 54, 11, 35, 87, 44, 86, 72, 70, 48, 90, 33, 64, 64, 81, 52, 71, 74, 88, 99, 81, 51, 18, 60, 57, 32, 60, 23, 15, 38, 58, 52, 18, 10, 38, 23, 30, 16, 16, 75, 27, 24, 24, 36, 41, 86, 26, 5, 61, 17, 14, 77, 23, 59, 15, 67, 61, 12, 90, 13, 56, 37, 97, 69, 10, 20, 40, 38, 2, 22, 77, 29, 54, 81, 49, 44, 39, 57, 71, 93, 77, 46, 25, 22, 13, 74, 43, 51, 85, 41, 63, 60, 45, 33, 19, 17, 9, 21, 90, 81, 43, 30, 83, 76, 45, 40, 38, 2, 32, 77, 29, 17, 42, 65, 39, 74, 71, 93, 77, 46, 25, 62, 13, 24, 43, 6, 41, 41, 63, 60, 45, 33, 19, 17, 15, 3, 98, 5, 37, 78, 42, 22, 15, 14, 91, 89, 50, 1, 26, 99, 98, 42, 5, 63, 23, 42, 62, 50, 36, 97, 26, 88, 98, 42, 76, 63, 23, 42, 75, 6, 33, 52, 8, 14, 31, 68, 31, 80, 42, 6, 43, 41, 73, 41, 56, 34, 1, 1, 16, 100, 40, 84, 91, 4, 74, 81, 26, 54, 40, 69, 73, 52, 8, 70, 93, 68, 31, 43, 90, 89, 41, 56, 34, 1, 1, 16, 20, 62, 26, 25, 6, 37, 45, 78, 88, 28, 20, 88, 0, 36, 62, 78, 75, 4, 86, 54, 49, 50, 9, 12, 88, 29, 83, 89, 37, 80, 51, 99, 66, 14, 73, 6, 2, 35, 33, 85, 51, 11, 100, 36, 1, 66, 26, 16, 60]
last_save: 72

Gen:142
TrainFitness:0.8164556962025317
TestFitness:0.8076923076923077
MaxGenLen:430
Individual: def p():
  def adf0(index):
    if np.equal(x[index],01274.10448):
      return True
    else:
      return True
  def adf1(index):
    if np.less(x[index],77436.67089):
      if np.less(x[index],29405.56759):
        return True
      else:
        return True
    else:
      if np.less(x[index],45052.51276):
        return True
      else:
        return True
  def adf2(index):
    if np.equal(x[index],18864.73266):
      if np.less(x[index],38528.05801):
        return False
      else:
        return True
    else:
      if np.equal(x[index],25776.48801):
        return False
      else:
        return False
  def adf3(index):
    if np.equal(x[index],00392.14485):
      if np.greater(x[index],43679.81387):
        return True
      else:
        return True
    else:
      if np.equal(x[index],51090.14952):
        return True
      else:
        return False
  def adf4(index):
    if np.greater(x[index],62080.34412):
      if np.equal(x[index],91180.72035):
        return True
      else:
        return True
    else:
      if np.greater(x[index],83066.57446):
        return False
      else:
        return True
  def adf5(index):
    if np.equal(x[index],73957.12036):
      return False
    else:
      return False
  def adf6(index):
    if np.less(x[index],22794.19497):
      return False
    else:
      return False
  def adf7(index):
    if np.less(x[index],43151.30539):
      if np.greater(x[index],01903.65082):
        return True
      else:
        return False
    else:
      if np.equal(x[index],59413.76523):
        return True
      else:
        return False
  def adf8(index):
    if np.greater(x[index],53975.38578):
      if np.less(x[index],41901.69825):
        return False
      else:
        return False
    else:
      if np.equal(x[index],67688.26332):
        return False
      else:
        return True
  return multiple_operation([adf0(0)*+81.02, adf1(1)*-31.64, adf2(2)*-00.41, adf3(3)*+64.09, adf4(4)*+03.81, adf5(5)*+16.41, adf6(6)*+26.56, adf7(7)*-88.08, adf8(8)*+85.46], 90.92)
result=p(); 0.8164556962025317
IndLenGenome:418
IndGenome:[78, 40, 26, 25, 16, 41, 24, 20, 11, 12, 97, 34, 11, 90, 4, 4, 18, 64, 90, 41, 51, 36, 82, 98, 77, 47, 84, 33, 6, 66, 77, 50, 28, 49, 51, 28, 22, 72, 9, 54, 0, 85, 45, 6, 17, 55, 29, 74, 70, 4, 61, 17, 84, 85, 40, 35, 32, 55, 21, 72, 47, 26, 86, 88, 89, 16, 56, 17, 43, 31, 78, 88, 26, 94, 47, 13, 32, 56, 96, 85, 82, 96, 43, 88, 85, 42, 58, 60, 55, 38, 10, 11, 31, 70, 76, 38, 71, 42, 15, 7, 37, 96, 94, 28, 38, 60, 91, 99, 85, 34, 16, 33, 5, 54, 40, 30, 63, 19, 92, 41, 44, 44, 38, 35, 32, 36, 50, 74, 23, 26, 17, 59, 88, 31, 63, 58, 47, 92, 96, 69, 98, 67, 25, 11, 60, 39, 90, 51, 34, 59, 5, 62, 68, 43, 54, 11, 35, 87, 44, 86, 72, 70, 48, 90, 33, 64, 64, 81, 52, 71, 74, 88, 99, 81, 51, 18, 60, 57, 32, 60, 23, 15, 38, 58, 52, 18, 10, 38, 23, 30, 16, 16, 75, 27, 24, 24, 36, 41, 86, 26, 5, 61, 17, 14, 77, 23, 59, 15, 67, 61, 12, 90, 13, 56, 37, 97, 69, 10, 20, 40, 38, 2, 22, 77, 29, 54, 81, 49, 44, 39, 57, 71, 93, 77, 46, 25, 22, 13, 74, 43, 51, 85, 41, 63, 60, 45, 33, 19, 17, 9, 21, 90, 81, 69, 30, 83, 76, 45, 40, 38, 2, 32, 77, 29, 17, 42, 65, 39, 74, 71, 93, 77, 46, 25, 62, 13, 24, 43, 6, 41, 41, 63, 60, 45, 33, 19, 17, 15, 3, 98, 5, 37, 78, 42, 22, 15, 14, 91, 89, 50, 1, 26, 99, 98, 42, 5, 63, 23, 42, 62, 50, 36, 97, 26, 88, 98, 42, 76, 63, 23, 42, 75, 6, 33, 52, 8, 14, 31, 68, 31, 80, 42, 6, 43, 41, 73, 41, 56, 34, 1, 1, 16, 100, 40, 84, 91, 4, 74, 81, 26, 54, 40, 69, 73, 52, 8, 70, 93, 68, 31, 31, 90, 89, 41, 56, 34, 1, 1, 16, 20, 62, 26, 25, 6, 37, 45, 78, 88, 28, 20, 88, 0, 36, 62, 78, 75, 4, 86, 54, 49, 50, 9, 12, 88, 29, 83, 89, 37, 80, 51, 99, 66, 14, 73, 6, 2, 35, 33, 85, 51, 11, 100, 36, 1, 66, 26, 16, 60]
last_save: 72

Gen:145
TrainFitness:0.819620253164557
TestFitness:0.8076923076923077
MaxGenLen:430
Individual: def p():
  def adf0(index):
    if np.equal(x[index],01274.10448):
      return True
    else:
      return True
  def adf1(index):
    if np.less(x[index],77436.67089):
      if np.less(x[index],29405.46759):
        return True
      else:
        return True
    else:
      if np.less(x[index],45052.51276):
        return True
      else:
        return True
  def adf2(index):
    if np.equal(x[index],18864.73266):
      if np.equal(x[index],30528.05801):
        return False
      else:
        return True
    else:
      if np.equal(x[index],25770.48801):
        return False
      else:
        return False
  def adf3(index):
    if np.equal(x[index],00392.14485):
      if np.greater(x[index],43679.81387):
        return True
      else:
        return True
    else:
      if np.equal(x[index],51090.14952):
        return True
      else:
        return False
  def adf4(index):
    if np.greater(x[index],62080.34402):
      if np.equal(x[index],91180.74035):
        return True
      else:
        return True
    else:
      if np.greater(x[index],83066.57446):
        return False
      else:
        return True
  def adf5(index):
    if np.equal(x[index],73957.12036):
      return False
    else:
      return False
  def adf6(index):
    if np.less(x[index],22394.19497):
      return False
    else:
      return False
  def adf7(index):
    if np.less(x[index],43151.30539):
      if np.greater(x[index],01703.65082):
        return True
      else:
        return False
    else:
      if np.equal(x[index],59413.76523):
        return True
      else:
        return False
  def adf8(index):
    if np.greater(x[index],53975.38578):
      if np.less(x[index],41901.69825):
        return False
      else:
        return False
    else:
      if np.equal(x[index],67688.26332):
        return False
      else:
        return True
  return multiple_operation([adf0(0)*+81.02, adf1(1)*-31.64, adf2(2)*-00.41, adf3(3)*+64.59, adf4(4)*+03.81, adf5(5)*+16.41, adf6(6)*+26.56, adf7(7)*-88.08, adf8(8)*+85.46], 90.92)
result=p(); 0.819620253164557
IndLenGenome:418
IndGenome:[78, 40, 26, 25, 16, 41, 24, 20, 11, 12, 97, 34, 11, 90, 4, 4, 18, 64, 90, 41, 51, 36, 82, 98, 77, 47, 84, 33, 6, 66, 77, 50, 28, 49, 51, 28, 22, 72, 9, 54, 0, 85, 14, 6, 17, 55, 29, 74, 70, 4, 61, 17, 84, 85, 40, 35, 32, 55, 21, 72, 47, 26, 86, 88, 89, 16, 56, 17, 43, 31, 78, 88, 26, 94, 47, 13, 32, 56, 96, 85, 41, 96, 43, 90, 85, 42, 58, 60, 55, 38, 10, 11, 31, 70, 76, 38, 71, 42, 15, 7, 37, 60, 94, 28, 38, 60, 91, 99, 85, 34, 16, 33, 5, 54, 40, 30, 63, 19, 92, 41, 44, 44, 38, 35, 32, 36, 50, 74, 23, 26, 17, 59, 88, 31, 63, 58, 47, 92, 96, 69, 98, 67, 25, 11, 60, 39, 90, 51, 34, 59, 5, 62, 68, 43, 54, 11, 35, 87, 44, 86, 72, 70, 48, 90, 33, 64, 64, 40, 52, 71, 74, 88, 99, 81, 51, 18, 60, 57, 94, 60, 23, 15, 38, 58, 52, 18, 10, 38, 23, 30, 16, 16, 75, 27, 24, 24, 36, 41, 86, 26, 5, 61, 17, 14, 77, 23, 59, 15, 67, 61, 12, 90, 13, 56, 37, 97, 69, 10, 20, 40, 38, 2, 22, 13, 29, 54, 81, 49, 44, 39, 57, 71, 93, 77, 46, 25, 22, 13, 74, 43, 51, 85, 41, 63, 60, 45, 33, 19, 17, 9, 21, 90, 81, 87, 30, 83, 76, 45, 40, 38, 2, 32, 77, 29, 17, 42, 65, 39, 74, 71, 93, 77, 46, 25, 62, 13, 24, 43, 6, 41, 41, 63, 60, 45, 33, 19, 17, 15, 3, 98, 5, 37, 78, 42, 22, 15, 14, 91, 89, 50, 1, 26, 99, 98, 42, 5, 63, 23, 42, 62, 50, 36, 97, 26, 88, 98, 42, 76, 63, 23, 42, 75, 6, 33, 52, 8, 14, 31, 68, 31, 80, 42, 6, 43, 41, 73, 41, 56, 34, 1, 1, 16, 100, 40, 84, 91, 4, 74, 81, 26, 54, 5, 69, 73, 52, 8, 70, 93, 68, 31, 43, 90, 89, 41, 56, 34, 1, 1, 16, 20, 62, 26, 25, 6, 37, 45, 78, 88, 28, 20, 88, 0, 36, 62, 78, 75, 4, 86, 54, 49, 50, 9, 12, 88, 29, 83, 89, 37, 80, 51, 99, 66, 14, 73, 6, 2, 35, 33, 85, 51, 11, 100, 36, 1, 66, 26, 16, 60]
last_save: 72

Gen:395
last_save: 72
Exit:FalseFalseTrue

Gen:1
TrainFitness:0.8037974683544303
TestFitness:0.8076923076923077
MaxGenLen:400
Individual: def p():
  def adf0(index):
    if np.greater(x[index],81914.96294):
      return True
    else:
      return True
  def adf1(index):
    if np.greater(x[index],74547.22799):
      return False
    else:
      return True
  def adf2(index):
    if np.less(x[index],16313.51925):
      return True
    else:
      return True
  def adf3(index):
    if np.less(x[index],00956.93276):
      return True
    else:
      return True
  def adf4(index):
    if np.equal(x[index],31098.02595):
      return True
    else:
      return False
  def adf5(index):
    if np.greater(x[index],82118.76860):
      return False
    else:
      return True
  def adf6(index):
    if np.greater(x[index],44675.44974):
      return True
    else:
      return True
  def adf7(index):
    if np.less(x[index],60117.46184):
      return False
    else:
      return False
  def adf8(index):
    if np.equal(x[index],36813.77996):
      return True
    else:
      return False
  return multiple_operation([adf0(0)*-11.84, adf1(1)*-58.46, adf2(2)*+98.35, adf3(3)*+16.84, adf4(4)*-40.50, adf5(5)*+88.76, adf6(6)*-98.11, adf7(7)*-67.70, adf8(8)*-12.03], 04.35)
result=p(); 0.8037974683544303
IndLenGenome:339
IndGenome:[52, 76, 66, 22, 17, 42, 47, 35, 32, 5, 33, 51, 15, 90, 63, 64, 25, 40, 43, 85, 90, 3, 37, 70, 80, 38, 1, 7, 23, 56, 57, 73, 94, 74, 29, 63, 27, 40, 35, 61, 89, 25, 73, 16, 88, 85, 79, 75, 74, 45, 16, 77, 21, 59, 13, 36, 74, 63, 90, 50, 90, 46, 99, 86, 68, 91, 36, 39, 28, 65, 28, 9, 84, 35, 13, 18, 30, 56, 44, 48, 62, 30, 15, 73, 54, 34, 45, 51, 72, 41, 28, 30, 98, 96, 99, 36, 19, 63, 96, 19, 85, 16, 23, 40, 41, 40, 54, 72, 75, 14, 46, 7, 61, 47, 40, 26, 72, 37, 79, 93, 68, 20, 97, 41, 61, 68, 27, 62, 89, 62, 74, 34, 17, 54, 38, 12, 65, 88, 89, 22, 28, 30, 13, 73, 30, 24, 94, 29, 81, 68, 91, 60, 54, 12, 56, 75, 99, 71, 11, 65, 77, 96, 7, 79, 66, 71, 86, 64, 27, 85, 71, 70, 37, 27, 60, 46, 22, 55, 44, 91, 30, 15, 64, 36, 38, 16, 31, 95, 59, 61, 67, 66, 70, 97, 99, 63, 62, 38, 48, 24, 85, 25, 91, 71, 23, 86, 88, 26, 24, 36, 44, 11, 34, 97, 55, 98, 88, 99, 54, 79, 71, 84, 32, 87, 77, 22, 66, 10, 69, 75, 8, 10, 66, 26, 37, 76, 66, 8, 78, 58, 61, 1, 68, 4, 58, 76, 70, 74, 13, 92, 51, 20, 22, 45, 17, 26, 10, 91, 100, 16, 99, 56, 45, 71, 98, 60, 71, 69, 70, 82, 20, 77, 84, 70, 48, 97, 32, 72, 50, 72, 5, 35, 25, 53, 66, 35, 5, 7, 64, 68, 81, 20, 0, 75, 98, 54, 56, 23, 94, 9, 90, 56, 35, 30, 66, 51, 75, 26, 49, 37, 45, 31, 33, 67, 53, 71, 21, 94, 84, 68, 22, 97, 4, 63, 77, 61, 86, 49, 3, 4, 41, 64, 87, 19, 19, 30, 50, 5, 10]
last_save: 72

Gen:251
last_save: 72
Exit:FalseFalseTrue

Gen:1
TrainFitness:0.8037974683544303
TestFitness:0.8076923076923077
MaxGenLen:400
Individual: def p():
  def adf0(index):
    if np.equal(x[index],35829.74704):
      return False
    else:
      return True
  def adf1(index):
    if np.less(x[index],45988.11948):
      return False
    else:
      return True
  def adf2(index):
    if np.equal(x[index],82069.12450):
      return False
    else:
      return True
  def adf3(index):
    if np.less(x[index],27588.48398):
      return True
    else:
      return False
  def adf4(index):
    if np.greater(x[index],33998.99626):
      return True
    else:
      return True
  def adf5(index):
    if np.less(x[index],13788.42956):
      return True
    else:
      return False
  def adf6(index):
    if np.greater(x[index],41020.23666):
      return True
    else:
      return False
  def adf7(index):
    if np.equal(x[index],01918.16760):
      return False
    else:
      return False
  def adf8(index):
    if np.equal(x[index],73871.51302):
      return True
    else:
      return False
  return multiple_operation([adf0(0)*-44.34, adf1(1)*-68.31, adf2(2)*+39.01, adf3(3)*+27.35, adf4(4)*+60.18, adf5(5)*+31.32, adf6(6)*+47.47, adf7(7)*+55.55, adf8(8)*-22.83], 22.43)
result=p(); 0.8037974683544303
IndLenGenome:339
IndGenome:[57, 4, 69, 62, 88, 40, 96, 26, 25, 24, 6, 4, 69, 90, 36, 30, 85, 4, 76, 25, 28, 10, 8, 49, 67, 36, 75, 85, 15, 77, 4, 39, 53, 56, 80, 13, 86, 98, 25, 15, 2, 14, 27, 75, 12, 52, 38, 19, 77, 12, 70, 51, 12, 94, 61, 30, 35, 42, 86, 20, 84, 13, 95, 40, 56, 63, 91, 82, 20, 79, 49, 81, 91, 78, 88, 18, 25, 53, 13, 57, 83, 43, 72, 49, 20, 96, 87, 17, 98, 41, 74, 95, 94, 68, 33, 28, 84, 52, 46, 58, 44, 24, 48, 24, 94, 46, 74, 27, 42, 71, 71, 75, 47, 82, 20, 67, 81, 72, 65, 27, 78, 20, 92, 68, 3, 23, 90, 33, 48, 46, 93, 81, 80, 68, 92, 79, 99, 20, 26, 41, 79, 87, 23, 78, 98, 29, 84, 51, 95, 27, 75, 37, 61, 32, 35, 74, 39, 10, 34, 62, 83, 33, 77, 41, 54, 8, 21, 84, 71, 69, 56, 72, 72, 51, 85, 47, 66, 16, 96, 28, 43, 20, 89, 33, 20, 69, 11, 20, 53, 47, 96, 34, 51, 89, 58, 11, 82, 69, 34, 51, 29, 57, 52, 76, 28, 43, 63, 84, 67, 64, 45, 20, 59, 38, 89, 23, 58, 78, 90, 95, 86, 68, 71, 73, 16, 22, 45, 45, 24, 81, 44, 93, 74, 86, 23, 55, 10, 92, 45, 41, 81, 63, 60, 47, 20, 46, 47, 10, 50, 45, 26, 24, 26, 72, 14, 66, 84, 80, 9, 44, 15, 22, 72, 22, 36, 75, 49, 60, 58, 9, 57, 20, 20, 52, 11, 55, 32, 7, 47, 67, 37, 9, 87, 36, 76, 100, 69, 22, 67, 57, 3, 66, 61, 84, 100, 100, 39, 94, 10, 30, 91, 11, 96, 1, 39, 100, 60, 89, 36, 7, 51, 88, 92, 86, 82, 14, 80, 28, 57, 47, 87, 65, 93, 96, 82, 91, 10, 22, 52, 98, 53, 75, 42, 83, 64, 68, 24, 89, 77]
last_save: 72

Gen:251
last_save: 72
Exit:FalseFalseTrue

Gen:1
TrainFitness:0.8037974683544303
TestFitness:0.8076923076923077
MaxGenLen:400
Individual: def p():
  def adf0(index):
    if np.less(x[index],92082.74578):
      return True
    else:
      return True
  def adf1(index):
    if np.greater(x[index],53633.36437):
      return False
    else:
      return True
  def adf2(index):
    if np.less(x[index],94990.74936):
      return True
    else:
      return True
  def adf3(index):
    if np.greater(x[index],47139.92963):
      return True
    else:
      return False
  def adf4(index):
    if np.less(x[index],27339.12760):
      return True
    else:
      return True
  def adf5(index):
    if np.equal(x[index],11815.61857):
      return False
    else:
      return False
  def adf6(index):
    if np.greater(x[index],10615.56212):
      return True
    else:
      return True
  def adf7(index):
    if np.equal(x[index],50081.09589):
      return True
    else:
      return True
  def adf8(index):
    if np.less(x[index],69162.33035):
      return True
    else:
      return False
  return multiple_operation([adf0(0)*+94.01, adf1(1)*-70.07, adf2(2)*+52.95, adf3(3)*-63.35, adf4(4)*+86.89, adf5(5)*-26.23, adf6(6)*+62.34, adf7(7)*-51.81, adf8(8)*+57.66], 47.09)
result=p(); 0.8037974683544303
IndLenGenome:339
IndGenome:[7, 46, 51, 7, 40, 27, 22, 40, 34, 20, 43, 22, 70, 76, 90, 58, 27, 17, 34, 68, 72, 74, 22, 55, 40, 79, 79, 97, 58, 49, 30, 84, 48, 18, 90, 72, 29, 30, 95, 79, 79, 10, 76, 51, 7, 47, 26, 90, 69, 31, 95, 15, 69, 61, 12, 14, 10, 74, 97, 28, 27, 50, 27, 20, 22, 75, 68, 62, 50, 18, 18, 25, 48, 31, 21, 71, 23, 63, 48, 26, 95, 34, 90, 31, 55, 52, 13, 84, 83, 19, 56, 30, 43, 59, 47, 40, 71, 73, 98, 57, 66, 34, 41, 70, 93, 95, 5, 88, 92, 60, 32, 65, 28, 59, 48, 17, 27, 36, 38, 52, 19, 95, 83, 37, 26, 26, 52, 97, 82, 33, 55, 36, 55, 66, 15, 66, 56, 30, 77, 71, 96, 93, 91, 41, 88, 33, 61, 36, 95, 37, 66, 81, 58, 99, 82, 36, 94, 16, 70, 60, 79, 51, 53, 49, 8, 97, 48, 73, 94, 85, 46, 46, 30, 95, 63, 99, 12, 16, 25, 89, 18, 30, 46, 28, 51, 50, 83, 72, 38, 56, 82, 32, 88, 36, 69, 73, 79, 63, 27, 73, 69, 34, 12, 39, 91, 18, 47, 93, 91, 52, 17, 25, 83, 87, 29, 73, 29, 97, 89, 84, 70, 73, 73, 98, 62, 12, 13, 74, 92, 83, 41, 45, 21, 31, 68, 60, 92, 62, 12, 95, 13, 92, 4, 33, 1, 80, 72, 44, 27, 92, 81, 44, 77, 86, 73, 58, 94, 31, 76, 51, 22, 68, 64, 23, 26, 86, 69, 80, 79, 46, 40, 100, 77, 51, 61, 36, 17, 22, 46, 84, 42, 56, 20, 60, 91, 81, 85, 22, 98, 74, 34, 24, 22, 13, 100, 76, 24, 63, 87, 52, 21, 67, 7, 22, 61, 66, 55, 75, 97, 69, 58, 71, 54, 34, 31, 72, 51, 47, 20, 20, 82, 45, 80, 17, 16, 82, 72, 85, 75, 66, 76, 29, 35, 85, 8, 96, 44, 35, 23]
last_save: 72

Gen:251
last_save: 72
Exit:FalseFalseTrue

Gen:1
TrainFitness:0.8037974683544303
TestFitness:0.8076923076923077
MaxGenLen:400
Individual: def p():
  def adf0(index):
    if np.greater(x[index],73352.96073):
      return False
    else:
      return True
  def adf1(index):
    if np.less(x[index],72273.87093):
      return False
    else:
      return False
  def adf2(index):
    if np.greater(x[index],22020.75746):
      return True
    else:
      return False
  def adf3(index):
    if np.greater(x[index],49928.30310):
      return False
    else:
      return True
  def adf4(index):
    if np.less(x[index],83658.26312):
      return False
    else:
      return True
  def adf5(index):
    if np.greater(x[index],05343.07190):
      return True
    else:
      return True
  def adf6(index):
    if np.equal(x[index],40638.41875):
      return False
    else:
      return False
  def adf7(index):
    if np.equal(x[index],52301.71300):
      return True
    else:
      return True
  def adf8(index):
    if np.less(x[index],48167.91212):
      return True
    else:
      return True
  return multiple_operation([adf0(0)*+11.69, adf1(1)*-25.12, adf2(2)*+54.95, adf3(3)*+74.21, adf4(4)*-33.37, adf5(5)*-79.65, adf6(6)*-29.05, adf7(7)*-14.92, adf8(8)*+43.10], 05.49)
result=p(); 0.8037974683544303
IndLenGenome:339
IndGenome:[23, 29, 76, 12, 15, 67, 70, 93, 43, 53, 1, 77, 45, 12, 97, 77, 35, 65, 42, 36, 70, 25, 13, 55, 64, 79, 43, 41, 85, 77, 80, 90, 60, 12, 16, 64, 10, 5, 89, 20, 16, 25, 91, 53, 45, 55, 15, 60, 82, 40, 59, 42, 30, 60, 65, 98, 90, 62, 90, 93, 15, 37, 92, 21, 74, 61, 77, 74, 68, 14, 12, 54, 1, 49, 30, 49, 6, 77, 89, 15, 56, 22, 70, 40, 89, 63, 35, 36, 53, 73, 60, 9, 72, 43, 89, 45, 27, 85, 31, 13, 70, 53, 64, 59, 72, 67, 74, 30, 41, 71, 59, 21, 54, 70, 33, 31, 56, 2, 30, 94, 73, 52, 61, 35, 80, 20, 32, 12, 25, 31, 15, 63, 53, 21, 86, 47, 37, 43, 86, 22, 85, 36, 85, 71, 37, 87, 10, 57, 50, 38, 11, 87, 65, 34, 43, 33, 90, 82, 83, 65, 96, 30, 94, 24, 28, 25, 30, 61, 76, 81, 53, 92, 62, 33, 13, 74, 35, 26, 81, 3, 82, 59, 61, 60, 68, 62, 92, 76, 78, 48, 99, 76, 40, 48, 40, 45, 14, 23, 22, 53, 30, 31, 15, 31, 84, 17, 71, 87, 63, 92, 28, 77, 17, 19, 49, 37, 10, 47, 72, 96, 68, 92, 52, 84, 20, 44, 40, 29, 95, 62, 89, 49, 98, 5, 78, 99, 65, 43, 20, 51, 70, 9, 93, 83, 37, 54, 53, 25, 24, 36, 24, 80, 46, 1, 23, 85, 76, 12, 65, 61, 55, 30, 78, 36, 59, 82, 21, 24, 39, 75, 28, 65, 2, 42, 62, 1, 80, 56, 84, 72, 12, 86, 99, 32, 12, 78, 73, 14, 9, 91, 58, 11, 6, 80, 84, 49, 68, 61, 89, 28, 5, 16, 90, 55, 72, 63, 16, 45, 95, 94, 66, 14, 92, 75, 63, 20, 76, 90, 83, 87, 50, 15, 96, 43, 74, 95, 19, 76, 86, 68, 29, 7, 37, 15, 43, 44, 25, 35, 84]
last_save: 72

Gen:20
TrainFitness:0.8069620253164557
TestFitness:0.8076923076923077
MaxGenLen:400
Individual: def p():
  def adf0(index):
    if np.equal(x[index],51020.57709):
      if np.equal(x[index],73255.54288):
        return True
      else:
        return False
    else:
      if np.greater(x[index],82531.58597):
        return False
      else:
        return True
  def adf1(index):
    if np.equal(x[index],44216.16528):
      return False
    else:
      return False
  def adf2(index):
    if np.equal(x[index],76409.74006):
      if np.greater(x[index],08380.22462):
        return True
      else:
        return True
    else:
      if np.greater(x[index],52656.38459):
        return False
      else:
        return False
  def adf3(index):
    if np.greater(x[index],12624.60292):
      return True
    else:
      return False
  def adf4(index):
    if np.less(x[index],92242.98809):
      if np.equal(x[index],59680.07631):
        return False
      else:
        return False
    else:
      if np.less(x[index],94539.52801):
        return True
      else:
        return False
  def adf5(index):
    if np.greater(x[index],47844.38346):
      return True
    else:
      return True
  def adf6(index):
    if np.greater(x[index],94998.11588):
      return False
    else:
      return True
  def adf7(index):
    if np.less(x[index],03043.53253):
      if np.greater(x[index],45791.81225):
        return False
      else:
        return True
    else:
      if np.equal(x[index],22744.43267):
        return True
      else:
        return False
  def adf8(index):
    if np.greater(x[index],81758.22511):
      if np.less(x[index],00352.48399):
        return True
      else:
        return True
    else:
      if np.equal(x[index],73202.91298):
        return False
      else:
        return False
  return multiple_operation([adf0(0)*+36.59, adf1(1)*+86.78, adf2(2)*+20.22, adf3(3)*+90.54, adf4(4)*+46.36, adf5(5)*-40.93, adf6(6)*+07.02, adf7(7)*+46.19, adf8(8)*+52.67], 39.40)
result=p(); 0.8069620253164557
IndLenGenome:373
IndGenome:[94, 7, 84, 61, 35, 35, 35, 55, 31, 80, 12, 80, 15, 27, 27, 40, 69, 35, 50, 66, 27, 83, 12, 55, 25, 95, 34, 22, 98, 28, 78, 65, 89, 84, 4, 28, 22, 15, 3, 41, 85, 38, 95, 19, 27, 33, 22, 50, 30, 55, 59, 74, 54, 54, 72, 61, 46, 81, 16, 85, 22, 78, 47, 5, 59, 31, 65, 29, 12, 37, 76, 54, 30, 59, 97, 94, 80, 40, 96, 90, 33, 47, 40, 8, 63, 88, 60, 22, 12, 34, 96, 12, 70, 28, 91, 18, 64, 15, 42, 16, 5, 26, 83, 48, 34, 25, 39, 71, 55, 27, 10, 62, 30, 63, 41, 52, 76, 2, 34, 86, 10, 62, 9, 62, 98, 79, 76, 81, 79, 22, 54, 69, 42, 22, 14, 32, 19, 48, 98, 40, 59, 68, 68, 83, 55, 79, 36, 58, 90, 20, 57, 26, 33, 91, 53, 33, 93, 25, 42, 59, 74, 35, 33, 69, 75, 72, 18, 90, 31, 94, 99, 86, 60, 97, 87, 22, 4, 47, 88, 14, 64, 93, 78, 93, 4, 36, 62, 70, 49, 70, 60, 24, 83, 99, 24, 39, 49, 48, 71, 21, 15, 58, 68, 41, 82, 40, 81, 90, 16, 77, 30, 23, 0, 14, 33, 15, 93, 82, 95, 23, 41, 69, 27, 14, 35, 77, 59, 41, 98, 11, 92, 52, 25, 3, 62, 87, 80, 99, 2, 62, 67, 64, 84, 44, 93, 22, 86, 47, 68, 15, 11, 46, 95, 54, 69, 48, 41, 47, 55, 68, 42, 72, 15, 81, 81, 100, 19, 90, 40, 40, 93, 5, 82, 34, 98, 73, 9, 9, 8, 8, 38, 56, 29, 37, 83, 92, 10, 62, 49, 51, 82, 99, 8, 49, 51, 82, 99, 8, 76, 60, 33, 16, 55, 39, 44, 42, 15, 98, 66, 77, 98, 20, 16, 56, 72, 70, 82, 52, 49, 4, 0, 9, 20, 95, 34, 74, 66, 100, 14, 16, 73, 26, 6, 71, 34, 94, 90, 99, 23, 97, 52, 85, 100, 7, 40, 72, 30, 4, 5, 24, 6, 51, 99, 19, 4, 62, 5, 32, 56, 67, 64, 43, 99, 94, 100, 28, 36, 20, 83, 74, 86, 78, 12]
last_save: 72

Gen:42
TrainFitness:0.810126582278481
TestFitness:0.8269230769230769
MaxGenLen:400
Individual: def p():
  def adf0(index):
    if np.equal(x[index],51020.57709):
      if np.equal(x[index],73255.54288):
        return True
      else:
        return False
    else:
      if np.greater(x[index],82531.58591):
        return False
      else:
        return True
  def adf1(index):
    if np.equal(x[index],44216.16728):
      return False
    else:
      return False
  def adf2(index):
    if np.equal(x[index],76409.94006):
      if np.greater(x[index],08380.22462):
        return True
      else:
        return True
    else:
      if np.greater(x[index],52656.38459):
        return False
      else:
        return False
  def adf3(index):
    if np.greater(x[index],12624.60292):
      return True
    else:
      return False
  def adf4(index):
    if np.less(x[index],92242.98809):
      if np.equal(x[index],59680.07631):
        return False
      else:
        return False
    else:
      if np.less(x[index],94039.52801):
        return True
      else:
        return False
  def adf5(index):
    if np.greater(x[index],47844.38346):
      return True
    else:
      return True
  def adf6(index):
    if np.greater(x[index],94998.11588):
      return False
    else:
      return True
  def adf7(index):
    if np.less(x[index],02043.53253):
      if np.greater(x[index],45791.81225):
        return False
      else:
        return True
    else:
      if np.equal(x[index],22744.43267):
        return True
      else:
        return False
  def adf8(index):
    if np.greater(x[index],81758.22511):
      if np.less(x[index],00352.48399):
        return True
      else:
        return True
    else:
      if np.equal(x[index],73207.91298):
        return False
      else:
        return False
  return multiple_operation([adf0(0)*+36.59, adf1(1)*+86.78, adf2(2)*+20.22, adf3(3)*+90.54, adf4(4)*+46.36, adf5(5)*-40.93, adf6(6)*+07.02, adf7(7)*+46.19, adf8(8)*+52.67], 39.40)
result=p(); 0.810126582278481
IndLenGenome:373
IndGenome:[94, 7, 84, 61, 35, 35, 6, 55, 31, 80, 12, 80, 15, 27, 27, 40, 69, 35, 50, 66, 27, 83, 12, 55, 25, 95, 34, 22, 98, 28, 78, 65, 89, 84, 4, 28, 22, 15, 3, 41, 85, 38, 95, 19, 11, 33, 22, 50, 30, 55, 59, 74, 54, 54, 72, 61, 46, 81, 16, 37, 22, 78, 47, 5, 59, 31, 65, 29, 12, 37, 76, 54, 30, 59, 99, 94, 80, 40, 96, 90, 33, 47, 40, 8, 63, 88, 60, 22, 12, 34, 96, 12, 70, 28, 91, 18, 64, 15, 42, 16, 5, 26, 83, 48, 34, 25, 39, 71, 55, 27, 10, 62, 30, 63, 41, 52, 76, 2, 34, 86, 10, 62, 9, 62, 98, 5, 51, 81, 79, 22, 54, 69, 42, 22, 14, 32, 19, 48, 98, 40, 59, 68, 68, 83, 55, 79, 36, 58, 90, 20, 57, 26, 33, 91, 53, 33, 93, 25, 42, 59, 74, 10, 33, 69, 75, 72, 18, 90, 31, 94, 99, 86, 60, 97, 87, 22, 4, 47, 88, 14, 64, 93, 78, 93, 4, 36, 62, 70, 49, 70, 60, 24, 83, 99, 24, 39, 49, 48, 71, 21, 15, 58, 68, 41, 82, 40, 81, 90, 16, 4, 30, 22, 0, 14, 33, 15, 93, 82, 95, 23, 41, 69, 27, 14, 35, 77, 59, 41, 98, 11, 92, 52, 25, 3, 62, 87, 92, 99, 2, 62, 67, 64, 84, 44, 93, 22, 86, 47, 68, 15, 11, 46, 95, 54, 69, 48, 41, 47, 55, 68, 42, 72, 15, 81, 81, 100, 19, 90, 40, 40, 93, 5, 82, 34, 98, 73, 9, 9, 8, 8, 38, 56, 29, 37, 83, 92, 10, 17, 49, 51, 82, 99, 8, 49, 51, 82, 99, 8, 76, 60, 33, 16, 55, 39, 44, 42, 15, 98, 66, 77, 98, 20, 16, 56, 72, 70, 82, 52, 87, 4, 0, 9, 20, 95, 34, 74, 66, 100, 14, 16, 73, 26, 6, 21, 34, 94, 90, 99, 23, 97, 52, 85, 100, 7, 40, 72, 30, 4, 5, 24, 6, 51, 99, 19, 4, 62, 5, 32, 56, 67, 64, 43, 99, 94, 100, 28, 36, 20, 83, 74, 86, 78, 12]
last_save: 72

Gen:292
last_save: 72
Exit:FalseFalseTrue