Dataset:Spiral/new_Full.csv
FS:False
Seed:1234
Size:10

Gen:1
TrainFitness:0.806060606060606
TestFitness:0.7894736842105263
MaxGenLen:400
Individual: def p():
  def adf0(index):
    if np.greater(x[index],49912.38832):
      return True
    else:
      return False
  def adf1(index):
    if np.less(x[index],88218.20052):
      return True
    else:
      return True
  def adf2(index):
    if np.equal(x[index],46604.60734):
      return False
    else:
      return True
  def adf3(index):
    if np.less(x[index],82344.57435):
      return False
    else:
      return True
  def adf4(index):
    if np.equal(x[index],33565.68272):
      return True
    else:
      return True
  def adf5(index):
    if np.less(x[index],48912.33051):
      return False
    else:
      return True
  def adf6(index):
    if np.less(x[index],37261.33490):
      return False
    else:
      return True
  def adf7(index):
    if np.greater(x[index],33284.60033):
      return False
    else:
      return False
  def adf8(index):
    if np.less(x[index],34926.33879):
      return False
    else:
      return True
  return multiple_operation([adf0(0)*+83.65, adf1(1)*+05.63, adf2(2)*+88.30, adf3(3)*+69.35, adf4(4)*+35.35, adf5(5)*-69.93, adf6(6)*-58.80, adf7(7)*-66.87, adf8(8)*-34.62], 82.81)
result=p(); 0.806060606060606
IndLenGenome:339
IndGenome:[74, 12, 66, 78, 91, 65, 71, 20, 85, 47, 77, 71, 7, 76, 5, 45, 73, 73, 28, 32, 95, 40, 98, 12, 61, 35, 46, 40, 66, 38, 40, 72, 45, 1, 28, 38, 76, 35, 62, 5, 51, 55, 30, 53, 35, 66, 37, 32, 75, 60, 14, 84, 85, 97, 52, 98, 86, 62, 80, 40, 33, 87, 58, 98, 25, 12, 87, 35, 95, 35, 73, 39, 58, 72, 69, 92, 32, 74, 90, 63, 33, 24, 53, 23, 69, 39, 68, 35, 58, 59, 24, 73, 78, 11, 63, 23, 4, 28, 72, 21, 65, 31, 10, 67, 49, 51, 70, 53, 64, 26, 90, 86, 56, 46, 33, 3, 87, 99, 56, 90, 51, 48, 19, 46, 48, 78, 94, 29, 27, 68, 76, 22, 80, 82, 45, 22, 86, 40, 56, 23, 58, 92, 87, 33, 39, 76, 85, 36, 13, 70, 34, 46, 30, 16, 76, 83, 55, 57, 29, 29, 83, 69, 94, 64, 63, 75, 65, 41, 16, 73, 29, 86, 98, 73, 12, 72, 93, 95, 22, 41, 73, 44, 14, 14, 23, 30, 9, 3, 68, 43, 93, 18, 75, 83, 44, 73, 40, 32, 15, 29, 27, 13, 18, 33, 61, 3, 95, 24, 48, 55, 98, 56, 99, 62, 48, 24, 26, 70, 93, 23, 98, 31, 57, 48, 88, 95, 50, 16, 67, 2, 82, 62, 92, 12, 5, 94, 71, 70, 96, 19, 18, 5, 100, 55, 54, 56, 51, 5, 38, 9, 33, 97, 5, 5, 39, 23, 2, 80, 48, 12, 95, 1, 45, 64, 34, 27, 75, 34, 59, 72, 90, 44, 78, 19, 5, 66, 57, 56, 83, 72, 97, 53, 47, 98, 4, 86, 69, 52, 54, 11, 43, 55, 7, 78, 13, 35, 58, 53, 97, 75, 20, 92, 84, 39, 46, 69, 96, 61, 42, 3, 75, 81, 34, 25, 63, 30, 20, 61, 33, 3, 39, 55, 62, 47, 60, 3, 78, 2, 16, 10, 81, 26, 98, 84, 1, 38, 24, 3, 73]
last_save: 100

Gen:251
last_save: 100
Exit:FalseFalseTrue

Gen:1
TrainFitness:0.806060606060606
TestFitness:0.7894736842105263
MaxGenLen:400
Individual: def p():
  def adf0(index):
    if np.equal(x[index],39987.04841):
      return False
    else:
      return True
  def adf1(index):
    if np.equal(x[index],71109.43875):
      return True
    else:
      return False
  def adf2(index):
    if np.less(x[index],82771.06597):
      return False
    else:
      return False
  def adf3(index):
    if np.greater(x[index],29283.23180):
      return True
    else:
      return True
  def adf4(index):
    if np.equal(x[index],11072.80641):
      return False
    else:
      return True
  def adf5(index):
    if np.greater(x[index],46555.95493):
      return False
    else:
      return True
  def adf6(index):
    if np.greater(x[index],03926.86312):
      return False
    else:
      return False
  def adf7(index):
    if np.less(x[index],70351.53819):
      return True
    else:
      return True
  def adf8(index):
    if np.equal(x[index],01071.02263):
      return True
    else:
      return True
  return multiple_operation([adf0(0)*+00.48, adf1(1)*-51.62, adf2(2)*+58.74, adf3(3)*+49.31, adf4(4)*+42.39, adf5(5)*+33.86, adf6(6)*-79.95, adf7(7)*+17.59, adf8(8)*-23.80], 91.92)
result=p(); 0.806060606060606
IndLenGenome:339
IndGenome:[95, 72, 13, 48, 24, 75, 43, 80, 6, 48, 70, 39, 64, 17, 90, 28, 3, 5, 22, 2, 10, 67, 4, 86, 90, 67, 10, 6, 55, 55, 4, 23, 9, 89, 22, 29, 86, 14, 36, 55, 78, 84, 13, 45, 76, 17, 23, 50, 29, 85, 97, 13, 87, 53, 37, 32, 80, 30, 19, 83, 10, 67, 57, 18, 38, 10, 20, 54, 59, 96, 33, 32, 40, 10, 38, 40, 45, 35, 11, 60, 32, 94, 19, 72, 98, 40, 31, 99, 98, 16, 65, 11, 58, 11, 18, 27, 94, 25, 81, 54, 81, 81, 49, 84, 27, 32, 57, 25, 25, 68, 28, 53, 51, 63, 21, 57, 58, 18, 17, 60, 52, 10, 25, 55, 69, 62, 29, 28, 53, 45, 41, 34, 51, 83, 66, 24, 92, 13, 46, 23, 42, 59, 12, 43, 39, 70, 81, 79, 10, 91, 42, 79, 68, 24, 32, 41, 69, 60, 39, 95, 92, 74, 16, 41, 97, 40, 95, 49, 66, 53, 70, 40, 16, 67, 88, 37, 27, 62, 95, 13, 59, 52, 70, 11, 13, 32, 66, 67, 65, 13, 83, 92, 50, 48, 78, 51, 39, 8, 55, 21, 25, 40, 75, 60, 41, 86, 68, 26, 6, 84, 67, 90, 49, 25, 20, 74, 61, 29, 97, 93, 19, 68, 34, 44, 68, 85, 12, 36, 22, 19, 24, 56, 43, 100, 82, 76, 37, 22, 4, 85, 42, 85, 83, 39, 4, 48, 68, 0, 48, 81, 13, 60, 94, 61, 39, 100, 56, 6, 47, 100, 78, 19, 74, 57, 63, 54, 2, 53, 76, 74, 10, 35, 98, 9, 80, 51, 55, 71, 86, 11, 93, 6, 64, 0, 31, 53, 75, 1, 38, 35, 86, 17, 1, 17, 94, 8, 86, 23, 72, 11, 44, 31, 8, 44, 80, 18, 33, 76, 62, 20, 9, 11, 40, 58, 5, 24, 47, 59, 70, 70, 68, 47, 95, 75, 82, 94, 63, 5, 81, 45, 15, 29, 77, 62, 85, 38, 76, 73, 77]
last_save: 100

Gen:251
last_save: 100
Exit:FalseFalseTrue

Gen:1
TrainFitness:0.8036253776435045
TestFitness:0.8108108108108109
MaxGenLen:400
Individual: def p():
  def adf0(index):
    if np.equal(x[index],95114.07493):
      return True
    else:
      return False
  def adf1(index):
    if np.greater(x[index],43308.71087):
      return True
    else:
      return False
  def adf2(index):
    if np.equal(x[index],88403.42288):
      return False
    else:
      return False
  def adf3(index):
    if np.equal(x[index],09814.17703):
      return False
    else:
      return False
  def adf4(index):
    if np.equal(x[index],35701.73248):
      return False
    else:
      return True
  def adf5(index):
    if np.less(x[index],13587.38814):
      return False
    else:
      return False
  def adf6(index):
    if np.less(x[index],17360.23493):
      return False
    else:
      return True
  def adf7(index):
    if np.less(x[index],79255.08650):
      return True
    else:
      return False
  def adf8(index):
    if np.greater(x[index],62975.46805):
      return True
    else:
      return True
  return multiple_operation([adf0(0)*+21.56, adf1(1)*-65.60, adf2(2)*+47.02, adf3(3)*+08.87, adf4(4)*-65.00, adf5(5)*-06.19, adf6(6)*-76.85, adf7(7)*+95.12, adf8(8)*+39.33], 30.54)
result=p(); 0.8036253776435045
IndLenGenome:339
IndGenome:[88, 31, 81, 72, 75, 64, 6, 69, 90, 99, 47, 50, 30, 46, 55, 44, 98, 67, 3, 35, 74, 11, 35, 33, 21, 74, 15, 63, 40, 13, 9, 56, 93, 70, 20, 65, 5, 32, 92, 88, 59, 61, 10, 64, 96, 40, 48, 80, 43, 26, 75, 62, 45, 84, 19, 19, 98, 86, 30, 26, 60, 20, 72, 59, 87, 50, 27, 81, 76, 41, 95, 10, 39, 67, 37, 1, 10, 76, 48, 88, 47, 69, 44, 77, 75, 89, 53, 63, 21, 37, 31, 20, 78, 34, 20, 54, 59, 45, 44, 77, 78, 9, 31, 65, 32, 93, 19, 24, 91, 21, 82, 26, 29, 11, 88, 90, 97, 41, 14, 3, 24, 48, 48, 49, 40, 28, 13, 70, 67, 47, 15, 13, 86, 44, 24, 65, 8, 29, 31, 75, 53, 68, 25, 14, 45, 80, 29, 61, 17, 30, 77, 57, 56, 19, 22, 83, 68, 62, 28, 57, 53, 62, 18, 64, 33, 62, 43, 23, 85, 48, 90, 31, 77, 40, 34, 40, 94, 33, 57, 84, 12, 31, 88, 52, 93, 43, 27, 88, 40, 69, 82, 57, 18, 88, 58, 84, 69, 34, 68, 45, 23, 24, 37, 79, 46, 61, 81, 85, 77, 88, 60, 61, 90, 16, 58, 38, 49, 22, 63, 44, 86, 8, 43, 15, 60, 85, 90, 22, 52, 98, 63, 72, 33, 55, 74, 42, 3, 45, 67, 82, 60, 32, 18, 44, 67, 32, 66, 61, 64, 98, 94, 14, 37, 53, 92, 65, 34, 15, 39, 75, 24, 68, 56, 93, 26, 49, 45, 41, 49, 10, 28, 30, 56, 52, 36, 67, 22, 64, 90, 7, 99, 49, 62, 10, 43, 53, 93, 99, 11, 11, 39, 41, 93, 77, 80, 52, 80, 90, 79, 76, 29, 37, 55, 81, 65, 68, 33, 36, 42, 55, 0, 0, 82, 14, 71, 56, 74, 44, 48, 24, 38, 44, 6, 44, 16, 84, 50, 28, 57, 1, 45, 37, 79, 75, 32, 65, 47, 45, 53]
last_save: 100

Gen:251
last_save: 100
Exit:FalseFalseTrue

Gen:1
TrainFitness:0.8036253776435045
TestFitness:0.8108108108108109
MaxGenLen:400
Individual: def p():
  def adf0(index):
    if np.less(x[index],32023.39204):
      return False
    else:
      return False
  def adf1(index):
    if np.greater(x[index],00544.95799):
      return False
    else:
      return True
  def adf2(index):
    if np.greater(x[index],55494.64272):
      return True
    else:
      return False
  def adf3(index):
    if np.greater(x[index],36123.58991):
      return False
    else:
      return True
  def adf4(index):
    if np.equal(x[index],63710.97943):
      return False
    else:
      return True
  def adf5(index):
    if np.equal(x[index],65403.68990):
      return False
    else:
      return False
  def adf6(index):
    if np.greater(x[index],19174.27799):
      return True
    else:
      return False
  def adf7(index):
    if np.greater(x[index],92431.97900):
      return False
    else:
      return True
  def adf8(index):
    if np.equal(x[index],38908.12715):
      return True
    else:
      return True
  return multiple_operation([adf0(0)*+48.86, adf1(1)*+29.05, adf2(2)*-44.95, adf3(3)*+28.56, adf4(4)*-42.38, adf5(5)*+36.32, adf6(6)*+35.13, adf7(7)*+00.72, adf8(8)*+78.76], 49.34)
result=p(); 0.8036253776435045
IndLenGenome:339
IndGenome:[19, 2, 88, 4, 57, 4, 8, 65, 59, 82, 18, 65, 70, 25, 63, 88, 86, 98, 50, 6, 32, 5, 30, 7, 80, 33, 51, 5, 35, 72, 35, 24, 15, 54, 32, 36, 44, 69, 62, 81, 29, 44, 21, 10, 20, 44, 26, 83, 82, 83, 29, 74, 64, 53, 54, 81, 73, 88, 92, 41, 98, 82, 95, 55, 76, 33, 90, 20, 67, 87, 77, 53, 62, 64, 99, 48, 35, 15, 22, 74, 89, 80, 57, 68, 45, 59, 33, 67, 81, 93, 22, 57, 95, 13, 44, 28, 27, 74, 64, 95, 73, 39, 72, 16, 30, 69, 92, 29, 15, 85, 59, 15, 53, 79, 34, 96, 4, 65, 79, 44, 61, 17, 23, 73, 92, 70, 96, 86, 8, 88, 95, 35, 52, 45, 38, 32, 55, 96, 34, 35, 84, 7, 17, 47, 12, 43, 79, 72, 45, 18, 1, 46, 66, 56, 32, 94, 79, 83, 18, 42, 69, 30, 81, 32, 10, 18, 61, 89, 47, 19, 69, 74, 77, 13, 22, 73, 89, 75, 54, 46, 16, 52, 81, 66, 97, 10, 11, 13, 89, 47, 49, 60, 82, 62, 39, 10, 53, 43, 71, 25, 50, 97, 93, 30, 78, 32, 24, 11, 13, 79, 54, 85, 70, 89, 42, 14, 86, 52, 97, 92, 65, 22, 14, 14, 39, 85, 45, 78, 50, 99, 65, 13, 55, 32, 39, 36, 98, 72, 64, 85, 63, 5, 50, 6, 90, 65, 41, 14, 92, 30, 16, 53, 9, 65, 88, 69, 62, 100, 38, 11, 72, 72, 47, 85, 27, 65, 65, 50, 10, 85, 21, 95, 70, 89, 96, 86, 96, 66, 88, 97, 96, 80, 50, 73, 56, 21, 28, 27, 35, 24, 9, 39, 32, 25, 42, 15, 92, 10, 37, 38, 17, 49, 8, 5, 61, 40, 21, 51, 7, 20, 65, 76, 14, 88, 32, 40, 50, 62, 80, 65, 58, 9, 87, 18, 91, 42, 73, 79, 49, 4, 74, 16, 65, 58, 63, 65, 19, 32, 21]
last_save: 100

Gen:251
last_save: 100
Exit:FalseFalseTrue

Gen:1
TrainFitness:0.8036253776435045
TestFitness:0.8108108108108109
MaxGenLen:400
Individual: def p():
  def adf0(index):
    if np.greater(x[index],96385.85366):
      return True
    else:
      return True
  def adf1(index):
    if np.less(x[index],75803.38898):
      return False
    else:
      return False
  def adf2(index):
    if np.greater(x[index],35163.31503):
      return True
    else:
      return True
  def adf3(index):
    if np.greater(x[index],56936.28453):
      return True
    else:
      return True
  def adf4(index):
    if np.greater(x[index],35100.31972):
      return False
    else:
      return True
  def adf5(index):
    if np.equal(x[index],59368.64494):
      return False
    else:
      return False
  def adf6(index):
    if np.less(x[index],72883.70485):
      return False
    else:
      return True
  def adf7(index):
    if np.greater(x[index],98153.26508):
      return True
    else:
      return False
  def adf8(index):
    if np.greater(x[index],86528.04012):
      return False
    else:
      return True
  return multiple_operation([adf0(0)*+38.11, adf1(1)*+12.72, adf2(2)*+90.38, adf3(3)*-47.99, adf4(4)*-08.04, adf5(5)*-34.54, adf6(6)*-33.88, adf7(7)*+07.84, adf8(8)*+57.75], 47.55)
result=p(); 0.8036253776435045
IndLenGenome:339
IndGenome:[78, 12, 82, 60, 20, 50, 34, 10, 98, 59, 20, 80, 25, 19, 57, 10, 16, 92, 55, 74, 20, 61, 74, 46, 96, 49, 53, 95, 26, 24, 35, 40, 18, 5, 17, 35, 90, 20, 79, 88, 36, 30, 51, 49, 40, 99, 43, 88, 17, 16, 33, 74, 69, 59, 86, 55, 92, 64, 74, 62, 19, 96, 36, 33, 26, 56, 30, 12, 72, 77, 31, 8, 12, 24, 56, 47, 53, 85, 94, 23, 49, 17, 80, 44, 51, 34, 80, 88, 53, 16, 78, 53, 84, 58, 56, 11, 82, 89, 75, 63, 33, 26, 10, 28, 13, 31, 59, 61, 14, 40, 46, 38, 57, 87, 41, 90, 24, 45, 99, 57, 73, 98, 99, 63, 75, 2, 63, 75, 87, 98, 36, 58, 48, 52, 87, 85, 93, 65, 53, 16, 10, 40, 22, 64, 38, 86, 77, 76, 40, 31, 98, 13, 43, 55, 31, 82, 42, 98, 20, 55, 84, 24, 38, 29, 11, 66, 45, 57, 11, 81, 27, 60, 14, 50, 94, 80, 14, 49, 60, 69, 75, 49, 85, 33, 56, 20, 95, 13, 98, 61, 15, 78, 86, 73, 33, 60, 78, 35, 68, 58, 25, 50, 17, 28, 33, 12, 81, 88, 43, 90, 84, 39, 86, 13, 77, 48, 18, 87, 28, 49, 62, 13, 28, 28, 33, 38, 77, 56, 78, 26, 99, 59, 32, 60, 89, 51, 29, 89, 45, 22, 27, 8, 5, 32, 7, 74, 31, 11, 53, 18, 96, 30, 19, 56, 22, 88, 78, 97, 2, 16, 68, 88, 87, 35, 2, 53, 100, 81, 98, 100, 15, 25, 14, 79, 49, 86, 9, 14, 5, 13, 43, 98, 43, 84, 51, 79, 67, 48, 17, 69, 48, 63, 42, 84, 61, 92, 44, 69, 13, 73, 13, 32, 11, 6, 42, 42, 73, 4, 20, 55, 23, 95, 17, 21, 44, 87, 83, 0, 87, 61, 6, 13, 46, 45, 19, 92, 4, 37, 3, 69, 77, 90, 27, 78, 16, 8, 96, 14, 12]
last_save: 100

Gen:251
last_save: 100
Exit:FalseFalseTrue

Gen:1
TrainFitness:0.8036253776435045
TestFitness:0.8108108108108109
MaxGenLen:400
Individual: def p():
  def adf0(index):
    if np.greater(x[index],54797.94596):
      return True
    else:
      return True
  def adf1(index):
    if np.greater(x[index],27370.80916):
      return False
    else:
      return False
  def adf2(index):
    if np.less(x[index],52582.58270):
      return True
    else:
      return True
  def adf3(index):
    if np.greater(x[index],55802.76218):
      return True
    else:
      return True
  def adf4(index):
    if np.less(x[index],45706.22890):
      return False
    else:
      return False
  def adf5(index):
    if np.equal(x[index],64380.17083):
      return True
    else:
      return False
  def adf6(index):
    if np.less(x[index],56720.24629):
      return False
    else:
      return True
  def adf7(index):
    if np.greater(x[index],38581.15780):
      return True
    else:
      return True
  def adf8(index):
    if np.less(x[index],37973.44365):
      return False
    else:
      return True
  return multiple_operation([adf0(0)*+21.05, adf1(1)*+07.91, adf2(2)*+97.98, adf3(3)*+85.81, adf4(4)*+74.73, adf5(5)*+36.46, adf6(6)*+64.98, adf7(7)*+66.28, adf8(8)*-20.44], 67.69)
result=p(); 0.8036253776435045
IndLenGenome:339
IndGenome:[83, 66, 44, 98, 26, 5, 15, 19, 95, 83, 93, 4, 10, 52, 27, 77, 98, 78, 20, 25, 65, 50, 75, 36, 48, 14, 68, 99, 1, 16, 60, 56, 93, 3, 82, 94, 53, 80, 15, 50, 87, 24, 7, 100, 83, 36, 83, 59, 81, 80, 69, 97, 98, 69, 80, 56, 72, 10, 96, 26, 99, 84, 19, 26, 74, 16, 31, 3, 97, 19, 75, 78, 45, 70, 21, 51, 36, 82, 38, 95, 42, 20, 12, 47, 22, 48, 48, 35, 62, 37, 78, 71, 39, 36, 85, 94, 66, 73, 94, 80, 64, 60, 87, 75, 75, 18, 56, 57, 35, 72, 50, 44, 55, 96, 28, 29, 56, 82, 83, 18, 80, 44, 32, 56, 28, 34, 78, 91, 80, 21, 57, 98, 97, 62, 78, 52, 24, 57, 62, 47, 93, 66, 70, 30, 25, 26, 78, 17, 60, 41, 64, 67, 68, 26, 51, 29, 38, 71, 74, 77, 16, 37, 86, 20, 75, 85, 52, 72, 65, 52, 64, 91, 37, 57, 18, 75, 59, 54, 79, 39, 50, 64, 41, 82, 47, 57, 68, 32, 75, 71, 50, 32, 83, 36, 69, 26, 67, 79, 9, 65, 36, 87, 83, 49, 94, 56, 13, 21, 93, 60, 82, 45, 77, 24, 83, 55, 26, 92, 61, 20, 17, 17, 88, 43, 49, 20, 99, 89, 8, 11, 69, 50, 50, 24, 87, 28, 93, 56, 47, 84, 33, 45, 44, 86, 84, 71, 95, 99, 60, 57, 43, 88, 90, 11, 36, 44, 84, 57, 61, 77, 80, 50, 60, 48, 9, 91, 94, 53, 85, 2, 90, 63, 2, 42, 96, 97, 5, 32, 64, 95, 7, 47, 80, 19, 82, 25, 54, 9, 56, 59, 62, 36, 2, 17, 77, 72, 40, 18, 98, 96, 66, 90, 82, 70, 74, 80, 84, 71, 72, 7, 62, 36, 89, 12, 68, 29, 73, 98, 7, 61, 27, 12, 16, 91, 34, 95, 12, 30, 1, 3, 71, 93, 33, 62, 69, 47, 45, 72, 25]
last_save: 100

Gen:251
last_save: 100
Exit:FalseFalseTrue

Gen:1
TrainFitness:0.8042168674698795
TestFitness:0.8055555555555556
MaxGenLen:400
Individual: def p():
  def adf0(index):
    if np.greater(x[index],24666.05652):
      return False
    else:
      return True
  def adf1(index):
    if np.less(x[index],80078.44439):
      return False
    else:
      return False
  def adf2(index):
    if np.greater(x[index],32807.94543):
      return False
    else:
      return True
  def adf3(index):
    if np.less(x[index],70780.52642):
      return True
    else:
      return False
  def adf4(index):
    if np.less(x[index],64640.94189):
      return False
    else:
      return False
  def adf5(index):
    if np.greater(x[index],89483.44341):
      return True
    else:
      return False
  def adf6(index):
    if np.greater(x[index],01190.12362):
      return True
    else:
      return False
  def adf7(index):
    if np.less(x[index],08250.78390):
      return True
    else:
      return False
  def adf8(index):
    if np.equal(x[index],81921.15131):
      return True
    else:
      return True
  return multiple_operation([adf0(0)*+83.32, adf1(1)*-53.17, adf2(2)*+60.04, adf3(3)*-18.19, adf4(4)*+41.76, adf5(5)*-38.27, adf6(6)*+69.85, adf7(7)*+91.14, adf8(8)*+37.36], 69.42)
result=p(); 0.8042168674698795
IndLenGenome:339
IndGenome:[58, 16, 11, 26, 82, 97, 71, 80, 80, 3, 20, 48, 10, 35, 43, 61, 95, 69, 27, 23, 53, 91, 61, 61, 40, 68, 60, 5, 44, 22, 20, 91, 10, 83, 3, 38, 25, 62, 56, 62, 99, 70, 63, 46, 46, 81, 35, 48, 57, 41, 19, 55, 85, 46, 36, 69, 46, 55, 15, 44, 76, 72, 33, 18, 70, 25, 49, 79, 50, 18, 54, 84, 9, 34, 18, 14, 34, 13, 54, 75, 81, 48, 74, 55, 42, 97, 51, 11, 63, 34, 86, 84, 73, 12, 65, 79, 30, 80, 6, 5, 27, 86, 26, 29, 10, 94, 11, 63, 38, 48, 51, 62, 68, 26, 49, 23, 68, 44, 26, 31, 70, 83, 79, 36, 96, 86, 65, 21, 81, 1, 24, 43, 37, 23, 63, 12, 74, 70, 44, 43, 20, 51, 35, 24, 33, 31, 81, 23, 28, 67, 4, 18, 59, 19, 41, 91, 54, 81, 25, 82, 72, 30, 10, 60, 25, 73, 22, 76, 22, 32, 98, 55, 62, 31, 51, 46, 39, 68, 97, 83, 63, 90, 36, 11, 20, 19, 39, 27, 48, 71, 13, 49, 18, 95, 16, 19, 37, 30, 10, 14, 46, 93, 37, 94, 65, 98, 34, 59, 99, 26, 16, 58, 45, 58, 19, 99, 14, 74, 70, 64, 40, 71, 20, 82, 31, 27, 15, 67, 22, 94, 86, 69, 83, 79, 93, 34, 4, 32, 25, 22, 97, 85, 15, 59, 47, 69, 4, 5, 2, 87, 94, 39, 13, 16, 26, 66, 28, 94, 93, 1, 20, 88, 63, 17, 61, 57, 26, 75, 45, 70, 12, 9, 6, 27, 100, 9, 100, 27, 82, 80, 69, 78, 68, 1, 29, 22, 20, 56, 22, 32, 61, 100, 57, 81, 65, 18, 29, 99, 8, 68, 43, 19, 73, 39, 52, 37, 93, 96, 59, 51, 30, 71, 75, 66, 31, 59, 51, 31, 94, 62, 14, 26, 76, 91, 48, 70, 70, 52, 21, 13, 61, 40, 73, 10, 94, 95, 72, 73, 93]
last_save: 100

Gen:142
TrainFitness:0.8072289156626506
TestFitness:0.8055555555555556
MaxGenLen:430
Individual: def p():
  def adf0(index):
    if np.greater(x[index],14504.56077):
      return False
    else:
      return True
  def adf1(index):
    if np.less(x[index],05064.52155):
      if np.equal(x[index],34490.18120):
        if np.less(x[index],23705.88043):
          return False
        else:
          return False
      else:
        if np.greater(x[index],98979.70881):
          return True
        else:
          return False
    else:
      if np.less(x[index],57480.02376):
        if np.equal(x[index],42784.82092):
          return True
        else:
          return True
      else:
        if np.equal(x[index],85032.50338):
          return False
        else:
          return True
  def adf2(index):
    if np.equal(x[index],00048.86484):
      return True
    else:
      return False
  def adf3(index):
    if np.greater(x[index],52311.34643):
      return True
    else:
      return False
  def adf4(index):
    if np.equal(x[index],04088.86274):
      return True
    else:
      return False
  def adf5(index):
    if np.greater(x[index],52711.34643):
      return False
    else:
      return False
  def adf6(index):
    if np.less(x[index],76690.41381):
      return False
    else:
      return True
  def adf7(index):
    if np.equal(x[index],96103.96625):
      if np.greater(x[index],43733.24043):
        return True
      else:
        return False
    else:
      if np.greater(x[index],11387.41690):
        return False
      else:
        return True
  def adf8(index):
    if np.greater(x[index],00532.67285):
      return True
    else:
      return False
  return multiple_operation([adf0(0)*+37.06, adf1(1)*+97.81, adf2(2)*-50.97, adf3(3)*-63.74, adf4(4)*+99.66, adf5(5)*-99.44, adf6(6)*+10.21, adf7(7)*-24.69, adf8(8)*-85.27], 94.61)
result=p(); 0.8072289156626506
IndLenGenome:404
IndGenome:[54, 71, 36, 75, 92, 60, 20, 71, 74, 95, 30, 74, 45, 66, 80, 47, 87, 39, 36, 74, 67, 75, 19, 41, 60, 75, 60, 26, 14, 85, 2, 51, 35, 5, 28, 62, 37, 23, 64, 74, 59, 10, 71, 78, 71, 12, 90, 21, 67, 39, 2, 43, 27, 50, 25, 78, 48, 20, 64, 93, 89, 85, 87, 45, 88, 89, 38, 29, 7, 49, 17, 90, 78, 58, 51, 4, 83, 62, 40, 19, 5, 77, 44, 18, 10, 20, 82, 63, 37, 96, 26, 95, 72, 24, 72, 17, 8, 74, 18, 82, 10, 79, 42, 84, 40, 99, 95, 27, 18, 65, 90, 83, 92, 55, 20, 63, 33, 18, 15, 20, 36, 55, 78, 89, 28, 20, 20, 60, 64, 68, 78, 16, 34, 18, 14, 34, 13, 54, 75, 81, 48, 74, 95, 42, 33, 51, 11, 63, 34, 86, 84, 73, 12, 65, 79, 30, 78, 89, 15, 20, 84, 60, 58, 88, 78, 16, 92, 17, 14, 34, 5, 25, 75, 81, 48, 74, 55, 42, 97, 51, 11, 63, 34, 86, 84, 73, 67, 65, 79, 30, 80, 91, 5, 27, 86, 26, 29, 10, 94, 11, 63, 38, 11, 51, 62, 68, 26, 86, 23, 68, 49, 26, 31, 70, 83, 79, 36, 96, 22, 65, 21, 81, 1, 24, 43, 37, 23, 63, 12, 74, 70, 44, 43, 20, 51, 72, 24, 33, 31, 81, 23, 28, 67, 4, 71, 86, 19, 10, 91, 54, 81, 25, 82, 72, 30, 10, 80, 25, 73, 22, 76, 67, 32, 98, 55, 62, 31, 51, 16, 9, 68, 97, 83, 87, 90, 36, 11, 20, 19, 39, 27, 48, 71, 13, 49, 18, 95, 0, 19, 37, 52, 79, 35, 46, 93, 37, 94, 96, 98, 34, 59, 99, 36, 16, 58, 45, 58, 19, 99, 14, 64, 70, 64, 40, 71, 20, 82, 31, 27, 15, 67, 22, 94, 86, 69, 83, 47, 69, 78, 5, 2, 97, 94, 39, 94, 16, 61, 66, 28, 94, 93, 1, 20, 88, 63, 93, 61, 57, 88, 75, 35, 70, 50, 9, 6, 27, 100, 9, 100, 27, 82, 74, 69, 2, 68, 1, 29, 22, 10, 56, 22, 32, 96, 59, 51, 30, 71, 75, 66, 1, 59, 51, 31, 94, 62, 14, 26, 76, 91, 48, 14, 70, 52, 21, 13, 61, 40, 73, 10, 94, 95, 72, 73, 93]
last_save: 100

Gen:149
TrainFitness:0.8102409638554217
TestFitness:0.8055555555555556
MaxGenLen:430
Individual: def p():
  def adf0(index):
    if np.greater(x[index],14504.56077):
      return False
    else:
      return True
  def adf1(index):
    if np.less(x[index],05014.52155):
      if np.equal(x[index],34490.18120):
        if np.less(x[index],23785.88043):
          return False
        else:
          return False
      else:
        if np.greater(x[index],98979.70881):
          return True
        else:
          return False
    else:
      if np.less(x[index],57480.02376):
        if np.equal(x[index],42784.82092):
          return True
        else:
          return True
      else:
        if np.equal(x[index],85032.50338):
          return False
        else:
          return True
  def adf2(index):
    if np.equal(x[index],00048.86484):
      return True
    else:
      return False
  def adf3(index):
    if np.greater(x[index],52311.34653):
      return True
    else:
      return False
  def adf4(index):
    if np.equal(x[index],04088.86274):
      return True
    else:
      return False
  def adf5(index):
    if np.greater(x[index],52711.34643):
      return False
    else:
      return False
  def adf6(index):
    if np.less(x[index],76690.41381):
      return False
    else:
      return True
  def adf7(index):
    if np.equal(x[index],92103.96625):
      if np.greater(x[index],43733.24043):
        return True
      else:
        return False
    else:
      if np.greater(x[index],11387.41690):
        return False
      else:
        return True
  def adf8(index):
    if np.greater(x[index],00532.07285):
      return True
    else:
      return False
  return multiple_operation([adf0(0)*+37.06, adf1(1)*+97.81, adf2(2)*-50.97, adf3(3)*-63.74, adf4(4)*+99.66, adf5(5)*-99.44, adf6(6)*+10.21, adf7(7)*-24.69, adf8(8)*-85.27], 94.61)
result=p(); 0.8102409638554217
IndLenGenome:404
IndGenome:[54, 71, 36, 75, 92, 60, 20, 71, 74, 95, 30, 74, 45, 66, 80, 47, 87, 39, 36, 74, 67, 75, 19, 41, 60, 75, 60, 21, 14, 85, 2, 51, 35, 5, 28, 62, 37, 23, 64, 74, 59, 10, 71, 78, 71, 12, 90, 21, 67, 39, 2, 43, 27, 68, 25, 78, 48, 20, 64, 93, 89, 85, 87, 45, 88, 89, 38, 29, 7, 49, 17, 90, 78, 58, 51, 4, 83, 62, 40, 19, 5, 77, 44, 18, 10, 20, 82, 63, 37, 96, 26, 95, 72, 24, 72, 17, 8, 74, 18, 82, 10, 79, 42, 84, 40, 99, 95, 27, 18, 65, 90, 83, 92, 55, 20, 63, 33, 18, 15, 20, 36, 55, 78, 89, 28, 20, 20, 60, 64, 68, 78, 16, 34, 18, 14, 34, 13, 54, 75, 81, 48, 74, 95, 42, 33, 51, 11, 63, 34, 86, 65, 73, 12, 65, 79, 30, 78, 89, 15, 20, 84, 60, 58, 88, 78, 16, 92, 17, 14, 34, 5, 25, 75, 81, 48, 74, 55, 42, 97, 51, 11, 63, 34, 86, 84, 73, 67, 65, 79, 30, 80, 91, 5, 27, 86, 26, 29, 10, 94, 11, 63, 38, 11, 51, 62, 68, 26, 86, 23, 68, 49, 82, 31, 70, 83, 79, 36, 96, 22, 65, 21, 81, 1, 24, 43, 37, 23, 63, 12, 74, 70, 44, 43, 20, 51, 72, 24, 33, 31, 81, 23, 28, 67, 4, 71, 86, 19, 10, 91, 54, 81, 25, 82, 72, 30, 10, 80, 25, 73, 22, 50, 67, 32, 98, 55, 62, 31, 51, 16, 9, 68, 97, 83, 87, 90, 36, 11, 20, 19, 39, 27, 48, 71, 13, 49, 18, 95, 0, 19, 37, 52, 79, 35, 46, 93, 37, 94, 96, 98, 34, 59, 99, 36, 16, 58, 45, 58, 19, 99, 14, 64, 70, 64, 40, 71, 20, 82, 31, 27, 15, 67, 22, 94, 86, 69, 83, 47, 69, 78, 5, 2, 97, 94, 39, 94, 16, 61, 66, 28, 94, 93, 1, 20, 88, 63, 93, 61, 57, 88, 75, 35, 70, 50, 9, 6, 27, 100, 9, 100, 27, 82, 74, 69, 2, 68, 1, 29, 22, 10, 56, 22, 32, 96, 59, 51, 30, 71, 75, 66, 1, 59, 51, 31, 94, 62, 14, 26, 76, 91, 48, 14, 70, 52, 21, 13, 61, 40, 73, 10, 94, 95, 72, 73, 93]
last_save: 100

Gen:399
last_save: 100
Exit:FalseFalseTrue

Gen:1
TrainFitness:0.8042168674698795
TestFitness:0.8055555555555556
MaxGenLen:400
Individual: def p():
  def adf0(index):
    if np.equal(x[index],99364.06582):
      return False
    else:
      return True
  def adf1(index):
    if np.greater(x[index],47251.43860):
      return True
    else:
      return True
  def adf2(index):
    if np.greater(x[index],48748.74424):
      return True
    else:
      return False
  def adf3(index):
    if np.greater(x[index],30229.01240):
      return False
    else:
      return True
  def adf4(index):
    if np.greater(x[index],66949.76121):
      return False
    else:
      return False
  def adf5(index):
    if np.equal(x[index],46377.28607):
      return False
    else:
      return False
  def adf6(index):
    if np.less(x[index],90370.95752):
      return True
    else:
      return True
  def adf7(index):
    if np.less(x[index],06238.96821):
      return True
    else:
      return True
  def adf8(index):
    if np.less(x[index],61011.62642):
      return False
    else:
      return False
  return multiple_operation([adf0(0)*+21.20, adf1(1)*+52.24, adf2(2)*-17.76, adf3(3)*+88.95, adf4(4)*-01.71, adf5(5)*+06.87, adf6(6)*-20.33, adf7(7)*+25.29, adf8(8)*-07.61], 81.22)
result=p(); 0.8042168674698795
IndLenGenome:339
IndGenome:[11, 94, 15, 76, 7, 40, 87, 45, 61, 21, 45, 6, 39, 40, 75, 96, 32, 10, 54, 43, 67, 64, 18, 66, 46, 70, 88, 41, 30, 75, 10, 60, 91, 87, 86, 42, 44, 42, 90, 97, 77, 84, 63, 28, 1, 69, 71, 21, 2, 70, 16, 95, 56, 50, 61, 28, 43, 4, 44, 76, 14, 81, 53, 28, 63, 17, 99, 51, 72, 93, 53, 56, 92, 41, 10, 92, 31, 11, 44, 40, 38, 96, 28, 80, 61, 57, 87, 50, 13, 94, 46, 36, 97, 12, 18, 5, 71, 76, 68, 31, 27, 91, 68, 54, 27, 52, 86, 10, 72, 64, 83, 14, 53, 97, 41, 85, 61, 16, 34, 62, 38, 93, 89, 55, 82, 59, 20, 24, 91, 79, 52, 14, 79, 69, 10, 57, 40, 90, 87, 35, 90, 16, 96, 62, 58, 29, 30, 12, 87, 92, 82, 74, 89, 82, 86, 18, 28, 46, 87, 71, 36, 42, 21, 68, 43, 37, 47, 28, 63, 45, 96, 50, 40, 88, 70, 44, 60, 32, 82, 71, 69, 46, 39, 57, 28, 32, 65, 82, 60, 55, 73, 85, 72, 80, 31, 45, 50, 5, 87, 42, 87, 56, 7, 24, 56, 52, 61, 89, 77, 71, 26, 49, 21, 93, 48, 7, 64, 62, 58, 14, 28, 27, 14, 67, 44, 14, 17, 13, 39, 22, 37, 78, 24, 9, 46, 67, 71, 65, 94, 0, 97, 45, 57, 3, 61, 25, 44, 4, 47, 4, 40, 81, 19, 1, 11, 3, 81, 10, 56, 82, 62, 55, 92, 78, 93, 96, 12, 96, 92, 23, 5, 21, 73, 26, 97, 2, 51, 53, 75, 46, 2, 29, 91, 16, 98, 95, 46, 89, 86, 94, 59, 82, 13, 20, 65, 39, 33, 53, 43, 43, 56, 77, 60, 16, 39, 54, 10, 91, 4, 33, 95, 84, 15, 40, 26, 21, 61, 80, 85, 53, 62, 12, 18, 48, 0, 19, 2, 35, 18, 72, 12, 40, 46, 20, 46, 66, 21, 30, 86]
last_save: 100

Gen:251
last_save: 100
Exit:FalseFalseTrue

Gen:1
TrainFitness:0.8072289156626506
TestFitness:0.8055555555555556
MaxGenLen:400
Individual: def p():
  def adf0(index):
    if np.less(x[index],03027.68140):
      if np.equal(x[index],20619.10017):
        return False
      else:
        return False
    else:
      if np.greater(x[index],20250.03886):
        return False
      else:
        return True
  def adf1(index):
    if np.equal(x[index],65745.28731):
      if np.greater(x[index],52301.68688):
        return True
      else:
        return False
    else:
      if np.less(x[index],21703.65956):
        return True
      else:
        return True
  def adf2(index):
    if np.equal(x[index],91762.34184):
      if np.less(x[index],23061.72808):
        return True
      else:
        return False
    else:
      if np.equal(x[index],24686.64413):
        return True
      else:
        return True
  def adf3(index):
    if np.less(x[index],21794.82698):
      if np.less(x[index],01754.92642):
        return True
      else:
        return False
    else:
      if np.equal(x[index],98672.95778):
        return False
      else:
        return False
  def adf4(index):
    if np.greater(x[index],89390.87741):
      if np.greater(x[index],39011.32745):
        return False
      else:
        return False
    else:
      if np.less(x[index],83025.44898):
        return True
      else:
        return False
  def adf5(index):
    if np.equal(x[index],68349.90041):
      if np.less(x[index],51722.50868):
        return False
      else:
        return False
    else:
      if np.less(x[index],63116.86088):
        return True
      else:
        return True
  def adf6(index):
    if np.equal(x[index],96508.92738):
      if np.equal(x[index],70014.32665):
        return True
      else:
        return True
    else:
      if np.less(x[index],53149.78265):
        return False
      else:
        return True
  def adf7(index):
    if np.equal(x[index],99700.94116):
      if np.less(x[index],63874.08310):
        return False
      else:
        return True
    else:
      if np.less(x[index],28339.07726):
        return False
      else:
        return True
  def adf8(index):
    if np.equal(x[index],70247.70941):
      if np.equal(x[index],09028.48646):
        return False
      else:
        return False
    else:
      if np.less(x[index],52850.61409):
        return True
      else:
        return False
  return multiple_operation([adf0(0)*+78.66, adf1(1)*-26.44, adf2(2)*+91.95, adf3(3)*-00.59, adf4(4)*-98.00, adf5(5)*+62.30, adf6(6)*+74.26, adf7(7)*-59.00, adf8(8)*-90.23], 03.84)
result=p(); 0.8072289156626506
IndLenGenome:717
IndGenome:[39, 82, 33, 29, 22, 99, 79, 45, 61, 91, 85, 81, 1, 47, 47, 88, 75, 36, 36, 61, 93, 46, 52, 60, 41, 30, 90, 6, 99, 40, 58, 24, 39, 22, 78, 36, 86, 85, 82, 20, 21, 71, 34, 13, 31, 62, 42, 85, 43, 40, 76, 24, 39, 30, 95, 53, 46, 9, 89, 39, 41, 80, 72, 81, 39, 50, 30, 82, 87, 56, 57, 80, 28, 11, 30, 65, 30, 62, 101, 44, 14, 72, 19, 81, 55, 12, 49, 77, 27, 4, 79, 42, 79, 29, 17, 93, 96, 50, 83, 55, 72, 23, 81, 99, 10, 30, 65, 72, 71, 98, 50, 76, 38, 63, 58, 74, 90, 64, 21, 86, 14, 10, 73, 88, 26, 45, 10, 46, 45, 2, 10, 48, 31, 45, 50, 74, 87, 33, 62, 34, 42, 40, 98, 87, 61, 60, 76, 71, 97, 17, 85, 45, 52, 31, 46, 93, 62, 71, 80, 99, 79, 26, 46, 43, 10, 39, 46, 11, 22, 85, 77, 23, 25, 21, 88, 68, 93, 71, 39, 67, 36, 22, 76, 67, 71, 79, 53, 80, 54, 44, 30, 19, 87, 20, 76, 86, 61, 87, 99, 38, 20, 22, 47, 20, 79, 31, 14, 36, 91, 72, 23, 93, 50, 85, 79, 90, 85, 31, 16, 16, 62, 76, 71, 55, 93, 68, 87, 40, 18, 76, 27, 82, 14, 79, 31, 10, 86, 66, 48, 48, 30, 95, 77, 43, 94, 41, 50, 91, 90, 47, 28, 54, 55, 88, 57, 99, 71, 51, 27, 25, 71, 78, 34, 11, 30, 77, 26, 14, 35, 67, 66, 98, 63, 73, 8, 17, 24, 59, 66, 28, 95, 52, 5, 10, 20, 45, 24, 26, 39, 17, 18, 9, 44, 36, 91, 83, 85, 31, 73, 67, 14, 26, 36, 35, 32, 3, 43, 46, 69, 32, 53, 77, 90, 27, 61, 70, 69, 92, 38, 33, 29, 24, 98, 46, 80, 13, 17, 20, 27, 92, 69, 38, 56, 22, 31, 72, 44, 27, 12, 53, 58, 80, 78, 96, 40, 61, 60, 96, 71, 36, 50, 7, 87, 98, 65, 21, 42, 76, 99, 78, 99, 70, 81, 78, 45, 62, 68, 89, 83, 87, 13, 80, 51, 56, 62, 89, 60, 94, 60, 77, 57, 79, 98, 70, 87, 78, 94, 33, 58, 80, 64, 5, 26, 98, 39, 59, 75, 46, 76, 72, 12, 37, 71, 72, 63, 71, 94, 4, 79, 18, 65, 32, 11, 16, 19, 41, 32, 30, 34, 97, 28, 13, 30, 10, 65, 52, 96, 18, 38, 64, 75, 10, 69, 28, 32, 21, 49, 62, 38, 20, 45, 16, 37, 49, 87, 74, 19, 80, 93, 46, 28, 64, 49, 42, 76, 73, 87, 35, 97, 64, 36, 87, 40, 90, 11, 84, 52, 56, 47, 31, 44, 74, 99, 75, 22, 82, 30, 39, 47, 15, 53, 49, 2, 15, 30, 92, 23, 50, 12, 91, 9, 20, 92, 30, 51, 36, 14, 69, 79, 66, 27, 5, 97, 25, 87, 43, 39, 14, 52, 30, 92, 17, 7, 62, 36, 27, 96, 94, 61, 2, 74, 42, 85, 29, 25, 32, 29, 50, 6, 6, 10, 47, 88, 73, 59, 83, 96, 96, 76, 6, 52, 76, 59, 62, 57, 3, 47, 10, 24, 11, 7, 80, 37, 62, 22, 39, 22, 84, 25, 49, 53, 52, 49, 36, 51, 53, 23, 66, 68, 57, 59, 53, 69, 18, 44, 91, 65, 13, 12, 23, 49, 5, 70, 15, 9, 68, 99, 1, 84, 44, 91, 3, 83, 87, 26, 84, 84, 79, 80, 40, 84, 63, 42, 39, 32, 93, 36, 61, 99, 2, 12, 3, 22, 64, 32, 47, 33, 69, 33, 79, 81, 75, 1, 0, 25, 35, 98, 71, 7, 5, 58, 28, 76, 4, 15, 41, 17, 80, 2, 1, 50, 61, 64, 86, 87, 55, 32, 84, 70, 34, 43, 93, 30, 46, 42, 72, 68, 70, 27, 22, 100, 54, 18, 44, 8, 85, 90, 47, 84, 29, 96, 33, 6, 41, 10, 100, 58, 28, 90, 51, 19, 55, 23, 75, 36, 3, 80, 17, 10, 58, 96, 18, 43, 94, 61, 62, 2, 73, 26, 20, 56, 86, 46, 39, 90, 85, 89, 33, 32, 83, 67, 77, 10, 88, 13, 54, 92]
last_save: 100

Gen:251
last_save: 100
Exit:FalseFalseTrue

Gen:1
TrainFitness:0.8042168674698795
TestFitness:0.8055555555555556
MaxGenLen:400
Individual: def p():
  def adf0(index):
    if np.equal(x[index],61143.57711):
      return False
    else:
      return True
  def adf1(index):
    if np.greater(x[index],91215.99385):
      return False
    else:
      return False
  def adf2(index):
    if np.greater(x[index],75876.87125):
      return False
    else:
      return True
  def adf3(index):
    if np.less(x[index],05292.76208):
      return True
    else:
      return True
  def adf4(index):
    if np.less(x[index],71523.14050):
      return True
    else:
      return False
  def adf5(index):
    if np.greater(x[index],76441.04484):
      return False
    else:
      return True
  def adf6(index):
    if np.equal(x[index],45222.41368):
      return False
    else:
      return False
  def adf7(index):
    if np.greater(x[index],05166.50372):
      return False
    else:
      return False
  def adf8(index):
    if np.greater(x[index],15915.92004):
      return False
    else:
      return False
  return multiple_operation([adf0(0)*+90.36, adf1(1)*+84.62, adf2(2)*+55.18, adf3(3)*-43.32, adf4(4)*+09.41, adf5(5)*+54.02, adf6(6)*+28.20, adf7(7)*-60.56, adf8(8)*-53.83], 81.79)
result=p(); 0.8042168674698795
IndLenGenome:339
IndGenome:[29, 24, 25, 19, 41, 61, 70, 93, 75, 43, 85, 32, 49, 38, 99, 34, 6, 30, 18, 66, 35, 50, 50, 62, 19, 81, 78, 52, 16, 53, 49, 20, 60, 15, 45, 19, 18, 87, 85, 57, 43, 78, 70, 12, 63, 16, 72, 45, 67, 79, 33, 31, 60, 21, 25, 41, 32, 20, 59, 69, 86, 28, 75, 59, 6, 15, 45, 36, 21, 85, 63, 14, 74, 72, 88, 53, 42, 40, 85, 41, 98, 10, 82, 20, 68, 42, 35, 41, 61, 97, 33, 35, 23, 8, 29, 35, 63, 45, 77, 21, 38, 25, 9, 34, 4, 42, 99, 91, 64, 16, 56, 37, 84, 82, 50, 54, 80, 92, 54, 84, 93, 89, 37, 36, 36, 93, 22, 92, 60, 42, 59, 79, 27, 68, 65, 29, 64, 53, 75, 43, 52, 20, 17, 89, 98, 38, 51, 11, 75, 30, 26, 71, 34, 16, 56, 32, 67, 83, 52, 13, 18, 76, 85, 11, 39, 21, 31, 64, 21, 54, 24, 48, 90, 75, 52, 88, 86, 72, 45, 50, 40, 47, 32, 23, 94, 65, 13, 84, 12, 37, 37, 50, 45, 23, 50, 85, 91, 36, 47, 30, 22, 5, 61, 96, 11, 86, 32, 52, 40, 6, 26, 63, 11, 41, 11, 21, 63, 81, 87, 34, 15, 51, 40, 16, 25, 27, 43, 8, 3, 50, 8, 21, 64, 77, 2, 83, 47, 8, 21, 22, 20, 44, 92, 42, 23, 86, 89, 3, 18, 95, 33, 22, 99, 62, 77, 61, 100, 74, 48, 50, 91, 81, 22, 25, 78, 36, 81, 55, 43, 84, 87, 17, 5, 54, 73, 35, 3, 72, 27, 76, 32, 12, 54, 100, 42, 50, 56, 28, 16, 16, 16, 89, 92, 11, 30, 44, 10, 95, 30, 92, 58, 76, 4, 75, 8, 58, 30, 84, 17, 67, 76, 31, 94, 5, 78, 82, 25, 97, 86, 84, 55, 82, 20, 74, 95, 44, 81, 78, 73, 77, 43, 72, 67, 32, 89, 87, 90, 66, 80]
last_save: 100

Gen:251
last_save: 100
Exit:FalseFalseTrue