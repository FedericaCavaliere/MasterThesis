Dataset:Spiral/new_Full.csv
FS:False
Seed:1235
Size:3

Gen:1
TrainFitness:0.8040816326530612
TestFitness:0.8048780487804879
MaxGenLen:400
Individual: def p():
  def adf0(index):
    if np.less(x[index],60062.33702):
      return True
    else:
      return True
  def adf1(index):
    if np.equal(x[index],45073.40604):
      return False
    else:
      return True
  def adf2(index):
    if np.greater(x[index],92524.23283):
      return False
    else:
      return False
  def adf3(index):
    if np.less(x[index],46415.86249):
      return False
    else:
      return True
  def adf4(index):
    if np.less(x[index],02657.94829):
      return False
    else:
      return True
  def adf5(index):
    if np.less(x[index],03857.42868):
      return False
    else:
      return True
  def adf6(index):
    if np.greater(x[index],51748.08403):
      return False
    else:
      return True
  def adf7(index):
    if np.less(x[index],91390.40518):
      return False
    else:
      return True
  def adf8(index):
    if np.less(x[index],71926.76349):
      return True
    else:
      return True
  return multiple_operation([adf0(0)*+55.66, adf1(1)*+47.34, adf2(2)*+72.64, adf3(3)*+75.43, adf4(4)*+52.18, adf5(5)*-67.41, adf6(6)*-67.56, adf7(7)*+40.39, adf8(8)*+84.94], 30.19)
result=p(); 0.8040816326530612
IndLenGenome:339
IndGenome:[5, 93, 6, 49, 14, 23, 79, 30, 65, 15, 70, 19, 7, 65, 40, 38, 22, 68, 24, 4, 24, 70, 99, 24, 67, 7, 42, 35, 53, 28, 39, 96, 20, 36, 88, 25, 85, 20, 68, 74, 44, 45, 39, 23, 16, 48, 30, 14, 99, 96, 34, 70, 71, 5, 43, 82, 51, 14, 63, 72, 82, 83, 73, 7, 58, 97, 11, 35, 30, 51, 24, 89, 19, 20, 40, 50, 23, 98, 60, 46, 11, 45, 28, 83, 37, 79, 32, 9, 12, 10, 47, 75, 74, 95, 99, 58, 36, 62, 65, 97, 90, 96, 37, 43, 53, 40, 94, 66, 82, 89, 57, 39, 66, 21, 87, 61, 92, 20, 11, 84, 48, 15, 22, 94, 69, 94, 93, 30, 4, 81, 87, 90, 58, 79, 51, 46, 17, 16, 64, 22, 41, 26, 83, 1, 58, 47, 50, 65, 32, 98, 34, 48, 71, 74, 54, 34, 20, 29, 68, 77, 62, 82, 53, 14, 22, 26, 72, 44, 77, 29, 96, 26, 79, 54, 35, 52, 61, 96, 48, 14, 23, 55, 77, 34, 36, 99, 90, 56, 85, 40, 83, 97, 12, 11, 40, 4, 35, 75, 86, 94, 83, 16, 52, 66, 47, 57, 39, 94, 21, 12, 24, 50, 43, 66, 16, 90, 52, 84, 93, 33, 95, 86, 37, 64, 18, 24, 68, 23, 82, 22, 93, 71, 93, 92, 42, 96, 46, 97, 50, 81, 2, 49, 10, 56, 25, 72, 50, 98, 45, 74, 38, 33, 47, 97, 1, 98, 46, 34, 40, 83, 57, 79, 69, 77, 40, 80, 57, 0, 76, 94, 17, 30, 48, 6, 38, 79, 76, 52, 50, 29, 5, 55, 47, 80, 63, 74, 86, 20, 48, 81, 6, 38, 67, 26, 24, 35, 69, 60, 100, 2, 23, 77, 92, 63, 60, 97, 64, 19, 7, 79, 44, 10, 37, 30, 61, 13, 39, 60, 22, 45, 24, 46, 40, 64, 49, 63, 87, 83, 97, 4, 30, 84, 45, 59, 54, 71, 89, 74, 45]
last_save: 31

Gen:251
last_save: 31
Exit:FalseFalseTrue

Gen:1
TrainFitness:0.8040816326530612
TestFitness:0.8048780487804879
MaxGenLen:400
Individual: def p():
  def adf0(index):
    if np.equal(x[index],51006.63782):
      return True
    else:
      return True
  def adf1(index):
    if np.less(x[index],99452.71463):
      return True
    else:
      return True
  def adf2(index):
    if np.greater(x[index],65092.66437):
      return False
    else:
      return False
  def adf3(index):
    if np.greater(x[index],89838.35138):
      return False
    else:
      return True
  def adf4(index):
    if np.equal(x[index],64045.53754):
      return False
    else:
      return False
  def adf5(index):
    if np.less(x[index],67713.24532):
      return False
    else:
      return False
  def adf6(index):
    if np.less(x[index],55497.01060):
      return False
    else:
      return False
  def adf7(index):
    if np.equal(x[index],89011.96102):
      return True
    else:
      return False
  def adf8(index):
    if np.less(x[index],40485.96266):
      return True
    else:
      return True
  return multiple_operation([adf0(0)*+80.13, adf1(1)*+31.55, adf2(2)*-40.54, adf3(3)*-63.94, adf4(4)*-18.57, adf5(5)*+06.98, adf6(6)*+50.16, adf7(7)*-54.07, adf8(8)*+58.69], 51.52)
result=p(); 0.8040816326530612
IndLenGenome:339
IndGenome:[88, 64, 54, 90, 3, 20, 50, 25, 50, 80, 86, 70, 38, 52, 51, 56, 68, 45, 21, 64, 11, 14, 34, 25, 22, 42, 22, 38, 25, 11, 97, 4, 29, 65, 69, 75, 17, 17, 75, 14, 37, 68, 16, 21, 79, 6, 55, 13, 35, 12, 83, 42, 45, 24, 64, 24, 55, 45, 79, 63, 94, 65, 93, 58, 34, 33, 52, 23, 60, 96, 78, 98, 40, 80, 36, 34, 56, 25, 65, 34, 81, 52, 63, 40, 71, 35, 91, 33, 60, 65, 56, 66, 81, 57, 56, 24, 54, 23, 47, 11, 53, 74, 78, 99, 38, 53, 67, 16, 66, 77, 4, 86, 2, 38, 49, 74, 89, 68, 12, 46, 98, 55, 79, 34, 66, 85, 44, 78, 27, 93, 15, 1, 42, 49, 39, 84, 29, 50, 62, 67, 10, 73, 36, 40, 10, 46, 94, 44, 18, 80, 26, 79, 74, 29, 18, 77, 65, 82, 90, 76, 78, 51, 21, 34, 12, 37, 13, 87, 79, 47, 86, 59, 35, 71, 64, 71, 50, 91, 71, 66, 66, 77, 37, 85, 33, 30, 70, 89, 82, 14, 75, 85, 66, 46, 21, 47, 39, 59, 89, 4, 60, 70, 58, 45, 21, 57, 16, 40, 25, 70, 11, 19, 18, 50, 14, 86, 65, 98, 80, 41, 81, 72, 91, 45, 93, 65, 95, 71, 10, 30, 5, 23, 36, 18, 63, 66, 46, 11, 53, 88, 83, 97, 95, 57, 35, 82, 24, 39, 76, 27, 7, 35, 60, 37, 40, 32, 41, 74, 10, 17, 14, 74, 76, 22, 70, 32, 40, 44, 11, 7, 32, 30, 78, 100, 83, 66, 64, 99, 36, 63, 57, 85, 31, 6, 54, 73, 30, 40, 82, 13, 82, 100, 54, 29, 57, 92, 66, 95, 8, 55, 2, 25, 64, 42, 32, 77, 54, 65, 96, 47, 81, 93, 62, 66, 93, 48, 81, 24, 61, 5, 89, 66, 18, 9, 36, 19, 64, 18, 64, 52, 94, 31, 79, 69, 95, 88, 42, 57, 8]
last_save: 31

Gen:251
last_save: 31
Exit:FalseFalseTrue

Gen:1
TrainFitness:0.8048780487804879
TestFitness:0.8032786885245902
MaxGenLen:400
Individual: def p():
  def adf0(index):
    if np.equal(x[index],17991.09313):
      return True
    else:
      return False
  def adf1(index):
    if np.equal(x[index],03164.59772):
      return True
    else:
      return False
  def adf2(index):
    if np.equal(x[index],83449.45705):
      return False
    else:
      return False
  def adf3(index):
    if np.less(x[index],56722.47944):
      return True
    else:
      return False
  def adf4(index):
    if np.equal(x[index],04168.39500):
      return True
    else:
      return True
  def adf5(index):
    if np.equal(x[index],55543.53979):
      return False
    else:
      return True
  def adf6(index):
    if np.equal(x[index],67565.76566):
      return False
    else:
      return False
  def adf7(index):
    if np.equal(x[index],06138.15733):
      return True
    else:
      return True
  def adf8(index):
    if np.greater(x[index],51451.47330):
      return True
    else:
      return True
  return multiple_operation([adf0(0)*-26.64, adf1(1)*+86.77, adf2(2)*+07.12, adf3(3)*-22.49, adf4(4)*+41.67, adf5(5)*+99.39, adf6(6)*-72.01, adf7(7)*-38.02, adf8(8)*+33.82], 04.16)
result=p(); 0.8048780487804879
IndLenGenome:339
IndGenome:[30, 88, 16, 95, 99, 11, 15, 5, 34, 70, 45, 14, 8, 35, 35, 72, 43, 35, 79, 80, 5, 84, 53, 77, 78, 96, 75, 90, 91, 3, 97, 74, 78, 74, 90, 44, 12, 59, 45, 61, 38, 96, 67, 79, 34, 77, 51, 27, 54, 13, 90, 19, 73, 95, 65, 70, 49, 25, 26, 64, 79, 10, 87, 92, 17, 28, 32, 20, 90, 56, 91, 51, 44, 87, 16, 63, 1, 49, 24, 17, 75, 60, 67, 52, 50, 68, 37, 49, 91, 34, 82, 63, 36, 95, 63, 90, 57, 42, 42, 29, 26, 16, 77, 72, 16, 42, 74, 64, 15, 96, 95, 71, 27, 63, 57, 60, 48, 67, 61, 14, 60, 81, 86, 19, 26, 51, 85, 69, 24, 81, 66, 15, 99, 59, 22, 22, 94, 79, 35, 35, 81, 70, 73, 10, 29, 18, 93, 47, 99, 40, 76, 22, 66, 44, 79, 36, 52, 58, 57, 96, 72, 45, 60, 93, 77, 45, 23, 45, 2, 55, 66, 83, 28, 65, 58, 46, 81, 24, 77, 67, 37, 71, 45, 53, 54, 10, 43, 96, 29, 33, 69, 67, 29, 50, 80, 66, 32, 92, 65, 41, 24, 81, 95, 84, 97, 94, 80, 24, 17, 75, 61, 35, 53, 23, 68, 76, 61, 83, 13, 86, 65, 80, 13, 91, 68, 47, 94, 93, 75, 10, 81, 27, 64, 34, 55, 58, 61, 6, 58, 83, 67, 21, 17, 34, 14, 72, 74, 11, 100, 41, 33, 31, 29, 35, 87, 44, 18, 81, 25, 27, 41, 12, 80, 29, 33, 9, 94, 29, 39, 37, 25, 80, 12, 71, 8, 83, 90, 92, 100, 56, 31, 8, 87, 20, 19, 56, 5, 75, 24, 98, 35, 23, 49, 47, 25, 8, 34, 24, 76, 2, 88, 9, 60, 1, 46, 26, 81, 69, 66, 6, 41, 24, 98, 19, 71, 22, 38, 50, 14, 8, 91, 42, 81, 7, 14, 71, 48, 63, 31, 41, 82, 62, 30, 44, 24, 89, 93, 33, 15]
last_save: 31

Gen:251
last_save: 31
Exit:FalseFalseTrue